
> nextchapter@1.0.0 test
> jest --coverage --silent

FAIL src/test-utils/__tests__/test-helpers.test.tsx
  ● test-helpers › renderWithProviders › should render component with all providers

    Hooks cannot be defined inside tests. Hook of type "afterEach" is nested within "should render component with all providers".

      119 |   
      120 |   // Store reset after each test
    > 121 |   global.afterEach && global.afterEach(() => {
          |                              ^
      122 |     storeResetFns.forEach(resetFn => resetFn());
      123 |   });
      124 |   

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:97:11)
      at afterEach (jest.setup.js:121:30)
      at Object.require (src/stores/bouncePlanStore.ts:1:1)
      at Object.require (src/services/database/sync/syncManager.ts:1:1)
      at require (src/context/OfflineContext.tsx:45:31)
          at Generator.throw (<anonymous>)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _throw (node_modules/@babel/runtime/helpers/asyncToGenerator.js:20:9)

FAIL src/screens/auth/__tests__/LoginScreen.test.tsx
  ● LoginScreen › shows loading state during sign in

    expect(received).toBeTruthy()

    Received: null

      138 |     
      139 |     // Should show loading state
    > 140 |     expect(queryByText('Signing In...')).toBeTruthy();
          |                                          ^
      141 |     expect(queryByText('Signing you in...')).toBeTruthy(); // Loading overlay
      142 |     
      143 |     await waitFor(() => {

      at Object.toBeTruthy (src/screens/auth/__tests__/LoginScreen.test.tsx:140:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● LoginScreen › handles keyboard navigation correctly

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      196 |     
      197 |     // Password input should receive focus
    > 198 |     expect(focusMock).toHaveBeenCalled();
          |                       ^
      199 |   });
      200 | });

      at Object.toHaveBeenCalled (src/screens/auth/__tests__/LoginScreen.test.tsx:198:23)

FAIL src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx
  ● BouncePlanScreen sync integration tests › initial load and sync › should hydrate from database on mount when user is authenticated

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:101:7)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › initial load and sync › should not hydrate when user is not authenticated

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:120:7)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › initial load and sync › should show loading state while hydrating

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › initial load and sync › should show sync error if hydration fails

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:144:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › task completion sync › should sync task when completed while online

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:162:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › task completion sync › should not sync when offline

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:192:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › task completion sync › should show sync indicator while syncing

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:213:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › manual sync › should trigger manual sync when sync button is pressed

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:229:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › manual sync › should show last sync time

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:247:29)

  ● BouncePlanScreen sync integration tests › manual sync › should disable sync button when offline

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:256:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › network state changes › should sync when coming back online

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:282:7)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › network state changes › should show offline indicator when disconnected

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:316:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › conflict resolution › should reload data after successful sync

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:335:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › conflict resolution › should show conflict warning when local and remote data differ

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:367:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › error handling › should show error toast when sync fails

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:385:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › error handling › should retry sync after error

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:407:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › performance optimizations › should debounce rapid task completions

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:436:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › performance optimizations › should not sync if no changes since last sync

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:466:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/screens/main/__tests__/BouncePlanScreen.test.tsx
  ● BouncePlanScreen › renders loading state initially

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/screens/main/__tests__/BouncePlanScreen.test.tsx:64:35)

  ● BouncePlanScreen › renders main screen after loading

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:77:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › shows welcome alert for new users

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:92:5)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › renders task cards by week

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:106:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › shows correct task statuses

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:120:41)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task press for available task

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:135:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › shows alert for locked task

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:159:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task completion

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:180:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task skip

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:217:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task reopen

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:256:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles refresh control

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:284:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › displays progress bar correctly

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:296:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › renders weekend tasks correctly

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:305:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › groups tasks by week correctly

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:317:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/feature/budget/__tests__/BudgetAlerts.test.tsx
  ● BudgetAlerts › should render multiple alerts

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 4
    Received array:  [{"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}]

      89 |     expect(getByText('Low Financial Runway')).toBeTruthy();
      90 |     expect(getByText('Benefits Expiring Soon')).toBeTruthy();
    > 91 |     expect(getAllByTestId(/^alert-/)).toHaveLength(2);
         |                                       ^
      92 |   });
      93 |
      94 |   it('should not render dismissed alerts', () => {

      at Object.toHaveLength (src/components/feature/budget/__tests__/BudgetAlerts.test.tsx:91:39)

  ● BudgetAlerts › should not render dismissed alerts

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}]

      120 |     expect(getByText('Low Financial Runway')).toBeTruthy();
      121 |     expect(queryByText('Benefits Expiring Soon')).toBeFalsy();
    > 122 |     expect(getAllByTestId(/^alert-/)).toHaveLength(1);
          |                                       ^
      123 |   });
      124 |
      125 |   it('should display correct severity colors', () => {

      at Object.toHaveLength (src/components/feature/budget/__tests__/BudgetAlerts.test.tsx:122:39)

FAIL src/services/security/__tests__/keychain.test.ts
  ● KeychainService › removeSecureValue › should remove a stored value

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "com.nextchapter.app"
    Received: {"server": "com.nextchapter.app"}

    Number of calls: 1

      149 |
      150 |       await keychainService.removeSecureValue('API_KEY');
    > 151 |       expect(mockResetCredentials).toHaveBeenCalledWith('com.nextchapter.app');
          |                                    ^
      152 |     });
      153 |
      154 |     it('should handle removal errors gracefully', async () => {

      at Object.toHaveBeenCalledWith (src/services/security/__tests__/keychain.test.ts:151:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● KeychainService › clearAllSecureValues › should clear all stored values

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "com.nextchapter.app"
    Received: {"server": "com.nextchapter.app"}

    Number of calls: 1

      298 |
      299 |       await keychainService.clearAllSecureValues();
    > 300 |       expect(mockResetCredentials).toHaveBeenCalledWith('com.nextchapter.app');
          |                                    ^
      301 |     });
      302 |   });
      303 | });

      at Object.toHaveBeenCalledWith (src/services/security/__tests__/keychain.test.ts:300:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/app/__tests__/NotificationSetup.test.tsx
  ● NotificationSetup › Initialization › should render children

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Initialization › should setup notification handlers on mount

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Initialization › should setup app state listener

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Initialization › should cleanup on unmount

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should request permissions when onboarded

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should not request permissions when not onboarded

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should register for push notifications when permissions granted

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should schedule initial notifications when permissions granted

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should not schedule notifications when permissions denied

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Budget Runway Monitoring › should check budget runway when it changes

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Budget Runway Monitoring › should not check budget runway without permissions

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › App State Changes › should refresh notifications when app comes to foreground

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › App State Changes › should not show reminder before noon

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › App State Changes › should not refresh notifications when app goes to background

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Error Handling › should handle errors in scheduling initial notifications

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › User Experience › should not interrupt user if already completed task today

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › User Experience › should use gentle, supportive notification copy

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

FAIL src/stores/__tests__/onboardingStore.test.ts
  ● onboardingStore › loadProgress › should load existing progress

    expect(received).toBe(expected) // Object.is equality

    Expected: "personal-info"
    Received: "welcome"

      50 |       });
      51 |
    > 52 |       expect(result.current.currentStep).toBe('personal-info');
         |                                          ^
      53 |       expect(result.current.data).toEqual(mockProgress.data);
      54 |     });
      55 |

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:52:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › loadProgress › should handle load errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Failed to load onboarding progress"
    Received: null

      65 |       });
      66 |
    > 67 |       expect(result.current.error).toBe('Failed to load onboarding progress');
         |                                    ^
      68 |     });
      69 |   });
      70 |

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:67:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › saveStepData › should save step data and update state

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-user-123", "layoff-details", {"company": "Tech Corp", "role": "Engineer"}

    Number of calls: 0

      86 |       expect(result.current.currentStep).toBe('layoff-details');
      87 |       expect(result.current.data).toEqual(stepData);
    > 88 |       expect(mockService.saveProgress).toHaveBeenCalledWith(
         |                                        ^
      89 |         mockUserId,
      90 |         'layoff-details',
      91 |         stepData

      at Object.toHaveBeenCalledWith (src/stores/__tests__/onboardingStore.test.ts:88:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › navigation › should navigate to next step

    expect(received).toBe(expected) // Object.is equality

    Expected: "personal-info"
    Received: "layoff-details"

      126 |       });
      127 |
    > 128 |       expect(result.current.currentStep).toBe('personal-info');
          |                                          ^
      129 |     });
      130 |
      131 |     it('should not navigate past the last step', () => {

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:128:42)

  ● onboardingStore › navigation › should navigate to previous step

    expect(received).toBe(expected) // Object.is equality

    Expected: "layoff-details"
    Received: "personal-info"

      154 |       });
      155 |
    > 156 |       expect(result.current.currentStep).toBe('layoff-details');
          |                                          ^
      157 |     });
      158 |
      159 |     it('should not navigate before the first step', () => {

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:156:42)

  ● onboardingStore › validation › should validate current step data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      182 |
      183 |       const isValid = result.current.isCurrentStepValid();
    > 184 |       expect(isValid).toBe(true);
          |                       ^
      185 |     });
      186 |
      187 |     it('should return false for invalid step data', () => {

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:184:23)

  ● onboardingStore › validation › should return false for invalid step data

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      197 |
      198 |       const isValid = result.current.isCurrentStepValid();
    > 199 |       expect(isValid).toBe(false);
          |                       ^
      200 |     });
      201 |   });
      202 |

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:199:23)

  ● onboardingStore › completeOnboarding › should complete onboarding successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-user-123", {"company": "Tech Corp", "firstName": "John", "goals": ["job-search"], "lastName": "Doe", "layoffDate": "2025-01-01", "role": "Engineer"}

    Number of calls: 0

      224 |       });
      225 |
    > 226 |       expect(mockService.completeOnboarding).toHaveBeenCalledWith(
          |                                              ^
      227 |         mockUserId,
      228 |         completeData
      229 |       );

      at Object.toHaveBeenCalledWith (src/stores/__tests__/onboardingStore.test.ts:226:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › completeOnboarding › should handle completion errors

    expect(received).toBe(expected) // Object.is equality

    Expected: "Failed to complete onboarding"
    Received: null

      242 |       });
      243 |
    > 244 |       expect(result.current.error).toBe('Failed to complete onboarding');
          |                                    ^
      245 |       expect(result.current.isCompleted).toBe(false);
      246 |     });
      247 |   });

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:244:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/feature/job-tracker/__tests__/JobCard.test.tsx
  ● JobCard › should display "Today" for applications applied today

    Unable to find an element with text: Today

    [36m<View[39m
      [33maccessible[39m=[32m{true}[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mGoogle[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mJul 12[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<Text>[39m
        [0mSenior Software Engineer[0m
      [36m</Text>[39m
      [36m<View>[39m
        [36m<Text[39m
          [33mtestID[39m=[32m"icon-Ionicons"[39m
        [36m>[39m
          [0mlocation-outline[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mMountain View, CA[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<Text[39m
          [33mtestID[39m=[32m"icon-Ionicons"[39m
        [36m>[39m
          [0mcash-outline[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0m$150k - $200k[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mYesterday[0m
        [36m</Text>[39m
        [36m<View>[39m
          [36m<Text[39m
            [33mtestID[39m=[32m"icon-Ionicons"[39m
          [36m>[39m
            [0mdocument-text-outline[0m
          [36m</Text>[39m
          [36m<Text[39m
            [33mtestID[39m=[32m"icon-Ionicons"[39m
          [36m>[39m
            [0mperson-outline[0m
          [36m</Text>[39m
          [36m<Text[39m
            [33mtestID[39m=[32m"icon-Ionicons"[39m
          [36m>[39m
            [0mlink-outline[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      83 |     );
      84 |
    > 85 |     expect(getByText('Today')).toBeTruthy();
         |            ^
      86 |   });
      87 |
      88 |   it('should display appropriate relative time for past dates', () => {

      at Object.getByText (src/components/feature/job-tracker/__tests__/JobCard.test.tsx:85:12)

FAIL src/components/common/__tests__/NotificationSettings.test.tsx
  ● NotificationSettings › should request permissions when button pressed

    Unable to find an element with text: Enable Notifications

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      72 |     const { getByText } = render(<NotificationSettings />);
      73 |     
    > 74 |     const button = getByText('Enable Notifications');
         |                    ^
      75 |     fireEvent.press(button);
      76 |     
      77 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:74:20)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● NotificationSettings › should show quiet hours picker when tapped

    Unable to find an element with text: 10:00 PM - 8:00 AM

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      94 |     const { getByText, getByTestId } = render(<NotificationSettings />);
      95 |     
    > 96 |     const quietHoursButton = getByText('10:00 PM - 8:00 AM');
         |                              ^
      97 |     fireEvent.press(quietHoursButton);
      98 |     
      99 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:96:30)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● NotificationSettings › should update quiet hours when changed

    Unable to find an element with text: 10:00 PM - 8:00 AM

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      105 |     const { getByText, getByTestId } = render(<NotificationSettings />);
      106 |     
    > 107 |     const quietHoursButton = getByText('10:00 PM - 8:00 AM');
          |                              ^
      108 |     fireEvent.press(quietHoursButton);
      109 |     
      110 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:107:30)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● NotificationSettings › should send test notification when button pressed

    Unable to find an element with text: Send Test Notification

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      132 |     const { getByText } = render(<NotificationSettings />);
      133 |     
    > 134 |     const testButton = getByText('Send Test Notification');
          |                        ^
      135 |     fireEvent.press(testButton);
      136 |     
      137 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:134:24)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/NotificationPermissionPrompt.test.tsx
  ● NotificationPermissionPrompt › should be accessible

    expect(received).toBe(expected) // Object.is equality

    Expected: "button"
    Received: undefined

      121 |
      122 |     const allowButton = getByText('Allow Notifications');
    > 123 |     expect(allowButton.props.accessibilityRole).toBe('button');
          |                                                 ^
      124 |     expect(allowButton.props.accessibilityLabel).toBe('Allow notification permissions');
      125 |
      126 |     const denyButton = getByText('Maybe Later');

      at Object.toBe (src/components/common/__tests__/NotificationPermissionPrompt.test.tsx:123:49)

FAIL src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx
  ● OfflineQueueViewer › should show empty state when no items are queued

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      13 |
      14 |   it('should show empty state when no items are queued', () => {
    > 15 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue({
         |                                                             ^
      16 |       totalItems: 0,
      17 |       byFeature: {
      18 |         bouncePlan: 0,

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:15:61)

  ● OfflineQueueViewer › should display queue items grouped by feature

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      81 |     };
      82 |
    > 83 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
         |                                                             ^
      84 |
      85 |     const { getByText, getAllByText } = render(<OfflineQueueViewer />);
      86 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:83:61)

  ● OfflineQueueViewer › should show time since oldest item

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      108 |     };
      109 |
    > 110 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      111 |
      112 |     const { getByText } = render(<OfflineQueueViewer />);
      113 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:110:61)

  ● OfflineQueueViewer › should allow clearing specific queue items

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      128 |     };
      129 |
    > 130 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      131 |     const clearItemMock = jest.fn().mockResolvedValue(true);
      132 |     (syncManager.clearQueueItem as jest.Mock).mockImplementation(clearItemMock);
      133 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:130:61)

  ● OfflineQueueViewer › should collapse and expand feature sections

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      162 |     };
      163 |
    > 164 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      165 |
      166 |     const { getByText, queryByText, getByTestId } = render(<OfflineQueueViewer />);
      167 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:164:61)

  ● OfflineQueueViewer › should retry sync for all items

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      193 |     };
      194 |
    > 195 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      196 |     (syncManager.syncAll as jest.Mock).mockResolvedValue({
      197 |       success: true,
      198 |       errors: []

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:195:61)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● OfflineQueueViewer › should show appropriate icons for different queue item types

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      248 |     };
      249 |
    > 250 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      251 |
      252 |     const { getByTestId } = render(<OfflineQueueViewer />);
      253 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:250:61)

  ● OfflineQueueViewer › should show warning for large queue size

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      272 |     };
      273 |
    > 274 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      275 |
      276 |     const { getByText, getByTestId } = render(<OfflineQueueViewer />);
      277 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:274:61)

FAIL src/hooks/__tests__/useNotifications.test.ts
  ● useNotifications › should initialize notification handlers on mount

    expect(received).toHaveBeenCalled()

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      15 |     renderHook(() => useNotifications());
      16 |
    > 17 |     expect(Notifications.addNotificationReceivedListener).toHaveBeenCalled();
         |                                                           ^
      18 |     expect(Notifications.addNotificationResponseReceivedListener).toHaveBeenCalled();
      19 |   });
      20 |

      at Object.toHaveBeenCalled (src/hooks/__tests__/useNotifications.test.ts:17:59)

  ● useNotifications › should schedule daily task reminder

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:22:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should schedule job follow-up

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:32:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should check budget runway

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:49:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should schedule mood check-in

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:59:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should handle notification received in foreground

    TypeError: Cannot read properties of undefined (reading 'mockImplementation')

      68 |   it('should handle notification received in foreground', async () => {
      69 |     const mockListener = jest.fn();
    > 70 |     (Notifications.addNotificationReceivedListener as jest.Mock).mockImplementation(
         |                                                                  ^
      71 |       (callback) => {
      72 |         mockListener.mockImplementation(callback);
      73 |         return { remove: jest.fn() };

      at Object.mockImplementation (src/hooks/__tests__/useNotifications.test.ts:70:66)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should handle notification response

    TypeError: Cannot read properties of undefined (reading 'mockImplementation')

       95 |   it('should handle notification response', async () => {
       96 |     const mockListener = jest.fn();
    >  97 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockImplementation(
          |                                                                          ^
       98 |       (callback) => {
       99 |         mockListener.mockImplementation(callback);
      100 |         return { remove: jest.fn() };

      at Object.mockImplementation (src/hooks/__tests__/useNotifications.test.ts:97:74)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should request permissions

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:126:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should update preferences

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:138:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should clean up listeners on unmount

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      156 |   it('should clean up listeners on unmount', () => {
      157 |     const mockRemove = jest.fn();
    > 158 |     (Notifications.addNotificationReceivedListener as jest.Mock).mockReturnValue({
          |                                                                  ^
      159 |       remove: mockRemove,
      160 |     });
      161 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue({

      at Object.mockReturnValue (src/hooks/__tests__/useNotifications.test.ts:158:66)

  ● useNotifications › should cancel all notifications

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:173:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should get scheduled notifications

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:191:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/LoadingOverlay.test.tsx
  ● LoadingOverlay › has proper accessibility label when message is provided

    Found multiple elements with accessibility label: Signing you in...

      51 |     );
      52 |
    > 53 |     expect(getByLabelText('Signing you in...')).toBeTruthy();
         |            ^
      54 |   });
      55 |
      56 |   it('has default accessibility label when no message', () => {

      at Object.getByLabelText (src/components/common/__tests__/LoadingOverlay.test.tsx:53:12)

FAIL src/components/common/__tests__/Input.test.tsx
  ● Input › Basic Functionality › should render with label

    Found multiple elements with role: text

      33 |       
      34 |       expect(getByText('Email')).toBeTruthy();
    > 35 |       expect(getByRole('text')).toBeTruthy();
         |              ^
      36 |     });
      37 |
      38 |     it('should handle text input changes', () => {

      at Object.getByRole (src/components/common/__tests__/Input.test.tsx:35:14)

  ● Input › Accessibility › should use label as accessibility label

    Found multiple elements with role: text

      161 |       );
      162 |       
    > 163 |       const input = getByRole('text');
          |                     ^
      164 |       expect(input.props.accessibilityLabel).toBe('Password');
      165 |     });
      166 |

      at Object.getByRole (src/components/common/__tests__/Input.test.tsx:163:21)

  ● Input › Accessibility › should use custom accessibility label over label prop

    Found multiple elements with role: text

      170 |       );
      171 |       
    > 172 |       const input = getByRole('text');
          |                     ^
      173 |       expect(input.props.accessibilityLabel).toBe('Enter your password');
      174 |     });
      175 |

      at Object.getByRole (src/components/common/__tests__/Input.test.tsx:172:21)

FAIL src/components/common/__tests__/ErrorBoundary.test.tsx
  ● ErrorBoundary › renders error UI when child component throws

    Unable to find an element with text: /We're having trouble loading this screen/

    [36m<View>[39m
      [36m<Text>[39m
        [0mSomething went wrong[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mWe're sorry for the inconvenience. Please try again.[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mTest error[0m
      [36m</Text>[39m
      [36m<View[39m
        [33maccessible[39m=[32m{true}[39m
      [36m>[39m
        [36m<Text>[39m
          [0mTry Again[0m
        [36m</Text>[39m
      [36m</View>[39m
    [36m</View>[39m

      40 |
      41 |     expect(getByText('Something went wrong')).toBeTruthy();
    > 42 |     expect(getByText(/We're having trouble loading this screen/)).toBeTruthy();
         |            ^
      43 |   });
      44 |
      45 |   it('renders custom fallback when provided', () => {

      at Object.getByText (src/components/common/__tests__/ErrorBoundary.test.tsx:42:12)

  ● ErrorBoundary › resets error state when Try Again is pressed

    expect(received).toBeNull()

    Received: {"_fiber": {"_debugHookTypes": null, "_debugInfo": null, "_debugNeedsRemount": false, "_debugOwner": [FiberNode], "actualDuration": 0, "actualStartTime": 1752380169479, "alternate": [FiberNode], "child": [FiberNode], "childLanes": 0, "deletions": null, "dependencies": null, "elementType": "Text", "flags": 4, "index": 0, "key": null, "lanes": 0, "memoizedProps": [Object], "memoizedState": null, "mode": 3, "pendingProps": [Object], "ref": null, "refCleanup": null, "return": [FiberNode], "selfBaseDuration": 0, "sibling": null, "stateNode": [Object], "subtreeFlags": 262144, "tag": 5, "treeBaseDuration": 0, "type": "Text", "updateQueue": null}}

      87 |     );
      88 |
    > 89 |     expect(queryByText('Something went wrong')).toBeNull();
         |                                                 ^
      90 |     expect(getByText('No error')).toBeTruthy();
      91 |   });
      92 |

      at Object.toBeNull (src/components/common/__tests__/ErrorBoundary.test.tsx:89:49)

  ● ErrorBoundary › has proper accessibility attributes

    Unable to find an element with role: button

    [36m<View>[39m
      [36m<Text>[39m
        [0mSomething went wrong[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mWe're sorry for the inconvenience. Please try again.[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mTest error[0m
      [36m</Text>[39m
      [36m<View[39m
        [33maccessible[39m=[32m{true}[39m
      [36m>[39m
        [36m<Text>[39m
          [0mTry Again[0m
        [36m</Text>[39m
      [36m</View>[39m
    [36m</View>[39m

       98 |     );
       99 |
    > 100 |     const tryAgainButton = getByRole('button');
          |                            ^
      101 |     expect(tryAgainButton).toBeTruthy();
      102 |     expect(getByLabelText('Try again')).toBeTruthy();
      103 |   });

      at Object.getByRole (src/components/common/__tests__/ErrorBoundary.test.tsx:100:28)

FAIL src/utils/__tests__/errorHandling.test.ts
  ● errorHandling utilities › getUserFriendlyErrorMessage › handles specific error types

    expect(received).toBe(expected) // Object.is equality

    Expected: "This is taking longer than expected. Please try again."
    Received: "Having trouble connecting. Please check your internet connection and try again."

      69 |       timeoutError.name = 'TimeoutError';
      70 |       expect(getUserFriendlyErrorMessage(timeoutError))
    > 71 |         .toBe('This is taking longer than expected. Please try again.');
         |          ^
      72 |     });
      73 |
      74 |     it('returns default message for unknown errors', () => {

      at Object.toBe (src/utils/__tests__/errorHandling.test.ts:71:10)

  ● errorHandling utilities › withErrorHandling › respects custom timeout

    expect(received).rejects.toThrow(expected)

    Expected substring: "Request timed out"
    Received message:   "Something unexpected happened. Please try again in a moment."

          140 |     // Transform the error message
          141 |     const friendlyMessage = getUserFriendlyErrorMessage(error, context);
        > 142 |     const enhancedError = new Error(friendlyMessage) as any;
              |                           ^
          143 |     enhancedError.originalError = error;
          144 |     
          145 |     throw enhancedError;

      at src/utils/errorHandling.ts:142:27
                at Generator.throw (<anonymous>)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _throw (node_modules/@babel/runtime/helpers/asyncToGenerator.js:20:9)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (src/utils/__tests__/errorHandling.test.ts:181:37)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/coach/__tests__/CoachSettings.test.tsx
  ● CoachSettings › Modal Behavior › should render when visible is true

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Modal Behavior › should not render when visible is false

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Modal Behavior › should call onClose when close button is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should display current message usage

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should show progress bar with correct width

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should display reset information

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should handle rate limiting correctly

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Cloud Sync Toggle › should display cloud sync option

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Cloud Sync Toggle › should toggle cloud sync when switch is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Cloud Sync Toggle › should reflect current cloud sync state

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Privacy & Security Section › should display all privacy information

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Privacy & Security Section › should emphasize privacy for crisis situations

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Pro Features Section › should display upgrade to Pro option

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Pro Features Section › should list Pro features

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Accessibility › should have proper accessibility labels

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Accessibility › should have proper accessibility roles

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Crisis Intervention Considerations › should clearly show message limits to prevent overuse during crisis

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Crisis Intervention Considerations › should emphasize encryption for sensitive conversations

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Crisis Intervention Considerations › should show privacy protections for vulnerable users

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

FAIL src/components/coach/__tests__/MessageBubble.test.tsx
  ● MessageBubble › Accessibility › should have text role for accessibility

    Found multiple elements with role: text

      175 |       );
      176 |       
    > 177 |       expect(getByRole('text')).toBeTruthy();
          |              ^
      178 |     });
      179 |   });
      180 |

      at Object.getByRole (src/components/coach/__tests__/MessageBubble.test.tsx:177:14)

  ● MessageBubble › Edge Cases › should handle empty message content

    Found multiple elements with role: text

      206 |       );
      207 |       
    > 208 |       expect(getByRole('text')).toBeTruthy();
          |              ^
      209 |     });
      210 |
      211 |     it('should handle very long messages', () => {

      at Object.getByRole (src/components/coach/__tests__/MessageBubble.test.tsx:208:14)

FAIL src/screens/main/__tests__/HomeScreen.test.tsx
  ● HomeScreen › Header Section › should display personalized greeting with user name

    Unable to find an element with text: /Good \w+, Test/

    [36m<RNCSafeAreaProvider>[39m
      [36m<RNCSafeAreaProvider />[39m
      [36m<RNSScreenStack>[39m
        [36m<RNSScreen[39m
          [33maria-hidden[39m=[32m{false}[39m
        [36m>[39m
          [36m<RNSScreenContentWrapper>[39m
            [36m<RCTSafeAreaView>[39m
              [36m<RCTScrollView[39m
                [33maccessibilityLabel[39m=[32m"Home Dashboard"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"home-screen-container"[39m
              [36m>[39m
                [36m<RCTRefreshControl />[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mGood evening, test[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mSaturday, July 12, 2025[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"View and complete your daily recovery tasks"[39m
                    [33maccessibilityLabel[39m=[32m"Navigate to Bounce Plan"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"bounce-plan-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m30-Day Bounce Plan[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mDay 5 of 30[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<View>[39m
                            [36m<Text>[39m
                              [0mDay [0m
                              [0m5[0m
                              [0m of 30[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mToday's Task:[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mCreate Your Support Network List[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0m2[0m
                              [0m tasks completed[0m
                            [36m</Text>[39m
                          [36m</View>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"progress-circle"[39m
                          [36m>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Check your financial runway and budget alerts"[39m
                    [33maccessibilityLabel[39m=[32m"View Budget Details"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"budget-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mFinancial Runway[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mYour financial cushion[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4.5[0m
                            [0m months[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0mof runway remaining[0m
                          [36m</Text>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"runway-indicator"[39m
                          [36m>[39m
                            [36m<View />[39m
                          [36m</View>[39m
                          [36m<Text>[39m
                            [0m1[0m
                            [0m alert[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your emotional wellbeing"[39m
                    [33maccessibilityLabel[39m=[32m"Log your mood"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mDaily Check-in[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mChecked in today[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text[39m
                            [33mtestID[39m=[32m"mood-emoji"[39m
                          [36m>[39m
                            [0m😐[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0m5[0m
                            [0m day streak[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your job application progress"[39m
                    [33maccessibilityLabel[39m=[32m"View Job Applications"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"job-tracker-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mJob Pipeline[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mApplication tracking[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4[0m
                            [0m active application[0m
                            [0ms[0m
                          [36m</Text>[39m
                          [36m<View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m2[0m
                                [0m Applied[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Interviewing[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Offer[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mQuick Actions[0m
                    [36m</Text>[39m
                    [36m<View[39m
                      [33maccessibilityHint[39m=[32m"Get personalized support and guidance"[39m
                      [33maccessibilityLabel[39m=[32m"Talk to AI Coach"[39m
                      [33maccessible[39m=[32m{true}[39m
                      [33mtestID[39m=[32m"coach-quick-action"[39m
                    [36m>[39m
                      [36m<Text>[39m
                        [0mTalk to Coach[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mGet support and guidance anytime[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</RCTScrollView>[39m
            [36m</RCTSafeAreaView>[39m
          [36m</RNSScreenContentWrapper>[39m
          [36m<RNSScreenStackHeaderConfig[39m
            [33mtitle[39m=[32m"Home"[39m
          [36m/>[39m
        [36m</RNSScreen>[39m
      [36m</RNSScreenStack>[39m
    [36m</RNCSafeAreaProvider>[39m

       99 |     it('should display personalized greeting with user name', () => {
      100 |       const { getByText } = renderWithProviders();
    > 101 |       expect(getByText(/Good \w+, Test/)).toBeTruthy();
          |              ^
      102 |     });
      103 |
      104 |     it('should display appropriate time-based greeting', () => {

      at Object.getByText (src/screens/main/__tests__/HomeScreen.test.tsx:101:14)

  ● HomeScreen › Header Section › should display appropriate time-based greeting

    Unable to find an element with text: /Good (morning|afternoon|evening), Test/

    [36m<RNCSafeAreaProvider>[39m
      [36m<RNCSafeAreaProvider />[39m
      [36m<RNSScreenStack>[39m
        [36m<RNSScreen[39m
          [33maria-hidden[39m=[32m{false}[39m
        [36m>[39m
          [36m<RNSScreenContentWrapper>[39m
            [36m<RCTSafeAreaView>[39m
              [36m<RCTScrollView[39m
                [33maccessibilityLabel[39m=[32m"Home Dashboard"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"home-screen-container"[39m
              [36m>[39m
                [36m<RCTRefreshControl />[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mGood evening, test[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mSaturday, July 12, 2025[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"View and complete your daily recovery tasks"[39m
                    [33maccessibilityLabel[39m=[32m"Navigate to Bounce Plan"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"bounce-plan-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m30-Day Bounce Plan[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mDay 5 of 30[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<View>[39m
                            [36m<Text>[39m
                              [0mDay [0m
                              [0m5[0m
                              [0m of 30[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mToday's Task:[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mCreate Your Support Network List[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0m2[0m
                              [0m tasks completed[0m
                            [36m</Text>[39m
                          [36m</View>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"progress-circle"[39m
                          [36m>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Check your financial runway and budget alerts"[39m
                    [33maccessibilityLabel[39m=[32m"View Budget Details"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"budget-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mFinancial Runway[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mYour financial cushion[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4.5[0m
                            [0m months[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0mof runway remaining[0m
                          [36m</Text>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"runway-indicator"[39m
                          [36m>[39m
                            [36m<View />[39m
                          [36m</View>[39m
                          [36m<Text>[39m
                            [0m1[0m
                            [0m alert[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your emotional wellbeing"[39m
                    [33maccessibilityLabel[39m=[32m"Log your mood"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mDaily Check-in[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mChecked in today[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text[39m
                            [33mtestID[39m=[32m"mood-emoji"[39m
                          [36m>[39m
                            [0m😐[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0m5[0m
                            [0m day streak[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your job application progress"[39m
                    [33maccessibilityLabel[39m=[32m"View Job Applications"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"job-tracker-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mJob Pipeline[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mApplication tracking[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4[0m
                            [0m active application[0m
                            [0ms[0m
                          [36m</Text>[39m
                          [36m<View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m2[0m
                                [0m Applied[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Interviewing[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Offer[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mQuick Actions[0m
                    [36m</Text>[39m
                    [36m<View[39m
                      [33maccessibilityHint[39m=[32m"Get personalized support and guidance"[39m
                      [33maccessibilityLabel[39m=[32m"Talk to AI Coach"[39m
                      [33maccessible[39m=[32m{true}[39m
                      [33mtestID[39m=[32m"coach-quick-action"[39m
                    [36m>[39m
                      [36m<Text>[39m
                        [0mTalk to Coach[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mGet support and guidance anytime[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</RCTScrollView>[39m
            [36m</RCTSafeAreaView>[39m
          [36m</RNSScreenContentWrapper>[39m
          [36m<RNSScreenStackHeaderConfig[39m
            [33mtitle[39m=[32m"Home"[39m
          [36m/>[39m
        [36m</RNSScreen>[39m
      [36m</RNSScreenStack>[39m
    [36m</RNCSafeAreaProvider>[39m

      105 |       const { getByText } = renderWithProviders();
      106 |       // Should show either "Good morning", "Good afternoon", or "Good evening"
    > 107 |       expect(getByText(/Good (morning|afternoon|evening), Test/)).toBeTruthy();
          |              ^
      108 |     });
      109 |
      110 |     it('should display current date', () => {

      at Object.getByText (src/screens/main/__tests__/HomeScreen.test.tsx:107:14)

FAIL src/stores/__tests__/bouncePlanStore.sync.test.ts
  ● bouncePlanStore sync functionality › offline/online sync scenarios › should handle race conditions during concurrent syncs

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      540 |
      541 |       // Only one sync should have executed
    > 542 |       expect(mockedBouncePlanService.batchSyncBouncePlanProgress).toHaveBeenCalledTimes(1);
          |                                                                   ^
      543 |     });
      544 |   });
      545 |

      at Object.toHaveBeenCalledTimes (src/stores/__tests__/bouncePlanStore.sync.test.ts:542:67)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/stores/__tests__/bouncePlanStore.test.ts
  ● useBouncePlanStore › persistence › should persist state to AsyncStorage

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      274 |       await waitInAct(100);
      275 |
    > 276 |       expect(mockAsyncStorage.setItem).toHaveBeenCalled();
          |                                        ^
      277 |       const [[key, value]] = mockAsyncStorage.setItem.mock.calls;
      278 |       expect(key).toBe('@next_chapter/bounce_plan');
      279 |       

      at Object.toHaveBeenCalled (src/stores/__tests__/bouncePlanStore.test.ts:276:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● useBouncePlanStore › persistence › should handle rehydration from AsyncStorage

    expect(received).toBe(expected) // Object.is equality

    Expected: 5
    Received: 0

      306 |       await waitInAct(100);
      307 |
    > 308 |       expect(result.current.currentDay).toBe(5);
          |                                         ^
      309 |       expect(result.current.completedTasks.has('day1_breathe')).toBe(true);
      310 |       expect(result.current.completedTasks.has('day2_inventory')).toBe(true);
      311 |       expect(result.current.skippedTasks.has('day3_support')).toBe(true);

      at Object.toBe (src/stores/__tests__/bouncePlanStore.test.ts:308:41)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● useBouncePlanStore › offline queue › should clear offline queue

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 3

      346 |       });
      347 |
    > 348 |       expect(result.current.getOfflineQueueSize()).toBe(2);
          |                                                    ^
      349 |
      350 |       await actAsync(async () => {
      351 |         result.current.clearOfflineQueue();

      at Object.toBe (src/stores/__tests__/bouncePlanStore.test.ts:348:52)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/common/__tests__/ErrorMessage.test.tsx
  ● ErrorMessage › has proper accessibility attributes

    Unable to find an element with role: alert

    [36m<View[39m
      [33maccessibilityRole[39m=[32m"alert"[39m
      [33mstyle[39m=[32m{
        {
          "opacity": 0,
        }
      }[39m
      [33mtestID[39m=[32m"error-message"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text[39m
          [33maccessibilityLabel[39m=[32m"error message"[39m
        [36m>[39m
          [0m💙[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mTest error[0m
        [36m</Text>[39m
        [36m<View[39m
          [33maccessibilityLabel[39m=[32m"Dismiss message"[39m
          [33maccessibilityRole[39m=[32m"button"[39m
          [33maccessible[39m=[32m{true}[39m
        [36m>[39m
          [36m<Text>[39m
            [0m✕[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      81 |     );
      82 |
    > 83 |     expect(getByRole('alert')).toBeTruthy();
         |            ^
      84 |     expect(getByLabelText('error message')).toBeTruthy();
      85 |     expect(getByLabelText('Dismiss message')).toBeTruthy();
      86 |   });

      at Object.getByRole (src/components/common/__tests__/ErrorMessage.test.tsx:83:12)

FAIL src/stores/__tests__/resumeStore.test.ts
  ● useResumeStore › uploadResume › should handle upload cancellation

    expect(received).toBeNull()

    Received: {"message": "Cannot read properties of null (reading '0')", "progress": 0, "stage": "error"}

      161 |       });
      162 |
    > 163 |       expect(result.current.uploadProgress).toBeNull();
          |                                             ^
      164 |       expect(result.current.currentResume).toBeNull();
      165 |     });
      166 |

      at Object.toBeNull (src/stores/__tests__/resumeStore.test.ts:163:45)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● useResumeStore › error handling › should clear errors on successful operations

    expect(received).toBeNull()

    Received: "Cannot read properties of null (reading '0')"

      540 |       });
      541 |
    > 542 |       expect(result.current.error).toBeNull();
          |                                    ^
      543 |     });
      544 |
      545 |     it('should handle loading states correctly', async () => {

      at Object.toBeNull (src/stores/__tests__/resumeStore.test.ts:542:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/context/__tests__/OfflineContext.test.tsx
  ● OfflineContext › should provide network status to children

    TypeError: Cannot read properties of undefined (reading 'wifi')

      72 |     expect(result.current.isConnected).toBe(true);
      73 |     expect(result.current.isWifiEnabled).toBe(true);
    > 74 |     expect(result.current.networkType).toBe(NetInfoStateType.wifi);
         |                                                              ^
      75 |   });
      76 |
      77 |   it('should check pending syncs periodically', async () => {

      at Object.wifi (src/context/__tests__/OfflineContext.test.tsx:74:62)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● OfflineContext › should handle network disconnection

    TypeError: Cannot read properties of undefined (reading 'none')

      125 |     expect(result.current.isConnected).toBe(false);
      126 |     expect(result.current.isWifiEnabled).toBe(false);
    > 127 |     expect(result.current.networkType).toBe(NetInfoStateType.none);
          |                                                              ^
      128 |   });
      129 |
      130 |   it('should auto-sync when coming back online with pending syncs', async () => {

      at Object.none (src/context/__tests__/OfflineContext.test.tsx:127:62)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● OfflineContext › should handle null/undefined network states

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      295 |     });
      296 |
    > 297 |     expect(result.current.isConnected).toBe(false);
          |                                        ^
      298 |     expect(result.current.isWifiEnabled).toBe(false);
      299 |     expect(result.current.networkType).toBe(NetInfoStateType.unknown);
      300 |   });

      at Object.toBe (src/context/__tests__/OfflineContext.test.tsx:297:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● OfflineContext › should handle different network types correctly

    TypeError: Cannot read properties of undefined (reading 'wifi')

      305 |
      306 |     const networkTypes: NetInfoStateType[] = [
    > 307 |       NetInfoStateType.wifi,
          |                        ^
      308 |       NetInfoStateType.cellular,
      309 |       NetInfoStateType.ethernet,
      310 |       NetInfoStateType.wimax,

      at Object.wifi (src/context/__tests__/OfflineContext.test.tsx:307:24)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/Button.test.tsx
  ● Button › Variants › should render primary variant by default

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "#007AFF"}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      67 |       const button = getByRole('button');
      68 |       
    > 69 |       expect(button.props.style).toEqual(
         |                                  ^
      70 |         expect.arrayContaining([
      71 |           expect.objectContaining({ backgroundColor: '#007AFF' }),
      72 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:69:34)

  ● Button › Variants › should render secondary variant

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "#5AC8FA"}]
    Received: {"alignItems": "center", "backgroundColor": "#5AC8FA", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      78 |       const button = getByRole('button');
      79 |       
    > 80 |       expect(button.props.style).toEqual(
         |                                  ^
      81 |         expect.arrayContaining([
      82 |           expect.objectContaining({ backgroundColor: '#5AC8FA' }),
      83 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:80:34)

  ● Button › Variants › should render outline variant

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "transparent", "borderColor": "#007AFF", "borderWidth": 1}]
    Received: {"alignItems": "center", "backgroundColor": "transparent", "borderColor": "#007AFF", "borderRadius": 8, "borderWidth": 1, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      90 |       const text = getByText('Test Button');
      91 |       
    > 92 |       expect(button.props.style).toEqual(
         |                                  ^
      93 |         expect.arrayContaining([
      94 |           expect.objectContaining({
      95 |             backgroundColor: 'transparent',

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:92:34)

  ● Button › Sizes › should render small size

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 48, "paddingHorizontal": 16}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 16}

      114 |       const button = getByRole('button');
      115 |       
    > 116 |       expect(button.props.style).toEqual(
          |                                  ^
      117 |         expect.arrayContaining([
      118 |           expect.objectContaining({ height: 48, paddingHorizontal: 16 }),
      119 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:116:34)

  ● Button › Sizes › should render medium size by default

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 48, "paddingHorizontal": 24}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      125 |       const button = getByRole('button');
      126 |       
    > 127 |       expect(button.props.style).toEqual(
          |                                  ^
      128 |         expect.arrayContaining([
      129 |           expect.objectContaining({ height: 48, paddingHorizontal: 24 }),
      130 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:127:34)

  ● Button › Sizes › should render large size

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 56, "paddingHorizontal": 32}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 56, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 32}

      136 |       const button = getByRole('button');
      137 |       
    > 138 |       expect(button.props.style).toEqual(
          |                                  ^
      139 |         expect.arrayContaining([
      140 |           expect.objectContaining({ height: 56, paddingHorizontal: 32 }),
      141 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:138:34)

  ● Button › Loading State › should have disabled styles when loading

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"opacity": 0.5}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 0.5, "paddingHorizontal": 24}

      158 |       const button = getByRole('button');
      159 |       
    > 160 |       expect(button.props.style).toEqual(
          |                                  ^
      161 |         expect.arrayContaining([
      162 |           expect.objectContaining({ opacity: 0.5 }),
      163 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:160:34)

  ● Button › Disabled State › should have disabled styles when disabled

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"opacity": 0.5}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 0.5, "paddingHorizontal": 24}

      171 |       const button = getByRole('button');
      172 |       
    > 173 |       expect(button.props.style).toEqual(
          |                                  ^
      174 |         expect.arrayContaining([
      175 |           expect.objectContaining({ opacity: 0.5 }),
      176 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:173:34)

  ● Button › Custom Styles › should apply custom button styles

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [{"marginTop": 20}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "marginTop": 20, "opacity": 1, "paddingHorizontal": 24}

      187 |       const button = getByRole('button');
      188 |       
    > 189 |       expect(button.props.style).toEqual(
          |                                  ^
      190 |         expect.arrayContaining([customStyle])
      191 |       );
      192 |     });

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:189:34)

  ● Button › Accessibility › should have minimum touch target size for accessibility

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 48}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 16}

      261 |       
      262 |       // All buttons should have at least 48dp height for accessibility
    > 263 |       expect(button.props.style).toEqual(
          |                                  ^
      264 |         expect.arrayContaining([
      265 |           expect.objectContaining({ height: 48 }),
      266 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:263:34)

  ● Button › Stress-Friendly Design › should use calming opacity for disabled state

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"opacity": 0.5}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 0.5, "paddingHorizontal": 24}

      285 |       
      286 |       // Opacity of 0.5 is less harsh than graying out completely
    > 287 |       expect(button.props.style).toEqual(
          |                                  ^
      288 |         expect.arrayContaining([
      289 |           expect.objectContaining({ opacity: 0.5 }),
      290 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:287:34)

  ● Button › Stress-Friendly Design › should have rounded corners for softer appearance

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"borderRadius": 8}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      296 |       const button = getByRole('button');
      297 |       
    > 298 |       expect(button.props.style).toEqual(
          |                                  ^
      299 |         expect.arrayContaining([
      300 |           expect.objectContaining({ borderRadius: 8 }),
      301 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:298:34)

FAIL src/components/common/__tests__/Header.test.tsx
  ● Header › Right Action › should not render right action when not provided

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      94 |
      95 |     it('should not render right action when not provided', () => {
    > 96 |       const { container } = render(<Header title="Test Title" />);
         |               ^
      97 |       
      98 |       // Verify the right container exists but is empty
      99 |       const rightContainer = container.findAllByProps({ style: expect.objectContaining({ width: 40 }) });

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:96:15)

  ● Header › Styling › should apply theme colors

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      104 |   describe('Styling', () => {
      105 |     it('should apply theme colors', () => {
    > 106 |       const { getByText, container } = render(<Header title="Test Title" />);
          |                          ^
      107 |       
      108 |       const title = getByText('Test Title');
      109 |       expect(title.props.style).toEqual(

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:106:26)

  ● Header › Styling › should have proper container height

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      126 |
      127 |     it('should have proper container height', () => {
    > 128 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      129 |       
      130 |       // Find the main container (not SafeAreaView)
      131 |       const mainContainer = container.findByProps({ 

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:128:15)

  ● Header › Layout › should have balanced layout with left and right containers

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      169 |   describe('Layout', () => {
      170 |     it('should have balanced layout with left and right containers', () => {
    > 171 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      172 |       
      173 |       // Both left and right containers should have the same width
      174 |       const sideContainers = container.findAllByProps({ 

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:171:15)

  ● Header › Layout › should wrap in SafeAreaView

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "No instances found with node type: \"SafeAreaView\""

          183 |       
          184 |       // Verify SafeAreaView is used for proper spacing on devices with notches
        > 185 |       expect(() => UNSAFE_getByType('SafeAreaView')).not.toThrow();
              |                    ^
          186 |     });
          187 |
          188 |     it('should apply background color to SafeAreaView', () => {

      at UNSAFE_getByType (src/components/common/__tests__/Header.test.tsx:185:20)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (src/components/common/__tests__/Header.test.tsx:185:58)
      at Object.toThrow (src/components/common/__tests__/Header.test.tsx:185:58)

  ● Header › Layout › should apply background color to SafeAreaView

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      187 |
      188 |     it('should apply background color to SafeAreaView', () => {
    > 189 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      190 |       
      191 |       const safeAreaView = container.findByProps({ 
      192 |         style: { backgroundColor: '#F5F5F5' }

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:189:15)

  ● Header › Edge Cases › should handle empty title

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      232 |
      233 |     it('should handle empty title', () => {
    > 234 |       const { container } = render(<Header title="" />);
          |               ^
      235 |       expect(container).toBeTruthy();
      236 |     });
      237 |

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:234:15)

  ● Header › Stress-Friendly Design › should use calming background color

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      261 |
      262 |     it('should use calming background color', () => {
    > 263 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      264 |       
      265 |       // Background color #F5F5F5 is a soft, non-harsh color
      266 |       const backgroundElements = container.findAllByProps({ 

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:263:15)

FAIL src/components/feature/wellness/__tests__/CrisisAlert.test.tsx
  ● CrisisAlert › Crisis Hotline (Critical Severity) › should call 988 when crisis hotline button is pressed

    TypeError: Cannot read properties of undefined (reading 'canOpenURL')

      168 |
      169 |     it('should call 988 when crisis hotline button is pressed', async () => {
    > 170 |       (Linking.canOpenURL as jest.Mock).mockResolvedValue(true);
          |                ^
      171 |       (Linking.openURL as jest.Mock).mockResolvedValue(true);
      172 |
      173 |       const detection = createDetection('critical');

      at Object.canOpenURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:170:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Crisis Hotline (Critical Severity) › should show alert when unable to make call

    TypeError: Cannot read properties of undefined (reading 'canOpenURL')

      190 |
      191 |     it('should show alert when unable to make call', async () => {
    > 192 |       (Linking.canOpenURL as jest.Mock).mockResolvedValue(false);
          |                ^
      193 |
      194 |       const detection = createDetection('critical');
      195 |       const { getByTestId } = render(

      at Object.canOpenURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:192:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Crisis Hotline (Critical Severity) › should handle text crisis line button

    TypeError: Cannot read properties of undefined (reading 'openURL')

      214 |
      215 |     it('should handle text crisis line button', async () => {
    > 216 |       (Linking.openURL as jest.Mock).mockResolvedValue(true);
          |                ^
      217 |
      218 |       const detection = createDetection('critical');
      219 |       const { getByText } = render(

      at Object.openURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:216:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Error Handling › should handle Linking errors gracefully for phone calls

    TypeError: Cannot read properties of undefined (reading 'canOpenURL')

      420 |   describe('Error Handling', () => {
      421 |     it('should handle Linking errors gracefully for phone calls', async () => {
    > 422 |       (Linking.canOpenURL as jest.Mock).mockRejectedValue(new Error('Linking error'));
          |                ^
      423 |
      424 |       const detection = createDetection('critical');
      425 |       const { getByTestId } = render(

      at Object.canOpenURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:422:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Error Handling › should handle Linking errors gracefully for text messages

    TypeError: Cannot read properties of undefined (reading 'openURL')

      444 |
      445 |     it('should handle Linking errors gracefully for text messages', async () => {
    > 446 |       (Linking.openURL as jest.Mock).mockRejectedValue(new Error('Linking error'));
          |                ^
      447 |
      448 |       const detection = createDetection('critical');
      449 |       const { getByText } = render(

      at Object.openURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:446:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/Card.test.tsx
  ● Card › Styling › should apply default styles

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"borderRadius": 12, "marginBottom": 16}, ObjectContaining {"backgroundColor": "#FFFFFF", "padding": 16}]
    Received: undefined

      50 |       const card = getByTestId('card-content').parent;
      51 |       
    > 52 |       expect(card.props.style).toEqual(
         |                                ^
      53 |         expect.arrayContaining([
      54 |           expect.objectContaining({
      55 |             borderRadius: 12,

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:52:32)

  ● Card › Styling › should apply custom styles

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [{"borderWidth": 1, "marginTop": 20}]
    Received: undefined

      74 |       const card = getByTestId('card-content').parent;
      75 |       
    > 76 |       expect(card.props.style).toEqual(
         |                                ^
      77 |         expect.arrayContaining([customStyle])
      78 |       );
      79 |     });

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:76:32)

  ● Card › Styling › should use custom padding when provided

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"padding": 24}]
    Received: undefined

      88 |       const card = getByTestId('card-content').parent;
      89 |       
    > 90 |       expect(card.props.style).toEqual(
         |                                ^
      91 |         expect.arrayContaining([
      92 |           expect.objectContaining({ padding: 24 }),
      93 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:90:32)

  ● Card › Styling › should use default padding of 16

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"padding": 16}]
    Received: undefined

      104 |       const card = getByTestId('card-content').parent;
      105 |       
    > 106 |       expect(card.props.style).toEqual(
          |                                ^
      107 |         expect.arrayContaining([
      108 |           expect.objectContaining({ padding: 16 }),
      109 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:106:32)

  ● Card › Shadow › should apply shadow by default

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"elevation": 5, "shadowColor": "#000", "shadowOffset": {"height": 2, "width": 0}, "shadowOpacity": 0.1, "shadowRadius": 3.84}]
    Received: undefined

      122 |       const card = getByTestId('card-content').parent;
      123 |       
    > 124 |       expect(card.props.style).toEqual(
          |                                ^
      125 |         expect.arrayContaining([
      126 |           expect.objectContaining({
      127 |             shadowColor: '#000',

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:124:32)

  ● Card › Shadow › should not apply shadow when shadow prop is false

    TypeError: Cannot read properties of undefined (reading 'some')

      145 |       
      146 |       // Should not contain shadow styles
    > 147 |       const hasNoShadowStyles = !card.props.style.some(
          |                                                   ^
      148 |         (style: any) => 
      149 |           style && (
      150 |             style.shadowColor || 

      at Object.some (src/components/common/__tests__/Card.test.tsx:147:51)

  ● Card › Theme Integration › should use theme surface color for background

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "#FFFFFF"}]
    Received: undefined

      170 |       const card = getByTestId('card-content').parent;
      171 |       
    > 172 |       expect(card.props.style).toEqual(
          |                                ^
      173 |         expect.arrayContaining([
      174 |           expect.objectContaining({ backgroundColor: '#FFFFFF' }),
      175 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:172:32)

  ● Card › Stress-Friendly Design › should have rounded corners for softer appearance

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"borderRadius": 12}]
    Received: undefined

      188 |       const card = getByTestId('card-content').parent;
      189 |       
    > 190 |       expect(card.props.style).toEqual(
          |                                ^
      191 |         expect.arrayContaining([
      192 |           expect.objectContaining({ borderRadius: 12 }),
      193 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:190:32)

  ● Card › Stress-Friendly Design › should have subtle shadow for depth without harshness

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"shadowOpacity": 0.1}]
    Received: undefined

      205 |       
      206 |       // Shadow opacity is low (0.1) for subtlety
    > 207 |       expect(card.props.style).toEqual(
          |                                ^
      208 |         expect.arrayContaining([
      209 |           expect.objectContaining({ shadowOpacity: 0.1 }),
      210 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:207:32)

  ● Card › Stress-Friendly Design › should have comfortable spacing with margin bottom

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"marginBottom": 16}]
    Received: undefined

      221 |       const card = getByTestId('card-content').parent;
      222 |       
    > 223 |       expect(card.props.style).toEqual(
          |                                ^
      224 |         expect.arrayContaining([
      225 |           expect.objectContaining({ marginBottom: 16 }),
      226 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:223:32)

  ● Card › Edge Cases › should handle empty children

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      231 |   describe('Edge Cases', () => {
      232 |     it('should handle empty children', () => {
    > 233 |       const { container } = render(<Card>{null}</Card>);
          |               ^
      234 |       expect(container).toBeTruthy();
      235 |     });
      236 |

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Card.test.tsx:233:15)

  ● Card › Edge Cases › should handle zero padding

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"padding": 0}]
    Received: undefined

      244 |       const card = getByTestId('card-content').parent;
      245 |       
    > 246 |       expect(card.props.style).toEqual(
          |                                ^
      247 |         expect.arrayContaining([
      248 |           expect.objectContaining({ padding: 0 }),
      249 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:246:32)

FAIL src/stores/__tests__/wellnessStore.test.ts
  ● wellnessStore › persistence › should load persisted state on initialization

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 4

      344 |
      345 |       expect(result.current.currentMood).toBeTruthy();
    > 346 |       expect(result.current.currentMood?.value).toBe(3); // MoodValue.Neutral
          |                                                 ^
      347 |     });
      348 |   });
      349 |

      at Object.toBe (src/stores/__tests__/wellnessStore.test.ts:346:49)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/services/analytics/__tests__/analyticsService.test.ts
  ● AnalyticsService › Initialization › should initialize with privacy settings respected

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      56 |       
      57 |       expect(mockPostHog.optOut).toHaveBeenCalled();
    > 58 |       expect(mockPostHog.disable).toHaveBeenCalled();
         |                                   ^
      59 |     });
      60 |
      61 |     it('should generate anonymous user ID if none exists', async () => {

      at Object.toHaveBeenCalled (src/services/analytics/__tests__/analyticsService.test.ts:58:35)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx
  ● SyncStatusIndicator › should show synced status when all data is synced

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      16 |
      17 |   it('should show synced status when all data is synced', () => {
    > 18 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      19 |       totalPending: 0,
      20 |       isFullySynced: true,
      21 |       bouncePlan: { pendingOperations: 0, lastSync: new Date() },

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:18:46)

  ● SyncStatusIndicator › should show pending sync count when data needs syncing

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      33 |
      34 |   it('should show pending sync count when data needs syncing', () => {
    > 35 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      36 |       totalPending: 5,
      37 |       isFullySynced: false,
      38 |       bouncePlan: { pendingOperations: 2, lastSync: new Date() },

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:35:46)

  ● SyncStatusIndicator › should show offline indicator when network is disconnected

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      50 |   it('should show offline indicator when network is disconnected', () => {
      51 |     (useNetworkStatus as jest.Mock).mockReturnValue({ isConnected: false });
    > 52 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      53 |       totalPending: 3,
      54 |       isFullySynced: false
      55 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:52:46)

  ● SyncStatusIndicator › should trigger manual sync when pressed

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      62 |
      63 |   it('should trigger manual sync when pressed', async () => {
    > 64 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      65 |       totalPending: 2,
      66 |       isFullySynced: false
      67 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:64:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should show syncing status during sync

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      82 |
      83 |   it('should show syncing status during sync', async () => {
    > 84 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      85 |       totalPending: 2,
      86 |       isFullySynced: false
      87 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:84:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should show error state when sync fails

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      100 |
      101 |   it('should show error state when sync fails', async () => {
    > 102 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
          |                                              ^
      103 |       totalPending: 2,
      104 |       isFullySynced: false
      105 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:102:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should expand to show detailed sync status

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      131 |     };
      132 |
    > 133 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue(mockStatus);
          |                                              ^
      134 |
      135 |     const { getByTestId, getByText } = render(<SyncStatusIndicator />);
      136 |     const expandButton = getByTestId('expand-button');

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:133:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should auto-sync when coming back online

    TypeError: _syncManager.syncManager.getSyncStatus is not a function

      15 | export const SyncStatusIndicator: React.FC = () => {
      16 |   const { isConnected } = useNetworkStatus();
    > 17 |   const [syncStatus, setSyncStatus] = useState(syncManager.getSyncStatus());
         |                                                            ^
      18 |   const [isSyncing, setIsSyncing] = useState(false);
      19 |   const [syncError, setSyncError] = useState<string | null>(null);
      20 |   const [isExpanded, setIsExpanded] = useState(false);

      at getSyncStatus (src/components/feature/sync/SyncStatusIndicator.tsx:17:60)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:150:32)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should show conflict resolution UI when conflicts exist

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      171 |
      172 |   it('should show conflict resolution UI when conflicts exist', async () => {
    > 173 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
          |                                              ^
      174 |       totalPending: 2,
      175 |       isFullySynced: false
      176 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:173:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/feature/budget/__tests__/RunwayIndicator.test.tsx
  ● RunwayIndicator › should format projected end date correctly

    Unable to find an element with text: /June 15, 2025/

    [36m<View[39m
      [33maccessibilityLabel[39m=[32m"Financial runway indicator showing 5 months remaining"[39m
      [33maccessibilityRole[39m=[32m"summary"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mFinancial Runway[0m
        [36m</Text>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0m5 months[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m([0m
            [0m150[0m
            [0m days)[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<View[39m
        [33maccessibilityRole[39m=[32m"progressbar"[39m
        [33maccessibilityValue[39m=[32m{
          {
            "max": 100,
            "min": 0,
            "now": 41.0958904109589,
          }
        }[39m
        [33mtestID[39m=[32m"runway-progress-bar"[39m
      [36m>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"runway-progress-fill"[39m
        [36m/>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mTotal available funds[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$15,000.00[0m
          [36m</Text>[39m
        [36m</View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mMonthly burn[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$3,000.00[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<Text>[39m
        [0mFunds projected until [0m
        [0mJune 14, 2025[0m
      [36m</Text>[39m
    [36m</View>[39m

      136 |
      137 |     expect(getByText(/Funds projected until/)).toBeTruthy();
    > 138 |     expect(getByText(/June 15, 2025/)).toBeTruthy();
          |            ^
      139 |   });
      140 |
      141 |   it('should show monthly burn rate', () => {

      at Object.getByText (src/components/feature/budget/__tests__/RunwayIndicator.test.tsx:138:12)

  ● RunwayIndicator › should show monthly burn rate

    Unable to find an element with text: Monthly burn: $3,500.00

    [36m<View[39m
      [33maccessibilityLabel[39m=[32m"Financial runway indicator showing 4.3 months remaining"[39m
      [33maccessibilityRole[39m=[32m"summary"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mFinancial Runway[0m
        [36m</Text>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0m4.3 months[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m([0m
            [0m129[0m
            [0m days)[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<View[39m
        [33maccessibilityRole[39m=[32m"progressbar"[39m
        [33maccessibilityValue[39m=[32m{
          {
            "max": 100,
            "min": 0,
            "now": 35.342465753424655,
          }
        }[39m
        [33mtestID[39m=[32m"runway-progress-bar"[39m
      [36m>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"runway-progress-fill"[39m
        [36m/>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mTotal available funds[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$15,000.00[0m
          [36m</Text>[39m
        [36m</View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mMonthly burn[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$3,500.00[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<Text>[39m
        [0mFunds projected until [0m
        [0mMay 14, 2025[0m
      [36m</Text>[39m
    [36m</View>[39m

      153 |     );
      154 |
    > 155 |     expect(getByText('Monthly burn: $3,500.00')).toBeTruthy();
          |            ^
      156 |   });
      157 |
      158 |   it('should handle infinite runway gracefully', () => {

      at Object.getByText (src/components/feature/budget/__tests__/RunwayIndicator.test.tsx:155:12)

FAIL src/stores/__tests__/budgetStore.test.ts
  ● BudgetStore › State Management › should generate alerts for low runway

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      74 |       });
      75 |
    > 76 |       expect(result.current.alerts.length).toBeGreaterThan(0);
         |                                            ^
      77 |       expect(result.current.alerts.some(a => a.type === 'low_runway')).toBe(true);
      78 |     });
      79 |   });

      at Object.toBeGreaterThan (src/stores/__tests__/budgetStore.test.ts:76:44)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetStore › Local Storage › should handle AsyncStorage errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Failed to load budget data"
    Received: "Storage error"

      150 |       });
      151 |
    > 152 |       expect(result.current.error).toBe('Failed to load budget data');
          |                                    ^
      153 |       expect(result.current.budgetData).toBeNull();
      154 |     });
      155 |   });

      at Object.toBe (src/stores/__tests__/budgetStore.test.ts:152:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetStore › Alert Management › should dismiss alerts

    expect(received).toBeDefined()

    Received: undefined

      175 |
      176 |       const alertId = result.current.alerts[0]?.id;
    > 177 |       expect(alertId).toBeDefined();
          |                       ^
      178 |
      179 |       act(() => {
      180 |         result.current.dismissAlert(alertId);

      at Object.toBeDefined (src/stores/__tests__/budgetStore.test.ts:177:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/services/database/__tests__/bouncePlan.test.ts
  ● bouncePlan database service › edge cases and error scenarios › database connection scenarios › should handle malformed database responses

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: "invalid-data"

      603 |
      604 |         const result = await loadBouncePlanProgress('user123');
    > 605 |         expect(result.tasks).toEqual([]);
          |                              ^
      606 |       });
      607 |
      608 |       it('should handle null data from database', async () => {

      at Object.toEqual (src/services/database/__tests__/bouncePlan.test.ts:605:30)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/utils/__tests__/bouncePlanHelpers.test.ts
  ● Task Unlock Timing Logic › should not unlock future days tasks even after 9 AM

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      231 |     
      232 |     const currentTime = new Date();
    > 233 |     expect(currentTime < day2Unlock).toBe(true);
          |                                      ^
      234 |   });
      235 |
      236 |   it('should keep tasks unlocked once their unlock time has passed', () => {

      at Object.toBe (src/utils/__tests__/bouncePlanHelpers.test.ts:233:38)

  ● Task Unlock Timing Logic › should keep tasks unlocked once their unlock time has passed

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      252 |     const day6Unlock = new Date(startDate);
      253 |     day6Unlock.setDate(day6Unlock.getDate() + 5);
    > 254 |     expect(currentTime < day6Unlock).toBe(true);
          |                                      ^
      255 |   });
      256 |
      257 |   it('should handle daylight saving time transitions', () => {

      at Object.toBe (src/utils/__tests__/bouncePlanHelpers.test.ts:254:38)

FAIL src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx
  ● MoodTrendsChart › Data Points › should highlight highest and lowest points

    Unable to find an element with testID: mood-point-highest

    [36m<View[39m
      [33maccessibilityLabel[39m=[32m"Mood trend chart for This Week. Average mood: 3.5. 25% improvement. Lowest on 1/6/2025, highest on 1/8/2025."[39m
      [33maccessibilityRole[39m=[32m"image"[39m
      [33mtestID[39m=[32m"mood-trends-chart"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mThis Week[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mAverage: [0m
          [0m3.5[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<View[39m
        [33mtestID[39m=[32m"mood-chart-container"[39m
      [36m>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"mood-chart-points"[39m
        [36m/>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"svg-Svg"[39m
        [36m>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"mood-chart-line"[39m
          [36m/>[39m
          [36m<View[39m
            [33maccessibilityLabel[39m=[32m"Good mood on 1/8/2025"[39m
            [33mtestID[39m=[32m"mood-point-0"[39m
          [36m/>[39m
          [36m<View[39m
            [33maccessibilityLabel[39m=[32m"Neutral mood on 1/7/2025"[39m
            [33mtestID[39m=[32m"mood-point-1"[39m
          [36m/>[39m
          [36m<View[39m
            [33maccessibilityLabel[39m=[32m"Low mood on 1/6/2025"[39m
            [33mtestID[39m=[32m"mood-point-2"[39m
          [36m/>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"improvement-indicator"[39m
        [36m>[39m
          [36m<Text>[39m
            [0m25% improvement[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      120 |       );
      121 |
    > 122 |       const highestPoint = getByTestId('mood-point-highest');
          |                            ^
      123 |       const lowestPoint = getByTestId('mood-point-lowest');
      124 |
      125 |       expect(highestPoint).toBeTruthy();

      at Object.getByTestId (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:122:28)

  ● MoodTrendsChart › Accessibility › should have accessible data points

    expect(received).toContain(expected) // indexOf

    Expected substring: "January 9"
    Received string:    "Good mood on 1/8/2025"

      187 |       const point = getByTestId('mood-point-0');
      188 |       expect(point.props.accessibilityLabel).toContain('Good mood');
    > 189 |       expect(point.props.accessibilityLabel).toContain('January 9');
          |                                              ^
      190 |     });
      191 |   });
      192 |

      at Object.toContain (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:189:46)

  ● MoodTrendsChart › Visual Indicators › should use calming colors for positive trends

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      198 |
      199 |       const improvementIndicator = getByTestId('improvement-indicator');
    > 200 |       expect(improvementIndicator.props.style.color).toContain('green');
          |                                                      ^
      201 |     });
      202 |
      203 |     it('should use supportive colors for negative trends', () => {

      at Object.toContain (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:200:54)

  ● MoodTrendsChart › Visual Indicators › should use supportive colors for negative trends

    expect(received).not.toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      210 |       const declineIndicator = getByTestId('decline-indicator');
      211 |       // Using orange/amber instead of red for stress-friendly design
    > 212 |       expect(declineIndicator.props.style.color).not.toContain('red');
          |                                                      ^
      213 |       expect(declineIndicator.props.style.color).toContain('orange');
      214 |     });
      215 |   });

      at Object.toContain (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:212:54)

FAIL src/services/notifications/__tests__/notificationService.test.ts
  ● NotificationService › Permission Handling › should request notification permissions

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Permission Handling › should handle permission denial gracefully

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Permission Handling › should check existing permissions before requesting

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Permission Handling › should return false on simulator

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Push Token Registration › should register and store push token

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Push Token Registration › should handle token registration errors

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Daily Task Reminders › should schedule daily task reminder at 9am local time

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Daily Task Reminders › should cancel existing reminder before scheduling new one

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Daily Task Reminders › should respect user preferences for daily reminders

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Job Application Follow-ups › should schedule follow-up reminder for job application

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Job Application Follow-ups › should not schedule follow-up if preferences disabled

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Budget Alerts › should trigger alert when runway drops below 60 days

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Budget Alerts › should not trigger alert if runway is healthy

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Budget Alerts › should respect alert cooldown period

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Mood Check-in Reminders › should schedule evening mood check-in

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Preferences › should save notification preferences

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Preferences › should load saved preferences

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Preferences › should return default preferences if none saved

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Do Not Disturb Scheduling › should respect quiet hours for non-urgent notifications

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Do Not Disturb Scheduling › should allow urgent notifications during quiet hours

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Handlers › should handle notification response for daily task

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Handlers › should handle foreground notifications appropriately

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Local Notifications for Offline › should use local notifications when offline

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Deep Linking › should include deep link data in notifications

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

FAIL src/services/wellness/__tests__/wellnessService.test.ts
  ● wellnessService › getRecentMoods › should fetch recent moods from database

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"createdAt": 2025-07-13T04:16:10.522Z, "id": "offline-mock-uuid", "note": "Struggling today", "synced": false, "updatedAt": 2025-07-13T04:16:10.522Z, "userId": "user-123", "value": 2}]

      136 |       const result = await wellnessService.getRecentMoods(30);
      137 |
    > 138 |       expect(result).toHaveLength(2);
          |                      ^
      139 |       expect(result[0].value).toBe(MoodValue.Good);
      140 |       expect(result[1].value).toBe(MoodValue.Neutral);
      141 |     });

      at Object.toHaveLength (src/services/wellness/__tests__/wellnessService.test.ts:138:22)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › getRecentMoods › should merge offline and online moods

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"createdAt": 2025-01-09T00:00:00.000Z, "id": "offline-1", "synced": false, "updatedAt": 2025-01-09T00:00:00.000Z, "userId": "user-123", "value": 2}]

      182 |       const result = await wellnessService.getRecentMoods(30);
      183 |
    > 184 |       expect(result).toHaveLength(2);
          |                      ^
      185 |       expect(result[0].value).toBe(MoodValue.Low); // More recent offline mood
      186 |       expect(result[1].value).toBe(MoodValue.Good); // Older online mood
      187 |     });

      at Object.toHaveLength (src/services/wellness/__tests__/wellnessService.test.ts:184:22)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › calculateTrend › should calculate weekly mood trend

    expect(received).toBeCloseTo(expected, precision)

    Expected: 3.5
    Received: 0

    Expected precision:    1
    Expected difference: < 0.05
    Received difference:   3.5

      219 |
      220 |       expect(trend.period).toBe('week');
    > 221 |       expect(trend.average).toBeCloseTo(3.5, 1); // Average of Good(4) and Neutral(3)
          |                             ^
      222 |       expect(trend.entries).toHaveLength(7);
      223 |     });
      224 |

      at Object.toBeCloseTo (src/services/wellness/__tests__/wellnessService.test.ts:221:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › calculateTrend › should calculate improvement rate

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      253 |       const trend = await wellnessService.calculateTrend('week');
      254 |
    > 255 |       expect(trend.improvementRate).toBeGreaterThan(0); // Should show improvement
          |                                     ^
      256 |     });
      257 |   });
      258 |

      at Object.toBeGreaterThan (src/services/wellness/__tests__/wellnessService.test.ts:255:37)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › syncOfflineMoods › should sync offline moods when connection is restored

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "@next_chapter/mood_offline_1"
    Received: "@next_chapter/mood_offline_offline-1"

    Number of calls: 1

      335 |
      336 |       expect(syncedCount).toBe(1);
    > 337 |       expect(mockAsyncStorage.removeItem).toHaveBeenCalledWith('@next_chapter/mood_offline_1');
          |                                           ^
      338 |     });
      339 |
      340 |     it('should handle sync failures gracefully', async () => {

      at Object.toHaveBeenCalledWith (src/services/wellness/__tests__/wellnessService.test.ts:337:43)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › exportMoodData › should export mood data in specified format

    expect(received).toContain(expected) // indexOf

    Expected substring: "\"value\":4"
    Received string:    "[
      {
        \"id\": \"0.69295825268384\",
        \"user_id\": \"user-123\",
        \"value\": 4,
        \"note\": \"Great day\",
        \"created_at\": \"2025-07-13T04:16:10.534Z\",
        \"updated_at\": \"2025-07-13T04:16:10.534Z\"
      },
      {
        \"id\": \"0.04248549129368229\",
        \"user_id\": \"user-123\",
        \"value\": 2,
        \"note\": \"Tough day\",
        \"created_at\": \"2025-07-13T04:16:10.534Z\",
        \"updated_at\": \"2025-07-13T04:16:10.534Z\"
      }
    ]"

      392 |       const exportData = await wellnessService.exportMoodData('json');
      393 |
    > 394 |       expect(exportData).toContain('"value":4');
          |                          ^
      395 |       expect(exportData).toContain('"note":"Great day"');
      396 |     });
      397 |   });

      at Object.toContain (src/services/wellness/__tests__/wellnessService.test.ts:394:26)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/stores/__tests__/bouncePlanStore.offline.test.ts
  ● BouncePlanStore - Offline Queue › Persistence › should persist offline queue to storage

    TypeError: Cannot read properties of undefined (reading 'getOptions')

      221 |
      222 |       // Get the persisted state
    > 223 |       const persistedState = useBouncePlanStore.persist.getOptions().partialize!(
          |                                                         ^
      224 |         result.current
      225 |       );
      226 |

      at Object.getOptions (src/stores/__tests__/bouncePlanStore.offline.test.ts:223:57)

FAIL src/components/coach/__tests__/CoachHeader.test.tsx
  ● CoachHeader › Rendering › should render with AI Coach title

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Rendering › should show online status indicator

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Rendering › should show sync indicator when cloud sync is enabled

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Rendering › should not show sync indicator when cloud sync is disabled

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should call onSettingsPress when settings button is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should show confirmation alert when clear conversation is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should call clearConversation when user confirms clear

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should not call clearConversation when user cancels

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Accessibility › should have proper accessibility labels

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Accessibility › should have proper accessibility roles

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Theme Support › should apply theme colors correctly

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Crisis Considerations › should maintain clear conversation functionality even during crisis

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

FAIL src/services/budget/__tests__/budgetService.test.ts
  ● BudgetService › saveBudgetData › should encrypt sensitive data before saving

    TypeError: _supabase.supabase.from(...).update is not a function

      83 |     const { data, error } = await supabase
      84 |       .from('budget_data')
    > 85 |       .update(dbData)
         |        ^
      86 |       .eq('id', budgetData.id)
      87 |       .select()
      88 |       .single();

      at update (src/services/budget/budgetService.ts:85:8)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › saveBudgetData › should update existing budget data if ID exists

    TypeError: Cannot read properties of undefined (reading 'Utf8')

      18 | function decryptData(encryptedData: string): string {
      19 |   const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);
    > 20 |   return bytes.toString(CryptoJS.enc.Utf8);
         |                                      ^
      21 | }
      22 |
      23 | /**

      at Utf8 (src/services/budget/budgetService.ts:20:38)
      at decryptData (src/services/budget/budgetService.ts:53:31)
      at fromDbFormat (src/services/budget/budgetService.ts:104:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › saveBudgetData › should handle save errors gracefully

    expect(received).rejects.toThrow(expected)

    Expected substring: "Database error"
    Received message:   "_supabase.supabase.from(...).update is not a function"

          83 |     const { data, error } = await supabase
          84 |       .from('budget_data')
        > 85 |       .update(dbData)
             |        ^
          86 |       .eq('id', budgetData.id)
          87 |       .select()
          88 |       .single();

      at update (src/services/budget/budgetService.ts:85:8)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (src/services/budget/__tests__/budgetService.test.ts:125:60)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetService › loadBudgetData › should decrypt sensitive data after loading

    TypeError: Cannot read properties of undefined (reading 'Utf8')

      18 | function decryptData(encryptedData: string): string {
      19 |   const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);
    > 20 |   return bytes.toString(CryptoJS.enc.Utf8);
         |                                      ^
      21 | }
      22 |
      23 | /**

      at Utf8 (src/services/budget/budgetService.ts:20:38)
      at decryptData (src/services/budget/budgetService.ts:53:31)
      at fromDbFormat (src/services/budget/budgetService.ts:131:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › loadBudgetData › should parse dates correctly

    TypeError: Cannot read properties of undefined (reading 'Utf8')

      18 | function decryptData(encryptedData: string): string {
      19 |   const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);
    > 20 |   return bytes.toString(CryptoJS.enc.Utf8);
         |                                      ^
      21 | }
      22 |
      23 | /**

      at Utf8 (src/services/budget/budgetService.ts:20:38)
      at decryptData (src/services/budget/budgetService.ts:53:31)
      at fromDbFormat (src/services/budget/budgetService.ts:131:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › Data Encryption › should only encrypt sensitive financial fields

    TypeError: _supabase.supabase.from(...).update is not a function

      83 |     const { data, error } = await supabase
      84 |       .from('budget_data')
    > 85 |       .update(dbData)
         |        ^
      86 |       .eq('id', budgetData.id)
      87 |       .select()
      88 |       .single();

      at update (src/services/budget/budgetService.ts:85:8)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/stores/__tests__/jobTrackerStore.test.ts
  ● jobTrackerStore › loadApplications › should load applications from Supabase when user is authenticated

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › loadApplications › should load from AsyncStorage when offline

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › loadApplications › should handle errors gracefully

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › addApplication › should add application to Supabase when online

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › addApplication › should create temporary application when offline

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › updateApplicationStatus › should update application status

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › deleteApplication › should delete application from Supabase

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › search and filter › should update search query

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › search and filter › should update selected status filter

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › syncWithSupabase › should sync temporary applications with Supabase

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

FAIL src/services/notifications/__tests__/notificationIntegration.test.ts
  ● Notification System Integration › Complete User Journey › should handle first-time user notification setup

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      42 |       // Register for push notifications
      43 |       const mockToken = 'ExponentPushToken[abc123]';
    > 44 |       (Notifications.getExpoPushTokenAsync as jest.Mock).mockResolvedValue({
         |                                                          ^
      45 |         data: mockToken,
      46 |       });
      47 |       

      at Object.mockResolvedValue (src/services/notifications/__tests__/notificationIntegration.test.ts:44:58)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle job application flow with follow-up

    TypeError: Cannot read properties of undefined (reading 'DATE')

      195 |       },
      196 |       trigger: {
    > 197 |         type: SchedulableTriggerInputTypes.DATE,
          |                                            ^
      198 |         date: followUpDate,
      199 |       },
      200 |     });

      at NotificationService.DATE (src/services/notifications/notificationService.ts:197:44)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle budget alert flow

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      116 |       
      117 |       // Should not send another alert within 24 hours
    > 118 |       expect(Notifications.scheduleNotificationAsync).toHaveBeenCalledTimes(1);
          |                                                       ^
      119 |     });
      120 |
      121 |     it('should respect quiet hours', async () => {

      at Object.toHaveBeenCalledTimes (src/services/notifications/__tests__/notificationIntegration.test.ts:118:55)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle preference changes

    TypeError: Cannot read properties of undefined (reading 'DATE')

      195 |       },
      196 |       trigger: {
    > 197 |         type: SchedulableTriggerInputTypes.DATE,
          |                                            ^
      198 |         date: followUpDate,
      199 |       },
      200 |     });

      at NotificationService.DATE (src/services/notifications/notificationService.ts:197:44)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle notification permission denial gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      239 |
      240 |       const granted = await notificationService.requestPermissions();
    > 241 |       expect(granted).toBe(false);
          |                       ^
      242 |
      243 |       // App should still function without notifications
      244 |       await notificationService.scheduleDailyTaskReminder();

      at Object.toBe (src/services/notifications/__tests__/notificationIntegration.test.ts:241:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Error Handling › should handle notification scheduling errors

    expect(received).resolves.not.toThrow()

    Received promise rejected instead of resolved
    Rejected to value: [TypeError: scheduled is not iterable]

      256 |
      257 |       // Should not throw, just log error
    > 258 |       await expect(
          |             ^
      259 |         notificationService.scheduleDailyTaskReminder()
      260 |       ).resolves.not.toThrow();
      261 |     });

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (src/services/notifications/__tests__/notificationIntegration.test.ts:258:13)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/utils/budget/__tests__/budgetCalculations.test.ts
  ● Budget Calculations › calculateFinancialRunway › should calculate runway correctly with all income sources

    expect(received).toBeCloseTo(expected, precision)

    Expected: 6.96
    Received: 7

    Expected precision:    2
    Expected difference: < 0.005
    Received difference:   0.040000000000000036

      29 |       expect(runway.totalAvailableFunds).toBe(25400); // 10000 + 5000 + (400 * 26)
      30 |       expect(runway.monthlyBurn).toBe(3650); // 3000 + 650
    > 31 |       expect(runway.runwayInMonths).toBeCloseTo(6.96, 2);
         |                                     ^
      32 |       expect(runway.runwayInDays).toBe(209); // ~6.96 months * 30 days
      33 |       expect(runway.isLowRunway).toBe(false);
      34 |     });

      at Object.toBeCloseTo (src/utils/budget/__tests__/budgetCalculations.test.ts:31:37)

PASS src/services/api/__tests__/openaiSecure.test.ts
PASS src/hooks/__tests__/useNetworkAwareSync.test.ts
FAIL src/screens/main/__tests__/BudgetScreen.test.tsx
  ● BudgetScreen › should update budget when form is submitted

    TypeError: Cannot read properties of undefined (reading 'alert')

      85 |   const validateForm = (): boolean => {
      86 |     if (!formData.state) {
    > 87 |       Alert.alert('Missing Information', 'Please select your state.');
         |             ^
      88 |       return false;
      89 |     }
      90 |

      at alert (src/components/feature/budget/BudgetForm.tsx:87:13)
      at validateForm (src/components/feature/budget/BudgetForm.tsx:106:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12
      at apply (src/components/feature/budget/BudgetForm.tsx:105:21)
      at handler (node_modules/@testing-library/react-native/src/fire-event.ts:137:19)
      at callback (node_modules/@testing-library/react-native/src/act.ts:31:24)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1081:22)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at fireEvent (node_modules/@testing-library/react-native/src/fire-event.ts:136:11)
      at Function.fireEvent [as press] (node_modules/@testing-library/react-native/src/fire-event.ts:144:3)
      at Object.press (src/screens/main/__tests__/BudgetScreen.test.tsx:216:15)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetScreen › should update budget when form is submitted

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"currentSavings": 10000, "monthlyExpenses": 3000, "monthlyIncome": 5000, "severanceAmount": 5000}, true

    Number of calls: 0

      216 |     fireEvent.press(submitButton);
      217 |
    > 218 |     await waitFor(() => {
          |                  ^
      219 |       expect(mockUpdateBudget).toHaveBeenCalledWith(
      220 |         expect.objectContaining({
      221 |           monthlyIncome: 5000,

      at Object.<anonymous> (src/screens/main/__tests__/BudgetScreen.test.tsx:218:18)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

PASS src/services/__tests__/initialization.test.ts
PASS src/components/common/__tests__/NotificationBadge.test.tsx
PASS src/components/feature/resume/__tests__/AnalysisResults.test.tsx
PASS src/services/resume/__tests__/resumeAI.test.ts
PASS src/components/coach/__tests__/MessageInput.unit.test.tsx
PASS src/components/coach/__tests__/MessageInput.test.tsx
PASS src/components/feature/wellness/__tests__/MoodSelector.test.tsx
PASS src/screens/resume/__tests__/ResumeScannerScreen.test.tsx
PASS src/components/common/__tests__/NetworkStatusBar.test.tsx
FAIL src/screens/main/__tests__/WellnessScreen.test.tsx
  ● WellnessScreen › Mood Selection › should enable submit button after mood selection

    TypeError: Cannot read properties of undefined (reading 'disabled')

      124 |
      125 |       const submitButton = getByText('Log Mood');
    > 126 |       expect(submitButton.props.accessibilityState.disabled).toBe(true);
          |                                                    ^
      127 |
      128 |       fireEvent.press(getByTestId('mood-option-3'));
      129 |       

      at Object.disabled (src/screens/main/__tests__/WellnessScreen.test.tsx:126:52)

  ● WellnessScreen › Mood Submission › should save mood entry when submitted

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "note": "",
    +   "note": undefined,
        "value": 4,
      },

    Number of calls: 1

      141 |       fireEvent.press(getByText('Log Mood'));
      142 |
    > 143 |       await waitFor(() => {
          |                    ^
      144 |         expect(defaultMockStore.addMoodEntry).toHaveBeenCalledWith({
      145 |           value: MoodValue.Good,
      146 |           note: '',

      at Object.<anonymous> (src/screens/main/__tests__/WellnessScreen.test.tsx:143:20)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● WellnessScreen › Crisis Intervention › should trigger coach with appropriate tone for emotional state

    Unable to find an element with text: Talk to Coach

    [36m<View>[39m
      [36m<RCTScrollView>[39m
        [36m<RCTRefreshControl />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityRole[39m=[32m"alert"[39m
            [33mtestID[39m=[32m"support-resources"[39m
          [36m>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mWe're Here to Help[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Dismiss alert"[39m
                [33maccessibilityRole[39m=[32m"button"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dismiss-button"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Feather"[39m
                [36m>[39m
                  [0mx[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Talk to AI Coach button"[39m
                [33maccessibilityRole[39m=[32m"button"[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mTalk to AI Coach[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mHow are you feeling today?[0m
            [36m</Text>[39m
            [36m<View[39m
              [33mtestID[39m=[32m"mood-selector"[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Selected Very Low mood"[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": true,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-1"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😔[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Low[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-2"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😕[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mLow[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Neutral mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-3"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😐[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mNeutral[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-4"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m🙂[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mGood[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-5"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😊[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Good[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<TextInput[39m
                [33mplaceholder[39m=[32m"What's on your mind? (optional)"[39m
                [33mvalue[39m=[32m"Feeling hopeless"[39m
              [36m/>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessibilityRole[39m=[32m"button"[39m
              [33maccessibilityState[39m=[32m{
                {
                  "disabled": false,
                }
              }[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0mLog Mood[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      256 |       fireEvent.changeText(noteInput, 'Feeling hopeless');
      257 |       
    > 258 |       fireEvent.press(getByText('Talk to Coach'));
          |                       ^
      259 |
      260 |       await waitFor(() => {
      261 |         expect(mockNavigate).toHaveBeenCalledWith('Coach', {

      at Object.getByText (src/screens/main/__tests__/WellnessScreen.test.tsx:258:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● WellnessScreen › Mood History and Trends › should display mood trends chart

    Unable to find an element with text: 15% improvement

    [36m<View>[39m
      [36m<RCTScrollView>[39m
        [36m<RCTRefreshControl />[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mHow are you feeling today?[0m
            [36m</Text>[39m
            [36m<View[39m
              [33mtestID[39m=[32m"mood-selector"[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-1"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😔[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Low[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-2"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😕[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mLow[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Neutral mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-3"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😐[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mNeutral[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-4"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m🙂[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mGood[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-5"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m😊[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Good[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessibilityRole[39m=[32m"button"[39m
              [33maccessibilityState[39m=[32m{
                {
                  "disabled": true,
                }
              }[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0mLog Mood[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mYour Mood Trends[0m
            [36m</Text>[39m
            [36m<View[39m
              [33mtestID[39m=[32m"mood-trends-chart"[39m
            [36m>[39m
              [36m<Text>[39m
                [0mNo mood data for this period[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      322 |
      323 |       expect(getByTestId('mood-trends-chart')).toBeTruthy();
    > 324 |       expect(getByText('15% improvement')).toBeTruthy();
          |              ^
      325 |     });
      326 |
      327 |     it('should show mood streak', () => {

      at Object.getByText (src/screens/main/__tests__/WellnessScreen.test.tsx:324:14)

PASS src/services/api/__tests__/supabaseSecure.test.ts
PASS src/components/feature/resume/__tests__/ResumeCard.test.tsx
PASS src/services/security/__tests__/environment.test.ts
PASS src/utils/__tests__/encryption.test.ts
PASS src/components/feature/bounce-plan/__tests__/TaskDetailModal.test.tsx
PASS src/components/coach/__tests__/MessageBubble.unit.test.tsx
PASS src/components/feature/bounce-plan/__tests__/TaskCard.test.tsx
PASS src/services/resume/__tests__/resumeParser.test.ts
PASS src/components/common/__tests__/DashboardCard.test.tsx
PASS src/services/api/__tests__/openai.test.ts
PASS src/components/coach/__tests__/CoachCrisisIntervention.test.tsx
PASS src/hooks/__tests__/useNetworkStatus.test.ts
PASS src/test-utils/__tests__/typescript-setup.test.ts
PASS src/services/onboarding/__tests__/onboardingService.test.ts
PASS src/utils/__tests__/validation.test.ts
FAIL src/stores/__tests__/coachStore.test.ts
  ● Test suite failed to run

    Cannot find module '../../services/database/supabase' from 'src/stores/__tests__/coachStore.test.ts'

       6 | // Mock dependencies
       7 | jest.mock('@react-native-async-storage/async-storage');
    >  8 | jest.mock('../../services/database/supabase', () => ({
         |      ^
       9 |   supabase: {
      10 |     auth: {
      11 |       getUser: jest.fn().mockResolvedValue({ data: { user: { id: 'test-user-id' } } }),

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.mock (src/stores/__tests__/coachStore.test.ts:8:6)

PASS src/services/analytics/__tests__/utils.test.ts
PASS src/hooks/__tests__/useOnboarding.test.ts
FAIL src/components/feature/budget/__tests__/BudgetForm.test.tsx
  ● BudgetForm › should render all form fields

    Found multiple elements with placeholder: Enter amount

      69 |     );
      70 |
    > 71 |     expect(getByPlaceholderText('Enter amount')).toBeTruthy();
         |            ^
      72 |     expect(getByText('Monthly Income (pre-layoff)')).toBeTruthy();
      73 |     expect(getByText('Current Savings')).toBeTruthy();
      74 |     expect(getByText('Monthly Expenses')).toBeTruthy();

      at Object.getByPlaceholderText (src/components/feature/budget/__tests__/BudgetForm.test.tsx:71:12)

  ● BudgetForm › should populate form with initial data

    Unable to find an element with displayValue: $5,000

    [36m<View[39m
      [33mtestID[39m=[32m"budget-form"[39m
    [36m>[39m
      [36m<RCTScrollView>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Income (pre-layoff)[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mYour salary before being laid off[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly income before layoff"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-income-input"[39m
              [33mvalue[39m=[32m"$5,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mCurrent Savings[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mTotal amount in savings, checking, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Current total savings"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"current-savings-input"[39m
              [33mvalue[39m=[32m"$10,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Expenses[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mRent, utilities, food, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly expenses"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-expenses-input"[39m
              [33mvalue[39m=[32m"$3,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSeverance Amount[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mIf applicable[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Severance amount received"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"severance-amount-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mState[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mFor unemployment benefit calculation[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<RNCPicker[39m
                  [33maccessibilityLabel[39m=[32m"Select your state"[39m
                  [33mtestID[39m=[32m"state-picker"[39m
                [36m/>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mHad employer health insurance?[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor COBRA cost estimation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<RCTSwitch[39m
              [33maccessibilityLabel[39m=[32m"Had employer health insurance"[39m
              [33maccessibilityRole[39m=[32m"switch"[39m
              [33mtestID[39m=[32m"health-insurance-switch"[39m
              [33mvalue[39m=[32m{true}[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mNumber of dependents[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor insurance cost calculation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Decrease dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-decrease"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0mremove[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Text[39m
                [33mtestID[39m=[32m"dependents-value"[39m
              [36m>[39m
                [0m0[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Increase dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-increase"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0madd[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
            [33mtestID[39m=[32m"submit-button"[39m
          [36m>[39m
            [36m<Text>[39m
              [0mCalculate Runway[0m
            [36m</Text>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      84 |     );
      85 |
    > 86 |     expect(getByDisplayValue('$5,000')).toBeTruthy();
         |            ^
      87 |     expect(getByDisplayValue('$10,000')).toBeTruthy();
      88 |     expect(getByDisplayValue('$3,000')).toBeTruthy();
      89 |     expect(getByDisplayValue('CA')).toBeTruthy();

      at Object.getByDisplayValue (src/components/feature/budget/__tests__/BudgetForm.test.tsx:86:12)

  ● BudgetForm › should format currency inputs correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "$5,000.50"
    Received: "5000.50"

       99 |     
      100 |     fireEvent.changeText(incomeInput, '5000.50');
    > 101 |     expect(incomeInput.props.value).toBe('$5,000.50');
          |                                     ^
      102 |
      103 |     fireEvent.changeText(incomeInput, '1234567.89');
      104 |     expect(incomeInput.props.value).toBe('$1,234,567.89');

      at Object.toBe (src/components/feature/budget/__tests__/BudgetForm.test.tsx:101:37)

  ● BudgetForm › should validate required fields

    TypeError: Cannot read properties of undefined (reading 'alert')

      85 |   const validateForm = (): boolean => {
      86 |     if (!formData.state) {
    > 87 |       Alert.alert('Missing Information', 'Please select your state.');
         |             ^
      88 |       return false;
      89 |     }
      90 |

      at alert (src/components/feature/budget/BudgetForm.tsx:87:13)
      at validateForm (src/components/feature/budget/BudgetForm.tsx:106:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12
      at apply (src/components/feature/budget/BudgetForm.tsx:105:21)
      at handler (node_modules/@testing-library/react-native/src/fire-event.ts:137:19)
      at callback (node_modules/@testing-library/react-native/src/act.ts:31:24)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1081:22)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at fireEvent (node_modules/@testing-library/react-native/src/fire-event.ts:136:11)
      at Function.fireEvent [as press] (node_modules/@testing-library/react-native/src/fire-event.ts:144:3)
      at Object.press (src/components/feature/budget/__tests__/BudgetForm.test.tsx:113:15)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should validate required fields

    Cannot read properties of undefined (reading 'alert')

      113 |     fireEvent.press(submitButton);
      114 |
    > 115 |     await waitFor(() => {
          |                  ^
      116 |       expect(Alert.alert).toHaveBeenCalledWith(
      117 |         'Missing Information',
      118 |         expect.stringContaining('Please fill in all required fields')

      at Object.<anonymous> (src/components/feature/budget/__tests__/BudgetForm.test.tsx:115:18)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should validate numeric inputs

    TypeError: Cannot read properties of undefined (reading 'alert')

      85 |   const validateForm = (): boolean => {
      86 |     if (!formData.state) {
    > 87 |       Alert.alert('Missing Information', 'Please select your state.');
         |             ^
      88 |       return false;
      89 |     }
      90 |

      at alert (src/components/feature/budget/BudgetForm.tsx:87:13)
      at validateForm (src/components/feature/budget/BudgetForm.tsx:106:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12
      at apply (src/components/feature/budget/BudgetForm.tsx:105:21)
      at handler (node_modules/@testing-library/react-native/src/fire-event.ts:137:19)
      at callback (node_modules/@testing-library/react-native/src/act.ts:31:24)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1081:22)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at fireEvent (node_modules/@testing-library/react-native/src/fire-event.ts:136:11)
      at Function.fireEvent [as press] (node_modules/@testing-library/react-native/src/fire-event.ts:144:3)
      at Object.press (src/components/feature/budget/__tests__/BudgetForm.test.tsx:134:15)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should validate numeric inputs

    Cannot read properties of undefined (reading 'alert')

      134 |     fireEvent.press(submitButton);
      135 |
    > 136 |     await waitFor(() => {
          |                  ^
      137 |       expect(Alert.alert).toHaveBeenCalledWith(
      138 |         'Invalid Input',
      139 |         expect.stringContaining('Please enter valid numbers')

      at Object.<anonymous> (src/components/feature/budget/__tests__/BudgetForm.test.tsx:136:18)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should update dependents count with stepper

    expect(received).toBe(expected) // Object.is equality

    Expected: "0"
    Received: 0

      166 |     const dependentsValue = getByTestId('dependents-value');
      167 |
    > 168 |     expect(dependentsValue.props.children).toBe('0');
          |                                            ^
      169 |
      170 |     fireEvent.press(increaseButton);
      171 |     expect(dependentsValue.props.children).toBe('1');

      at Object.toBe (src/components/feature/budget/__tests__/BudgetForm.test.tsx:168:44)

  ● BudgetForm › should show loading state while submitting

    Unable to find an element with text: Calculating...

    [36m<View[39m
      [33mtestID[39m=[32m"budget-form"[39m
    [36m>[39m
      [36m<RCTScrollView>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Income (pre-layoff)[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mYour salary before being laid off[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly income before layoff"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-income-input"[39m
              [33mvalue[39m=[32m"$5,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mCurrent Savings[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mTotal amount in savings, checking, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Current total savings"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"current-savings-input"[39m
              [33mvalue[39m=[32m"$10,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Expenses[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mRent, utilities, food, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly expenses"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-expenses-input"[39m
              [33mvalue[39m=[32m"$3,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSeverance Amount[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mIf applicable[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Severance amount received"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"severance-amount-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mState[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mFor unemployment benefit calculation[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<RNCPicker[39m
                  [33maccessibilityLabel[39m=[32m"Select your state"[39m
                  [33mtestID[39m=[32m"state-picker"[39m
                [36m/>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mHad employer health insurance?[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor COBRA cost estimation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<RCTSwitch[39m
              [33maccessibilityLabel[39m=[32m"Had employer health insurance"[39m
              [33maccessibilityRole[39m=[32m"switch"[39m
              [33mtestID[39m=[32m"health-insurance-switch"[39m
              [33mvalue[39m=[32m{true}[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mNumber of dependents[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor insurance cost calculation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Decrease dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-decrease"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0mremove[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Text[39m
                [33mtestID[39m=[32m"dependents-value"[39m
              [36m>[39m
                [0m0[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Increase dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-increase"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0madd[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
            [33mtestID[39m=[32m"submit-button"[39m
          [36m>[39m
            [36m<ActivityIndicator />[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      210 |     fireEvent.press(submitButton);
      211 |
    > 212 |     expect(getByText('Calculating...')).toBeTruthy();
          |            ^
      213 |     expect(getByTestId('submit-button')).toBeDisabled();
      214 |
      215 |     await waitFor(() => {

      at Object.getByText (src/components/feature/budget/__tests__/BudgetForm.test.tsx:212:12)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should render state picker with all US states

    TypeError: Cannot read properties of undefined (reading 'length')

      249 |     
      250 |     // Should have 51 items (50 states + default selection)
    > 251 |     expect(statePicker.props.children.length).toBe(51);
          |                                       ^
      252 |   });
      253 |
      254 |   it('should show helper text for form fields', () => {

      at Object.length (src/components/feature/budget/__tests__/BudgetForm.test.tsx:251:39)

  ● BudgetForm › should be accessible with proper labels

    Unable to find an element with accessibility label: Number of dependents

    [36m<View[39m
      [33mtestID[39m=[32m"budget-form"[39m
    [36m>[39m
      [36m<RCTScrollView>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Income (pre-layoff)[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mYour salary before being laid off[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly income before layoff"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-income-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mCurrent Savings[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mTotal amount in savings, checking, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Current total savings"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"current-savings-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Expenses[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mRent, utilities, food, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly expenses"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-expenses-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSeverance Amount[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mIf applicable[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Severance amount received"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"severance-amount-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mState[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mFor unemployment benefit calculation[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<RNCPicker[39m
                  [33maccessibilityLabel[39m=[32m"Select your state"[39m
                  [33mtestID[39m=[32m"state-picker"[39m
                [36m/>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mHad employer health insurance?[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor COBRA cost estimation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<RCTSwitch[39m
              [33maccessibilityLabel[39m=[32m"Had employer health insurance"[39m
              [33maccessibilityRole[39m=[32m"switch"[39m
              [33mtestID[39m=[32m"health-insurance-switch"[39m
              [33mvalue[39m=[32m{false}[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mNumber of dependents[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor insurance cost calculation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Decrease dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-decrease"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0mremove[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Text[39m
                [33mtestID[39m=[32m"dependents-value"[39m
              [36m>[39m
                [0m0[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Increase dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-increase"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0madd[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
            [33mtestID[39m=[32m"submit-button"[39m
          [36m>[39m
            [36m<Text>[39m
              [0mCalculate Runway[0m
            [36m</Text>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      275 |     expect(getByLabelText('Select your state')).toBeTruthy();
      276 |     expect(getByLabelText('Had employer health insurance')).toBeTruthy();
    > 277 |     expect(getByLabelText('Number of dependents')).toBeTruthy();
          |            ^
      278 |   });
      279 | });

      at Object.getByLabelText (src/components/feature/budget/__tests__/BudgetForm.test.tsx:277:12)

PASS src/services/database/sync/__tests__/syncManager.test.ts (6.118 s)
A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
-----------------------------------------|---------|----------|---------|---------|-------------------------------------------------------------------------------------------------
File                                     | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s                                                                               
-----------------------------------------|---------|----------|---------|---------|-------------------------------------------------------------------------------------------------
All files                                |   53.75 |    51.13 |   50.41 |   54.61 |                                                                                                 
 components/app                          |    2.04 |        0 |       0 |    2.04 |                                                                                                 
  NotificationSetup.tsx                  |    2.04 |        0 |       0 |    2.04 | 22-128                                                                                          
 components/coach                        |   65.62 |    88.31 |      50 |   67.74 |                                                                                                 
  CoachHeader.tsx                        |   14.28 |        0 |       0 |   14.28 | 12-33                                                                                           
  CoachSettings.tsx                      |      20 |        0 |       0 |      20 | 22-26                                                                                           
  MessageBubble.tsx                      |    90.9 |    97.22 |     100 |     100 | 15                                                                                              
  MessageInput.tsx                       |     100 |    89.18 |     100 |     100 | 32,42-43,126                                                                                    
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 components/common                       |   87.81 |       85 |   79.16 |   87.69 |                                                                                                 
  AccessibleTouchable.tsx                |       0 |        0 |       0 |       0 | 26-62                                                                                           
  Button.tsx                             |     100 |      100 |     100 |     100 |                                                                                                 
  Card.tsx                               |     100 |      100 |     100 |     100 |                                                                                                 
  DashboardCard.tsx                      |     100 |      100 |     100 |     100 |                                                                                                 
  ErrorBoundary.styles.ts                |       0 |      100 |     100 |       0 | 4                                                                                               
  ErrorBoundary.tsx                      |     100 |      100 |     100 |     100 |                                                                                                 
  ErrorMessage.styles.ts                 |     100 |      100 |     100 |     100 |                                                                                                 
  ErrorMessage.tsx                       |     100 |    86.36 |     100 |     100 | 63-67                                                                                           
  Header.tsx                             |     100 |      100 |     100 |     100 |                                                                                                 
  Input.tsx                              |     100 |      100 |     100 |     100 |                                                                                                 
  LoadingOverlay.styles.ts               |     100 |      100 |     100 |     100 |                                                                                                 
  LoadingOverlay.tsx                     |     100 |      100 |     100 |     100 |                                                                                                 
  NetworkStatusBar.tsx                   |     100 |    96.29 |     100 |     100 | 90                                                                                              
  NotificationBadge.styles.ts            |     100 |      100 |     100 |     100 |                                                                                                 
  NotificationBadge.tsx                  |     100 |      100 |     100 |     100 |                                                                                                 
  NotificationPermissionPrompt.styles.ts |     100 |      100 |     100 |     100 |                                                                                                 
  NotificationPermissionPrompt.tsx       |     100 |      100 |     100 |     100 |                                                                                                 
  NotificationSettings.styles.ts         |     100 |      100 |     100 |     100 |                                                                                                 
  NotificationSettings.tsx               |   64.81 |    46.42 |   43.75 |   64.81 | 40,64-68,77-84,152-249                                                                          
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 components/dev                          |       0 |        0 |       0 |       0 |                                                                                                 
  AccessibilityChecklist.tsx             |       0 |        0 |       0 |       0 | 21-281                                                                                          
 components/feature/bounce-plan          |   93.02 |    89.79 |   81.81 |   92.85 |                                                                                                 
  TaskCard.tsx                           |   83.33 |    85.71 |      50 |   83.33 | 41,48,59                                                                                        
  TaskDetailModal.tsx                    |     100 |    92.85 |     100 |     100 | 105,288                                                                                         
 components/feature/budget               |   79.16 |    88.23 |   68.96 |      80 |                                                                                                 
  BudgetAlerts.tsx                       |   95.65 |    81.81 |     100 |   95.45 | 50                                                                                              
  BudgetForm.tsx                         |    67.3 |    86.04 |   57.89 |   68.62 | 79-81,88,92-93,98-99,112,227,244,261,278-294,331-345                                            
  RunwayIndicator.tsx                    |     100 |      100 |     100 |     100 |                                                                                                 
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
  styles.ts                              |       0 |      100 |       0 |       0 | 4                                                                                               
 components/feature/job-tracker          |   16.96 |    19.64 |     8.1 |   16.98 |                                                                                                 
  JobApplicationModal.tsx                |       0 |        0 |       0 |       0 | 28-329                                                                                          
  JobCard.tsx                            |   86.36 |    81.48 |     100 |     100 | 23-38,47-48                                                                                     
  KanbanBoard.tsx                        |       0 |        0 |       0 |       0 | 20-205                                                                                          
  SearchFilterBar.tsx                    |       0 |        0 |       0 |       0 | 22-107                                                                                          
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 components/feature/onboarding           |       0 |        0 |       0 |       0 |                                                                                                 
  DateInput.tsx                          |       0 |        0 |       0 |       0 | 13-107                                                                                          
  OnboardingProgressBar.tsx              |       0 |      100 |       0 |       0 | 11-38                                                                                           
 components/feature/resume               |   98.78 |     88.4 |     100 |   98.68 |                                                                                                 
  AnalysisResults.tsx                    |     100 |     91.3 |     100 |     100 | 175,192-193                                                                                     
  ResumeCard.tsx                         |      95 |     82.6 |     100 |   94.73 | 45                                                                                              
 components/feature/sync                 |    3.65 |        0 |    3.44 |    4.02 |                                                                                                 
  OfflineQueueViewer.tsx                 |    2.24 |        0 |       0 |    2.53 | 15-227                                                                                          
  SyncStatusIndicator.tsx                |    5.33 |        0 |    9.09 |    5.71 | 18-244                                                                                          
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 components/feature/wellness             |   79.62 |    81.94 |   76.92 |   81.37 |                                                                                                 
  CrisisAlert.tsx                        |   68.57 |       90 |   71.42 |   68.57 | 32-46,55-60                                                                                     
  MoodSelector.tsx                       |   67.64 |    73.91 |   66.66 |   74.19 | 38-41,48-51,79-80                                                                               
  MoodTrendsChart.tsx                    |     100 |    82.75 |     100 |     100 | 136-146                                                                                         
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 config                                  |       0 |        0 |       0 |       0 |                                                                                                 
  constants.ts                           |       0 |      100 |     100 |       0 | 2-61                                                                                            
  env.ts                                 |       0 |        0 |       0 |       0 | 4-32                                                                                            
 constants                               |     100 |      100 |     100 |     100 |                                                                                                 
  bouncePlanTasks.ts                     |     100 |      100 |     100 |     100 |                                                                                                 
 context                                 |   61.11 |    54.71 |   74.07 |   61.93 |                                                                                                 
  AuthContext.tsx                        |   35.21 |    31.81 |      50 |   36.36 | 40,51-57,66-80,85-101,106-116,121-136,160                                                       
  OfflineContext.tsx                     |   92.15 |    84.21 |     100 |   91.83 | 41,48,71,77                                                                                     
  ThemeContext.tsx                       |    67.5 |       50 |      75 |    67.5 | 35,58,61-64,78-82,88-92,114                                                                     
 hooks                                   |   24.41 |    16.04 |   13.33 |   25.37 |                                                                                                 
  useAccessibility.ts                    |       0 |        0 |       0 |       0 | 17-174                                                                                          
  useAuth.ts                             |   33.33 |      100 |       0 |   33.33 | 5-6                                                                                             
  useFormValidation.ts                   |       0 |        0 |       0 |       0 | 32-208                                                                                          
  useNetworkAwareSync.ts                 |     100 |      100 |     100 |     100 |                                                                                                 
  useNetworkStatus.ts                    |       0 |        0 |       0 |       0 |                                                                                                 
  useNotifications.ts                    |   48.38 |        0 |   15.38 |   48.38 | 24-37,43,47,51,55,59,63,67,71                                                                   
  useOnboarding.ts                       |   94.11 |     87.5 |     100 |     100 | 46                                                                                              
 navigation                              |       0 |        0 |       0 |       0 |                                                                                                 
  TabNavigator.tsx                       |       0 |        0 |       0 |       0 | 18-55                                                                                           
 screens/auth                            |   26.89 |    24.35 |   26.92 |   26.89 |                                                                                                 
  ForgotPasswordScreen.tsx               |       0 |        0 |       0 |       0 | 12-166                                                                                          
  LoginScreen.tsx                        |   94.11 |    86.36 |    87.5 |   94.11 | 50,78                                                                                           
  SignupScreen.tsx                       |       0 |        0 |       0 |       0 | 12-189                                                                                          
  TestAuthScreen.tsx                     |       0 |        0 |       0 |       0 | 8-76                                                                                            
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 screens/main                            |   35.97 |    54.73 |   29.54 |   36.24 |                                                                                                 
  BouncePlanScreen.tsx                   |     4.3 |        0 |    5.55 |    4.44 | 28-319                                                                                          
  BudgetScreen.tsx                       |      75 |     93.1 |      60 |      75 | 38-40,44-45                                                                                     
  CoachScreen.tsx                        |       0 |        0 |       0 |       0 | 24-191                                                                                          
  HomeScreen.styles.ts                   |     100 |      100 |     100 |     100 |                                                                                                 
  HomeScreen.tsx                         |   71.64 |    79.59 |   56.52 |   76.78 | 136,140-142,146-149,175-282,305-370                                                             
  HomeScreenWithErrorBoundary.tsx        |       0 |      100 |       0 |       0 | 6                                                                                               
  SettingsScreen.tsx                     |       0 |      100 |       0 |       0 | 6-15                                                                                            
  TrackerScreen.tsx                      |       0 |        0 |       0 |       0 | 12-134                                                                                          
  WellnessScreen.tsx                     |   84.48 |    88.37 |   66.66 |   87.27 | 103-111,116-117,205                                                                             
 screens/onboarding                      |       0 |        0 |       0 |       0 |                                                                                                 
  GoalsScreen.tsx                        |       0 |        0 |       0 |       0 | 9-124                                                                                           
  LayoffDetailsScreen.tsx                |       0 |        0 |       0 |       0 | 10-129                                                                                          
  PersonalInfoScreen.tsx                 |       0 |        0 |       0 |       0 | 9-131                                                                                           
  WelcomeScreen.tsx                      |       0 |        0 |       0 |       0 | 8-67                                                                                            
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
 screens/resume                          |   87.93 |    84.21 |   86.95 |   94.23 |                                                                                                 
  ResumeScannerScreen.tsx                |   87.93 |    84.21 |   86.95 |   94.23 | 262,284,327                                                                                     
 services                                |   88.09 |      100 |      75 |   88.09 |                                                                                                 
  initialization.ts                      |   88.09 |      100 |      75 |   88.09 | 67,120-124                                                                                      
 services/analytics                      |   61.97 |    63.26 |   60.37 |   61.46 |                                                                                                 
  analyticsService.ts                    |   87.82 |    86.79 |   87.09 |   89.18 | 66,77,87-95,222,235,244,268,279,299-300                                                         
  config.ts                              |   56.25 |       50 |      50 |   56.25 | 26-36,55                                                                                        
  examples.ts                            |       0 |        0 |       0 |       0 | 17-211                                                                                          
  index.ts                               |    3.57 |        0 |       0 |    3.57 | 11-64                                                                                           
  types.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
  utils.ts                               |     100 |      100 |     100 |     100 |                                                                                                 
 services/api                            |   82.06 |    71.62 |   89.18 |   81.46 |                                                                                                 
  openai.ts                              |   63.63 |       50 |   71.42 |   63.63 | 131-212                                                                                         
  openaiSecure.ts                        |   94.04 |    88.46 |   95.23 |   93.67 | 164,175,283,298,322                                                                             
  supabase.ts                            |      80 |     62.5 |     100 |      80 | 9                                                                                               
  supabaseSecure.ts                      |    82.5 |    81.25 |   88.88 |   82.05 | 21,65,89-90,114-115,132                                                                         
 services/budget                         |   82.85 |       75 |     100 |    87.5 |                                                                                                 
  budgetService.ts                       |   82.85 |       75 |     100 |    87.5 | 94-101,114                                                                                      
 services/database                       |   25.72 |    40.86 |   31.25 |   25.92 |                                                                                                 
  bouncePlan.ts                          |   83.87 |       95 |     100 |   82.75 | 101-102,111-112,137-138,159-160,192-193                                                         
  coachService.ts                        |    2.77 |        0 |       0 |    2.94 | 9-102                                                                                           
  index.ts                               |       0 |      100 |       0 |       0 | 8-9                                                                                             
  jobApplications.ts                     |       0 |        0 |       0 |       0 | 5-249                                                                                           
 services/database/sync                  |   81.97 |    61.81 |      85 |   82.31 |                                                                                                 
  syncManager.ts                         |   81.97 |    61.81 |      85 |   82.31 | 86-87,100-101,124-126,136-137,154-162,181-183,204-206,215-216,307-314,416                       
 services/notifications                  |    40.8 |    32.14 |   41.93 |   41.04 |                                                                                                 
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
  notificationHandlers.ts                |   54.76 |    43.47 |      75 |   54.76 | 7,25,35-67,80,92,109-113                                                                        
  notificationService.ts                 |   43.63 |    32.07 |   41.66 |   44.03 | 59-84,90-91,101-116,125-126,148,154-160,180,207,213-217,237-243,274-275,285-295,322-355,374-392 
  pushNotifications.ts                   |       0 |        0 |       0 |       0 | 7-57                                                                                            
 services/onboarding                     |   79.71 |    75.51 |      80 |   79.41 |                                                                                                 
  index.ts                               |       0 |        0 |       0 |       0 |                                                                                                 
  onboardingService.ts                   |   79.71 |    75.51 |      80 |   79.41 | 72-73,126,150,191-194,229-254                                                                   
 services/resume                         |   91.16 |    84.11 |   97.29 |   91.32 |                                                                                                 
  resumeAI.ts                            |   87.95 |    77.35 |   94.11 |   87.17 | 188,196-198,214-217,229,241                                                                     
  resumeParser.ts                        |   93.87 |    90.74 |     100 |   94.73 | 196,251-252,309,328                                                                             
 services/security                       |   82.35 |    89.13 |   80.95 |   82.35 |                                                                                                 
  environment.ts                         |   95.45 |    93.75 |     100 |   95.45 | 107,156                                                                                         
  index.ts                               |    12.5 |        0 |       0 |    12.5 | 18-46,59-62                                                                                     
  keychain.ts                            |   95.23 |    91.66 |     100 |   95.23 | 62,124                                                                                          
 services/wellness                       |   61.58 |    35.71 |   52.38 |   68.18 |                                                                                                 
  wellnessService.ts                     |   61.58 |    35.71 |   52.38 |   68.18 | 83-95,141-177,220-221,267-293,315-331,350-357                                                   
 stores                                  |   48.91 |    36.98 |   50.31 |   49.27 |                                                                                                 
  authStore.ts                           |   33.33 |      100 |       0 |   33.33 | 8-10                                                                                            
  bouncePlanStore.ts                     |    90.9 |       82 |      85 |   91.42 | 408-409,442-451,467-483                                                                         
  budgetStore.ts                         |   46.47 |    31.03 |   43.75 |   47.69 | 105-110,142-162,175-177,185,209-257                                                             
  coachStore.ts                          |    6.36 |     2.94 |    9.09 |    4.95 | 49-185,192-290                                                                                  
  jobTrackerStore.ts                     |    3.12 |        0 |    6.25 |    2.68 | 49-238,246-411                                                                                  
  onboardingStore.ts                     |   70.83 |       50 |      80 |   69.56 | 64,72,80,92-99,124-125,140-141,154-161                                                          
  resumeStore.ts                         |   85.55 |    63.15 |    87.5 |   86.36 | 91-92,180-181,201-202,238-243,267,291                                                           
  wellnessStore.ts                       |      63 |       50 |   52.63 |   64.89 | 98-99,117-118,142,145-147,191,234,245-291                                                       
 styles                                  |     100 |      100 |     100 |     100 |                                                                                                 
  theme.ts                               |     100 |      100 |     100 |     100 |                                                                                                 
 test-utils                              |    67.9 |    58.06 |      60 |   68.87 |                                                                                                 
  builders.ts                            |   36.36 |        0 |   13.33 |   34.48 | 27,41,52,59,67-83,89-97,131-136                                                                 
  mockHelpers.ts                         |   73.91 |    66.66 |      40 |   80.95 | 15-18,95                                                                                        
  test-act-utils.ts                      |   67.74 |    33.33 |   68.75 |   66.66 | 22-32,52-55,77                                                                                  
  test-helpers.tsx                       |      80 |    83.33 |   79.41 |   80.28 | 80-90,98-104,175                                                                                
 test-utils/builders                     |   40.42 |        0 |       0 |   51.35 |                                                                                                 
  bouncePlan.ts                          |   38.46 |        0 |       0 |   45.45 | 23,35,48,58,76,86,100-112,173,179-209                                                           
  budget.ts                              |      50 |      100 |       0 |     100 |                                                                                                 
 theme                                   |     100 |      100 |     100 |     100 |                                                                                                 
  index.ts                               |     100 |      100 |     100 |     100 |                                                                                                 
 utils                                   |   50.73 |    40.23 |   41.81 |    51.9 |                                                                                                 
  accessibility.ts                       |       0 |        0 |       0 |       0 | 12-241                                                                                          
  analytics.ts                           |       0 |      100 |       0 |       0 | 12                                                                                              
  coachHelpers.ts                        |       0 |        0 |       0 |       0 | 6-114                                                                                           
  constants.ts                           |     100 |      100 |     100 |     100 |                                                                                                 
  encryption.ts                          |   98.38 |    93.75 |     100 |   98.38 | 38                                                                                              
  errorHandling.ts                       |   86.66 |    76.31 |     100 |   86.04 | 51,55,59,65-66,77                                                                               
  helpers.ts                             |       0 |        0 |       0 |       0 | 2-34                                                                                            
  typeGuards.ts                          |      25 |     6.25 |   33.33 |      25 | 14,29-56                                                                                        
  uuid.ts                                |       0 |      100 |       0 |       0 | 7-22                                                                                            
  validation.ts                          |     100 |      100 |     100 |     100 |                                                                                                 
 utils/budget                            |      95 |    78.94 |     100 |     100 |                                                                                                 
  budgetCalculations.ts                  |      95 |    78.94 |     100 |     100 | 17,106-107,209-211                                                                              
-----------------------------------------|---------|----------|---------|---------|-------------------------------------------------------------------------------------------------
Jest: "global" coverage threshold for statements (80%) not met: 53.75%
Jest: "global" coverage threshold for branches (80%) not met: 51.13%
Jest: "global" coverage threshold for lines (80%) not met: 54.61%
Jest: "global" coverage threshold for functions (80%) not met: 50.41%

Summary of all failing tests
FAIL src/test-utils/__tests__/test-helpers.test.tsx
  ● test-helpers › renderWithProviders › should render component with all providers

    Hooks cannot be defined inside tests. Hook of type "afterEach" is nested within "should render component with all providers".

      119 |   
      120 |   // Store reset after each test
    > 121 |   global.afterEach && global.afterEach(() => {
          |                              ^
      122 |     storeResetFns.forEach(resetFn => resetFn());
      123 |   });
      124 |   

      at eventHandler (node_modules/jest-circus/build/eventHandler.js:97:11)
      at afterEach (jest.setup.js:121:30)
      at Object.require (src/stores/bouncePlanStore.ts:1:1)
      at Object.require (src/services/database/sync/syncManager.ts:1:1)
      at require (src/context/OfflineContext.tsx:45:31)
          at Generator.throw (<anonymous>)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _throw (node_modules/@babel/runtime/helpers/asyncToGenerator.js:20:9)

FAIL src/screens/auth/__tests__/LoginScreen.test.tsx
  ● LoginScreen › shows loading state during sign in

    expect(received).toBeTruthy()

    Received: null

      138 |     
      139 |     // Should show loading state
    > 140 |     expect(queryByText('Signing In...')).toBeTruthy();
          |                                          ^
      141 |     expect(queryByText('Signing you in...')).toBeTruthy(); // Loading overlay
      142 |     
      143 |     await waitFor(() => {

      at Object.toBeTruthy (src/screens/auth/__tests__/LoginScreen.test.tsx:140:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● LoginScreen › handles keyboard navigation correctly

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      196 |     
      197 |     // Password input should receive focus
    > 198 |     expect(focusMock).toHaveBeenCalled();
          |                       ^
      199 |   });
      200 | });

      at Object.toHaveBeenCalled (src/screens/auth/__tests__/LoginScreen.test.tsx:198:23)

FAIL src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx
  ● BouncePlanScreen sync integration tests › initial load and sync › should hydrate from database on mount when user is authenticated

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:101:7)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › initial load and sync › should not hydrate when user is not authenticated

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:120:7)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › initial load and sync › should show loading state while hydrating

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:133:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › initial load and sync › should show sync error if hydration fails

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:144:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › task completion sync › should sync task when completed while online

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:162:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › task completion sync › should not sync when offline

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:192:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › task completion sync › should show sync indicator while syncing

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:213:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › manual sync › should trigger manual sync when sync button is pressed

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:229:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › manual sync › should show last sync time

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:247:29)

  ● BouncePlanScreen sync integration tests › manual sync › should disable sync button when offline

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:256:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › network state changes › should sync when coming back online

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:282:7)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › network state changes › should show offline indicator when disconnected

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:316:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › conflict resolution › should reload data after successful sync

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:335:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › conflict resolution › should show conflict warning when local and remote data differ

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:367:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › error handling › should show error toast when sync fails

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:385:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › error handling › should retry sync after error

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:407:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › performance optimizations › should debounce rapid task completions

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:436:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen sync integration tests › performance optimizations › should not sync if no changes since last sync

    Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.

      84 |
      85 |   const renderScreen = () => {
    > 86 |     return render(
         |                  ^
      87 |       <NavigationContainer>
      88 |         <BouncePlanScreen navigation={mockNavigation as any} route={{} as any} />
      89 |       </NavigationContainer>

      at createFiberFromTypeAndProps (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11889:28)
      at createFiberFromElement (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11903:14)
      at reconcileChildFibersImpl (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3203:31)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3380:33
      at reconcileChildren (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5361:13)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7252:13)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:86:18)
      at Object.renderScreen (src/screens/main/__tests__/BouncePlanScreen.sync.test.tsx:466:31)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/screens/main/__tests__/BouncePlanScreen.test.tsx
  ● BouncePlanScreen › renders loading state initially

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/screens/main/__tests__/BouncePlanScreen.test.tsx:64:35)

  ● BouncePlanScreen › renders main screen after loading

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:77:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › shows welcome alert for new users

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:92:5)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › renders task cards by week

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:106:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › shows correct task statuses

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:120:41)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task press for available task

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:135:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › shows alert for locked task

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:159:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task completion

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:180:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task skip

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:217:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles task reopen

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:256:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › handles refresh control

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:284:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › displays progress bar correctly

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:296:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › renders weekend tasks correctly

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:305:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BouncePlanScreen › groups tasks by week correctly

    useOffline must be used within an OfflineProvider

      119 |   const context = useContext(OfflineContext);
      120 |   if (!context) {
    > 121 |     throw new Error('useOffline must be used within an OfflineProvider');
          |           ^
      122 |   }
      123 |   return context;
      124 | }

      at useOffline (src/context/OfflineContext.tsx:121:11)
      at BouncePlanScreen (src/screens/main/BouncePlanScreen.tsx:27:37)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:28:16)
      at Object.renderWithProviders (src/screens/main/__tests__/BouncePlanScreen.test.tsx:317:27)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/feature/budget/__tests__/BudgetAlerts.test.tsx
  ● BudgetAlerts › should render multiple alerts

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 4
    Received array:  [{"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}]

      89 |     expect(getByText('Low Financial Runway')).toBeTruthy();
      90 |     expect(getByText('Benefits Expiring Soon')).toBeTruthy();
    > 91 |     expect(getAllByTestId(/^alert-/)).toHaveLength(2);
         |                                       ^
      92 |   });
      93 |
      94 |   it('should not render dismissed alerts', () => {

      at Object.toHaveLength (src/components/feature/budget/__tests__/BudgetAlerts.test.tsx:91:39)

  ● BudgetAlerts › should not render dismissed alerts

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 2
    Received array:  [{"_fiber": [FiberNode]}, {"_fiber": [FiberNode]}]

      120 |     expect(getByText('Low Financial Runway')).toBeTruthy();
      121 |     expect(queryByText('Benefits Expiring Soon')).toBeFalsy();
    > 122 |     expect(getAllByTestId(/^alert-/)).toHaveLength(1);
          |                                       ^
      123 |   });
      124 |
      125 |   it('should display correct severity colors', () => {

      at Object.toHaveLength (src/components/feature/budget/__tests__/BudgetAlerts.test.tsx:122:39)

FAIL src/services/security/__tests__/keychain.test.ts
  ● KeychainService › removeSecureValue › should remove a stored value

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "com.nextchapter.app"
    Received: {"server": "com.nextchapter.app"}

    Number of calls: 1

      149 |
      150 |       await keychainService.removeSecureValue('API_KEY');
    > 151 |       expect(mockResetCredentials).toHaveBeenCalledWith('com.nextchapter.app');
          |                                    ^
      152 |     });
      153 |
      154 |     it('should handle removal errors gracefully', async () => {

      at Object.toHaveBeenCalledWith (src/services/security/__tests__/keychain.test.ts:151:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● KeychainService › clearAllSecureValues › should clear all stored values

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "com.nextchapter.app"
    Received: {"server": "com.nextchapter.app"}

    Number of calls: 1

      298 |
      299 |       await keychainService.clearAllSecureValues();
    > 300 |       expect(mockResetCredentials).toHaveBeenCalledWith('com.nextchapter.app');
          |                                    ^
      301 |     });
      302 |   });
      303 | });

      at Object.toHaveBeenCalledWith (src/services/security/__tests__/keychain.test.ts:300:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/app/__tests__/NotificationSetup.test.tsx
  ● NotificationSetup › Initialization › should render children

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Initialization › should setup notification handlers on mount

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Initialization › should setup app state listener

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Initialization › should cleanup on unmount

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should request permissions when onboarded

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should not request permissions when not onboarded

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should register for push notifications when permissions granted

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should schedule initial notifications when permissions granted

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Permission Handling › should not schedule notifications when permissions denied

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Budget Runway Monitoring › should check budget runway when it changes

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Budget Runway Monitoring › should not check budget runway without permissions

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › App State Changes › should refresh notifications when app comes to foreground

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › App State Changes › should not show reminder before noon

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › App State Changes › should not refresh notifications when app goes to background

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › Error Handling › should handle errors in scheduling initial notifications

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › User Experience › should not interrupt user if already completed task today

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

  ● NotificationSetup › User Experience › should use gentle, supportive notification copy

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      40 |
      41 |     // Setup default mocks
    > 42 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue(
         |                                                                          ^
      43 |       mockResponseListener
      44 |     );
      45 |

      at Object.mockReturnValue (src/components/app/__tests__/NotificationSetup.test.tsx:42:74)

FAIL src/stores/__tests__/onboardingStore.test.ts
  ● onboardingStore › loadProgress › should load existing progress

    expect(received).toBe(expected) // Object.is equality

    Expected: "personal-info"
    Received: "welcome"

      50 |       });
      51 |
    > 52 |       expect(result.current.currentStep).toBe('personal-info');
         |                                          ^
      53 |       expect(result.current.data).toEqual(mockProgress.data);
      54 |     });
      55 |

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:52:42)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › loadProgress › should handle load errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Failed to load onboarding progress"
    Received: null

      65 |       });
      66 |
    > 67 |       expect(result.current.error).toBe('Failed to load onboarding progress');
         |                                    ^
      68 |     });
      69 |   });
      70 |

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:67:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › saveStepData › should save step data and update state

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-user-123", "layoff-details", {"company": "Tech Corp", "role": "Engineer"}

    Number of calls: 0

      86 |       expect(result.current.currentStep).toBe('layoff-details');
      87 |       expect(result.current.data).toEqual(stepData);
    > 88 |       expect(mockService.saveProgress).toHaveBeenCalledWith(
         |                                        ^
      89 |         mockUserId,
      90 |         'layoff-details',
      91 |         stepData

      at Object.toHaveBeenCalledWith (src/stores/__tests__/onboardingStore.test.ts:88:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › navigation › should navigate to next step

    expect(received).toBe(expected) // Object.is equality

    Expected: "personal-info"
    Received: "layoff-details"

      126 |       });
      127 |
    > 128 |       expect(result.current.currentStep).toBe('personal-info');
          |                                          ^
      129 |     });
      130 |
      131 |     it('should not navigate past the last step', () => {

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:128:42)

  ● onboardingStore › navigation › should navigate to previous step

    expect(received).toBe(expected) // Object.is equality

    Expected: "layoff-details"
    Received: "personal-info"

      154 |       });
      155 |
    > 156 |       expect(result.current.currentStep).toBe('layoff-details');
          |                                          ^
      157 |     });
      158 |
      159 |     it('should not navigate before the first step', () => {

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:156:42)

  ● onboardingStore › validation › should validate current step data

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      182 |
      183 |       const isValid = result.current.isCurrentStepValid();
    > 184 |       expect(isValid).toBe(true);
          |                       ^
      185 |     });
      186 |
      187 |     it('should return false for invalid step data', () => {

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:184:23)

  ● onboardingStore › validation › should return false for invalid step data

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      197 |
      198 |       const isValid = result.current.isCurrentStepValid();
    > 199 |       expect(isValid).toBe(false);
          |                       ^
      200 |     });
      201 |   });
      202 |

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:199:23)

  ● onboardingStore › completeOnboarding › should complete onboarding successfully

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "test-user-123", {"company": "Tech Corp", "firstName": "John", "goals": ["job-search"], "lastName": "Doe", "layoffDate": "2025-01-01", "role": "Engineer"}

    Number of calls: 0

      224 |       });
      225 |
    > 226 |       expect(mockService.completeOnboarding).toHaveBeenCalledWith(
          |                                              ^
      227 |         mockUserId,
      228 |         completeData
      229 |       );

      at Object.toHaveBeenCalledWith (src/stores/__tests__/onboardingStore.test.ts:226:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● onboardingStore › completeOnboarding › should handle completion errors

    expect(received).toBe(expected) // Object.is equality

    Expected: "Failed to complete onboarding"
    Received: null

      242 |       });
      243 |
    > 244 |       expect(result.current.error).toBe('Failed to complete onboarding');
          |                                    ^
      245 |       expect(result.current.isCompleted).toBe(false);
      246 |     });
      247 |   });

      at Object.toBe (src/stores/__tests__/onboardingStore.test.ts:244:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/feature/job-tracker/__tests__/JobCard.test.tsx
  ● JobCard › should display "Today" for applications applied today

    Unable to find an element with text: Today

    [36m<View[39m
      [33maccessible[39m=[32m{true}[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mGoogle[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mJul 12[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<Text>[39m
        [0mSenior Software Engineer[0m
      [36m</Text>[39m
      [36m<View>[39m
        [36m<Text[39m
          [33mtestID[39m=[32m"icon-Ionicons"[39m
        [36m>[39m
          [0mlocation-outline[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mMountain View, CA[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<Text[39m
          [33mtestID[39m=[32m"icon-Ionicons"[39m
        [36m>[39m
          [0mcash-outline[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0m$150k - $200k[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mYesterday[0m
        [36m</Text>[39m
        [36m<View>[39m
          [36m<Text[39m
            [33mtestID[39m=[32m"icon-Ionicons"[39m
          [36m>[39m
            [0mdocument-text-outline[0m
          [36m</Text>[39m
          [36m<Text[39m
            [33mtestID[39m=[32m"icon-Ionicons"[39m
          [36m>[39m
            [0mperson-outline[0m
          [36m</Text>[39m
          [36m<Text[39m
            [33mtestID[39m=[32m"icon-Ionicons"[39m
          [36m>[39m
            [0mlink-outline[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      83 |     );
      84 |
    > 85 |     expect(getByText('Today')).toBeTruthy();
         |            ^
      86 |   });
      87 |
      88 |   it('should display appropriate relative time for past dates', () => {

      at Object.getByText (src/components/feature/job-tracker/__tests__/JobCard.test.tsx:85:12)

FAIL src/components/common/__tests__/NotificationSettings.test.tsx
  ● NotificationSettings › should request permissions when button pressed

    Unable to find an element with text: Enable Notifications

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      72 |     const { getByText } = render(<NotificationSettings />);
      73 |     
    > 74 |     const button = getByText('Enable Notifications');
         |                    ^
      75 |     fireEvent.press(button);
      76 |     
      77 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:74:20)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● NotificationSettings › should show quiet hours picker when tapped

    Unable to find an element with text: 10:00 PM - 8:00 AM

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      94 |     const { getByText, getByTestId } = render(<NotificationSettings />);
      95 |     
    > 96 |     const quietHoursButton = getByText('10:00 PM - 8:00 AM');
         |                              ^
      97 |     fireEvent.press(quietHoursButton);
      98 |     
      99 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:96:30)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● NotificationSettings › should update quiet hours when changed

    Unable to find an element with text: 10:00 PM - 8:00 AM

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      105 |     const { getByText, getByTestId } = render(<NotificationSettings />);
      106 |     
    > 107 |     const quietHoursButton = getByText('10:00 PM - 8:00 AM');
          |                              ^
      108 |     fireEvent.press(quietHoursButton);
      109 |     
      110 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:107:30)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● NotificationSettings › should send test notification when button pressed

    Unable to find an element with text: Send Test Notification

    [36m<View>[39m
      [36m<Text>[39m
        [0mLoading...[0m
      [36m</Text>[39m
    [36m</View>[39m

      132 |     const { getByText } = render(<NotificationSettings />);
      133 |     
    > 134 |     const testButton = getByText('Send Test Notification');
          |                        ^
      135 |     fireEvent.press(testButton);
      136 |     
      137 |     await waitFor(() => {

      at Object.getByText (src/components/common/__tests__/NotificationSettings.test.tsx:134:24)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/NotificationPermissionPrompt.test.tsx
  ● NotificationPermissionPrompt › should be accessible

    expect(received).toBe(expected) // Object.is equality

    Expected: "button"
    Received: undefined

      121 |
      122 |     const allowButton = getByText('Allow Notifications');
    > 123 |     expect(allowButton.props.accessibilityRole).toBe('button');
          |                                                 ^
      124 |     expect(allowButton.props.accessibilityLabel).toBe('Allow notification permissions');
      125 |
      126 |     const denyButton = getByText('Maybe Later');

      at Object.toBe (src/components/common/__tests__/NotificationPermissionPrompt.test.tsx:123:49)

FAIL src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx
  ● OfflineQueueViewer › should show empty state when no items are queued

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      13 |
      14 |   it('should show empty state when no items are queued', () => {
    > 15 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue({
         |                                                             ^
      16 |       totalItems: 0,
      17 |       byFeature: {
      18 |         bouncePlan: 0,

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:15:61)

  ● OfflineQueueViewer › should display queue items grouped by feature

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      81 |     };
      82 |
    > 83 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
         |                                                             ^
      84 |
      85 |     const { getByText, getAllByText } = render(<OfflineQueueViewer />);
      86 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:83:61)

  ● OfflineQueueViewer › should show time since oldest item

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      108 |     };
      109 |
    > 110 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      111 |
      112 |     const { getByText } = render(<OfflineQueueViewer />);
      113 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:110:61)

  ● OfflineQueueViewer › should allow clearing specific queue items

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      128 |     };
      129 |
    > 130 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      131 |     const clearItemMock = jest.fn().mockResolvedValue(true);
      132 |     (syncManager.clearQueueItem as jest.Mock).mockImplementation(clearItemMock);
      133 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:130:61)

  ● OfflineQueueViewer › should collapse and expand feature sections

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      162 |     };
      163 |
    > 164 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      165 |
      166 |     const { getByText, queryByText, getByTestId } = render(<OfflineQueueViewer />);
      167 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:164:61)

  ● OfflineQueueViewer › should retry sync for all items

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      193 |     };
      194 |
    > 195 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      196 |     (syncManager.syncAll as jest.Mock).mockResolvedValue({
      197 |       success: true,
      198 |       errors: []

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:195:61)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● OfflineQueueViewer › should show appropriate icons for different queue item types

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      248 |     };
      249 |
    > 250 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      251 |
      252 |     const { getByTestId } = render(<OfflineQueueViewer />);
      253 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:250:61)

  ● OfflineQueueViewer › should show warning for large queue size

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      272 |     };
      273 |
    > 274 |     (syncManager.getOfflineQueueVisualization as jest.Mock).mockReturnValue(mockQueue);
          |                                                             ^
      275 |
      276 |     const { getByText, getByTestId } = render(<OfflineQueueViewer />);
      277 |

      at Object.mockReturnValue (src/components/feature/sync/__tests__/OfflineQueueViewer.test.tsx:274:61)

FAIL src/hooks/__tests__/useNotifications.test.ts
  ● useNotifications › should initialize notification handlers on mount

    expect(received).toHaveBeenCalled()

    Matcher error: received value must be a mock or spy function

    Received has value: undefined

      15 |     renderHook(() => useNotifications());
      16 |
    > 17 |     expect(Notifications.addNotificationReceivedListener).toHaveBeenCalled();
         |                                                           ^
      18 |     expect(Notifications.addNotificationResponseReceivedListener).toHaveBeenCalled();
      19 |   });
      20 |

      at Object.toHaveBeenCalled (src/hooks/__tests__/useNotifications.test.ts:17:59)

  ● useNotifications › should schedule daily task reminder

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:22:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should schedule job follow-up

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:32:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should check budget runway

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:49:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should schedule mood check-in

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:59:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should handle notification received in foreground

    TypeError: Cannot read properties of undefined (reading 'mockImplementation')

      68 |   it('should handle notification received in foreground', async () => {
      69 |     const mockListener = jest.fn();
    > 70 |     (Notifications.addNotificationReceivedListener as jest.Mock).mockImplementation(
         |                                                                  ^
      71 |       (callback) => {
      72 |         mockListener.mockImplementation(callback);
      73 |         return { remove: jest.fn() };

      at Object.mockImplementation (src/hooks/__tests__/useNotifications.test.ts:70:66)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should handle notification response

    TypeError: Cannot read properties of undefined (reading 'mockImplementation')

       95 |   it('should handle notification response', async () => {
       96 |     const mockListener = jest.fn();
    >  97 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockImplementation(
          |                                                                          ^
       98 |       (callback) => {
       99 |         mockListener.mockImplementation(callback);
      100 |         return { remove: jest.fn() };

      at Object.mockImplementation (src/hooks/__tests__/useNotifications.test.ts:97:74)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should request permissions

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:126:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should update preferences

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:138:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should clean up listeners on unmount

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      156 |   it('should clean up listeners on unmount', () => {
      157 |     const mockRemove = jest.fn();
    > 158 |     (Notifications.addNotificationReceivedListener as jest.Mock).mockReturnValue({
          |                                                                  ^
      159 |       remove: mockRemove,
      160 |     });
      161 |     (Notifications.addNotificationResponseReceivedListener as jest.Mock).mockReturnValue({

      at Object.mockReturnValue (src/hooks/__tests__/useNotifications.test.ts:158:66)

  ● useNotifications › should cancel all notifications

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:173:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● useNotifications › should get scheduled notifications

    TypeError: Notifications.addNotificationReceivedListener is not a function

      21 |   useEffect(() => {
      22 |     // Handle notifications received while app is foregrounded
    > 23 |     notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
         |                                                  ^
      24 |       setLastNotification(notification);
      25 |     });
      26 |

      at addNotificationReceivedListener (src/hooks/useNotifications.ts:23:50)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12760:20)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at commitHookEffectListMount (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8226:29)
      at commitHookPassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8312:11)
      at recursivelyTraverseReconnectPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9809:13)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9749:17)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9773:11)
      at recursivelyTraversePassiveMountEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9646:11)
      at commitPassiveMountOnFiber (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9676:11)
      at flushPassiveEffects (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11277:13)
      at node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11159:11
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at render (node_modules/@testing-library/react-hooks/lib/native/pure.js:73:34)
      at renderHook (node_modules/@testing-library/react-hooks/lib/core/index.js:114:5)
      at Object.<anonymous> (src/hooks/__tests__/useNotifications.test.ts:191:34)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/LoadingOverlay.test.tsx
  ● LoadingOverlay › has proper accessibility label when message is provided

    Found multiple elements with accessibility label: Signing you in...

      51 |     );
      52 |
    > 53 |     expect(getByLabelText('Signing you in...')).toBeTruthy();
         |            ^
      54 |   });
      55 |
      56 |   it('has default accessibility label when no message', () => {

      at Object.getByLabelText (src/components/common/__tests__/LoadingOverlay.test.tsx:53:12)

FAIL src/components/common/__tests__/Input.test.tsx
  ● Input › Basic Functionality › should render with label

    Found multiple elements with role: text

      33 |       
      34 |       expect(getByText('Email')).toBeTruthy();
    > 35 |       expect(getByRole('text')).toBeTruthy();
         |              ^
      36 |     });
      37 |
      38 |     it('should handle text input changes', () => {

      at Object.getByRole (src/components/common/__tests__/Input.test.tsx:35:14)

  ● Input › Accessibility › should use label as accessibility label

    Found multiple elements with role: text

      161 |       );
      162 |       
    > 163 |       const input = getByRole('text');
          |                     ^
      164 |       expect(input.props.accessibilityLabel).toBe('Password');
      165 |     });
      166 |

      at Object.getByRole (src/components/common/__tests__/Input.test.tsx:163:21)

  ● Input › Accessibility › should use custom accessibility label over label prop

    Found multiple elements with role: text

      170 |       );
      171 |       
    > 172 |       const input = getByRole('text');
          |                     ^
      173 |       expect(input.props.accessibilityLabel).toBe('Enter your password');
      174 |     });
      175 |

      at Object.getByRole (src/components/common/__tests__/Input.test.tsx:172:21)

FAIL src/components/common/__tests__/ErrorBoundary.test.tsx
  ● ErrorBoundary › renders error UI when child component throws

    Unable to find an element with text: /We're having trouble loading this screen/

    [36m<View>[39m
      [36m<Text>[39m
        [0mSomething went wrong[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mWe're sorry for the inconvenience. Please try again.[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mTest error[0m
      [36m</Text>[39m
      [36m<View[39m
        [33maccessible[39m=[32m{true}[39m
      [36m>[39m
        [36m<Text>[39m
          [0mTry Again[0m
        [36m</Text>[39m
      [36m</View>[39m
    [36m</View>[39m

      40 |
      41 |     expect(getByText('Something went wrong')).toBeTruthy();
    > 42 |     expect(getByText(/We're having trouble loading this screen/)).toBeTruthy();
         |            ^
      43 |   });
      44 |
      45 |   it('renders custom fallback when provided', () => {

      at Object.getByText (src/components/common/__tests__/ErrorBoundary.test.tsx:42:12)

  ● ErrorBoundary › resets error state when Try Again is pressed

    expect(received).toBeNull()

    Received: {"_fiber": {"_debugHookTypes": null, "_debugInfo": null, "_debugNeedsRemount": false, "_debugOwner": [FiberNode], "actualDuration": 0, "actualStartTime": 1752380169479, "alternate": [FiberNode], "child": [FiberNode], "childLanes": 0, "deletions": null, "dependencies": null, "elementType": "Text", "flags": 4, "index": 0, "key": null, "lanes": 0, "memoizedProps": [Object], "memoizedState": null, "mode": 3, "pendingProps": [Object], "ref": null, "refCleanup": null, "return": [FiberNode], "selfBaseDuration": 0, "sibling": null, "stateNode": [Object], "subtreeFlags": 262144, "tag": 5, "treeBaseDuration": 0, "type": "Text", "updateQueue": null}}

      87 |     );
      88 |
    > 89 |     expect(queryByText('Something went wrong')).toBeNull();
         |                                                 ^
      90 |     expect(getByText('No error')).toBeTruthy();
      91 |   });
      92 |

      at Object.toBeNull (src/components/common/__tests__/ErrorBoundary.test.tsx:89:49)

  ● ErrorBoundary › has proper accessibility attributes

    Unable to find an element with role: button

    [36m<View>[39m
      [36m<Text>[39m
        [0mSomething went wrong[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mWe're sorry for the inconvenience. Please try again.[0m
      [36m</Text>[39m
      [36m<Text>[39m
        [0mTest error[0m
      [36m</Text>[39m
      [36m<View[39m
        [33maccessible[39m=[32m{true}[39m
      [36m>[39m
        [36m<Text>[39m
          [0mTry Again[0m
        [36m</Text>[39m
      [36m</View>[39m
    [36m</View>[39m

       98 |     );
       99 |
    > 100 |     const tryAgainButton = getByRole('button');
          |                            ^
      101 |     expect(tryAgainButton).toBeTruthy();
      102 |     expect(getByLabelText('Try again')).toBeTruthy();
      103 |   });

      at Object.getByRole (src/components/common/__tests__/ErrorBoundary.test.tsx:100:28)

FAIL src/utils/__tests__/errorHandling.test.ts
  ● errorHandling utilities › getUserFriendlyErrorMessage › handles specific error types

    expect(received).toBe(expected) // Object.is equality

    Expected: "This is taking longer than expected. Please try again."
    Received: "Having trouble connecting. Please check your internet connection and try again."

      69 |       timeoutError.name = 'TimeoutError';
      70 |       expect(getUserFriendlyErrorMessage(timeoutError))
    > 71 |         .toBe('This is taking longer than expected. Please try again.');
         |          ^
      72 |     });
      73 |
      74 |     it('returns default message for unknown errors', () => {

      at Object.toBe (src/utils/__tests__/errorHandling.test.ts:71:10)

  ● errorHandling utilities › withErrorHandling › respects custom timeout

    expect(received).rejects.toThrow(expected)

    Expected substring: "Request timed out"
    Received message:   "Something unexpected happened. Please try again in a moment."

          140 |     // Transform the error message
          141 |     const friendlyMessage = getUserFriendlyErrorMessage(error, context);
        > 142 |     const enhancedError = new Error(friendlyMessage) as any;
              |                           ^
          143 |     enhancedError.originalError = error;
          144 |     
          145 |     throw enhancedError;

      at src/utils/errorHandling.ts:142:27
                at Generator.throw (<anonymous>)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _throw (node_modules/@babel/runtime/helpers/asyncToGenerator.js:20:9)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (src/utils/__tests__/errorHandling.test.ts:181:37)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/coach/__tests__/CoachSettings.test.tsx
  ● CoachSettings › Modal Behavior › should render when visible is true

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Modal Behavior › should not render when visible is false

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Modal Behavior › should call onClose when close button is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should display current message usage

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should show progress bar with correct width

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should display reset information

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Daily Usage Display › should handle rate limiting correctly

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Cloud Sync Toggle › should display cloud sync option

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Cloud Sync Toggle › should toggle cloud sync when switch is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Cloud Sync Toggle › should reflect current cloud sync state

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Privacy & Security Section › should display all privacy information

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Privacy & Security Section › should emphasize privacy for crisis situations

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Pro Features Section › should display upgrade to Pro option

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Pro Features Section › should list Pro features

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Accessibility › should have proper accessibility labels

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Accessibility › should have proper accessibility roles

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Crisis Intervention Considerations › should clearly show message limits to prevent overuse during crisis

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Crisis Intervention Considerations › should emphasize encryption for sensitive conversations

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

  ● CoachSettings › Crisis Intervention Considerations › should show privacy protections for vulnerable users

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      22 |     jest.clearAllMocks();
      23 |     mockGetMessagesUsedToday.mockReturnValue(0);
    > 24 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(createMockStore());
         |                                             ^
      25 |   });
      26 |
      27 |   describe('Modal Behavior', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachSettings.test.tsx:24:45)

FAIL src/components/coach/__tests__/MessageBubble.test.tsx
  ● MessageBubble › Accessibility › should have text role for accessibility

    Found multiple elements with role: text

      175 |       );
      176 |       
    > 177 |       expect(getByRole('text')).toBeTruthy();
          |              ^
      178 |     });
      179 |   });
      180 |

      at Object.getByRole (src/components/coach/__tests__/MessageBubble.test.tsx:177:14)

  ● MessageBubble › Edge Cases › should handle empty message content

    Found multiple elements with role: text

      206 |       );
      207 |       
    > 208 |       expect(getByRole('text')).toBeTruthy();
          |              ^
      209 |     });
      210 |
      211 |     it('should handle very long messages', () => {

      at Object.getByRole (src/components/coach/__tests__/MessageBubble.test.tsx:208:14)

FAIL src/screens/main/__tests__/HomeScreen.test.tsx
  ● HomeScreen › Header Section › should display personalized greeting with user name

    Unable to find an element with text: /Good \w+, Test/

    [36m<RNCSafeAreaProvider>[39m
      [36m<RNCSafeAreaProvider />[39m
      [36m<RNSScreenStack>[39m
        [36m<RNSScreen[39m
          [33maria-hidden[39m=[32m{false}[39m
        [36m>[39m
          [36m<RNSScreenContentWrapper>[39m
            [36m<RCTSafeAreaView>[39m
              [36m<RCTScrollView[39m
                [33maccessibilityLabel[39m=[32m"Home Dashboard"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"home-screen-container"[39m
              [36m>[39m
                [36m<RCTRefreshControl />[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mGood evening, test[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mSaturday, July 12, 2025[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"View and complete your daily recovery tasks"[39m
                    [33maccessibilityLabel[39m=[32m"Navigate to Bounce Plan"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"bounce-plan-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m30-Day Bounce Plan[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mDay 5 of 30[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<View>[39m
                            [36m<Text>[39m
                              [0mDay [0m
                              [0m5[0m
                              [0m of 30[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mToday's Task:[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mCreate Your Support Network List[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0m2[0m
                              [0m tasks completed[0m
                            [36m</Text>[39m
                          [36m</View>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"progress-circle"[39m
                          [36m>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Check your financial runway and budget alerts"[39m
                    [33maccessibilityLabel[39m=[32m"View Budget Details"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"budget-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mFinancial Runway[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mYour financial cushion[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4.5[0m
                            [0m months[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0mof runway remaining[0m
                          [36m</Text>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"runway-indicator"[39m
                          [36m>[39m
                            [36m<View />[39m
                          [36m</View>[39m
                          [36m<Text>[39m
                            [0m1[0m
                            [0m alert[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your emotional wellbeing"[39m
                    [33maccessibilityLabel[39m=[32m"Log your mood"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mDaily Check-in[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mChecked in today[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text[39m
                            [33mtestID[39m=[32m"mood-emoji"[39m
                          [36m>[39m
                            [0m��[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0m5[0m
                            [0m day streak[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your job application progress"[39m
                    [33maccessibilityLabel[39m=[32m"View Job Applications"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"job-tracker-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mJob Pipeline[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mApplication tracking[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4[0m
                            [0m active application[0m
                            [0ms[0m
                          [36m</Text>[39m
                          [36m<View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m2[0m
                                [0m Applied[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Interviewing[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Offer[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mQuick Actions[0m
                    [36m</Text>[39m
                    [36m<View[39m
                      [33maccessibilityHint[39m=[32m"Get personalized support and guidance"[39m
                      [33maccessibilityLabel[39m=[32m"Talk to AI Coach"[39m
                      [33maccessible[39m=[32m{true}[39m
                      [33mtestID[39m=[32m"coach-quick-action"[39m
                    [36m>[39m
                      [36m<Text>[39m
                        [0mTalk to Coach[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mGet support and guidance anytime[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</RCTScrollView>[39m
            [36m</RCTSafeAreaView>[39m
          [36m</RNSScreenContentWrapper>[39m
          [36m<RNSScreenStackHeaderConfig[39m
            [33mtitle[39m=[32m"Home"[39m
          [36m/>[39m
        [36m</RNSScreen>[39m
      [36m</RNSScreenStack>[39m
    [36m</RNCSafeAreaProvider>[39m

       99 |     it('should display personalized greeting with user name', () => {
      100 |       const { getByText } = renderWithProviders();
    > 101 |       expect(getByText(/Good \w+, Test/)).toBeTruthy();
          |              ^
      102 |     });
      103 |
      104 |     it('should display appropriate time-based greeting', () => {

      at Object.getByText (src/screens/main/__tests__/HomeScreen.test.tsx:101:14)

  ● HomeScreen › Header Section › should display appropriate time-based greeting

    Unable to find an element with text: /Good (morning|afternoon|evening), Test/

    [36m<RNCSafeAreaProvider>[39m
      [36m<RNCSafeAreaProvider />[39m
      [36m<RNSScreenStack>[39m
        [36m<RNSScreen[39m
          [33maria-hidden[39m=[32m{false}[39m
        [36m>[39m
          [36m<RNSScreenContentWrapper>[39m
            [36m<RCTSafeAreaView>[39m
              [36m<RCTScrollView[39m
                [33maccessibilityLabel[39m=[32m"Home Dashboard"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"home-screen-container"[39m
              [36m>[39m
                [36m<RCTRefreshControl />[39m
                [36m<View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mGood evening, test[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mSaturday, July 12, 2025[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"View and complete your daily recovery tasks"[39m
                    [33maccessibilityLabel[39m=[32m"Navigate to Bounce Plan"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"bounce-plan-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0m30-Day Bounce Plan[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mDay 5 of 30[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<View>[39m
                            [36m<Text>[39m
                              [0mDay [0m
                              [0m5[0m
                              [0m of 30[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mToday's Task:[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0mCreate Your Support Network List[0m
                            [36m</Text>[39m
                            [36m<Text>[39m
                              [0m2[0m
                              [0m tasks completed[0m
                            [36m</Text>[39m
                          [36m</View>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"progress-circle"[39m
                          [36m>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                            [36m<View[39m
                              [33mtestID[39m=[32m"svg-Circle"[39m
                            [36m/>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Check your financial runway and budget alerts"[39m
                    [33maccessibilityLabel[39m=[32m"View Budget Details"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"budget-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mFinancial Runway[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mYour financial cushion[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4.5[0m
                            [0m months[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0mof runway remaining[0m
                          [36m</Text>[39m
                          [36m<View[39m
                            [33mtestID[39m=[32m"runway-indicator"[39m
                          [36m>[39m
                            [36m<View />[39m
                          [36m</View>[39m
                          [36m<Text>[39m
                            [0m1[0m
                            [0m alert[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your emotional wellbeing"[39m
                    [33maccessibilityLabel[39m=[32m"Log your mood"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mDaily Check-in[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mChecked in today[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text[39m
                            [33mtestID[39m=[32m"mood-emoji"[39m
                          [36m>[39m
                            [0m��[0m
                          [36m</Text>[39m
                          [36m<Text>[39m
                            [0m5[0m
                            [0m day streak[0m
                          [36m</Text>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Track your job application progress"[39m
                    [33maccessibilityLabel[39m=[32m"View Job Applications"[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"job-tracker-card"[39m
                  [36m>[39m
                    [36m<View>[39m
                      [36m<View>[39m
                        [36m<Text>[39m
                          [0mJob Pipeline[0m
                        [36m</Text>[39m
                        [36m<Text>[39m
                          [0mApplication tracking[0m
                        [36m</Text>[39m
                      [36m</View>[39m
                      [36m<View>[39m
                        [36m<View>[39m
                          [36m<Text>[39m
                            [0m4[0m
                            [0m active application[0m
                            [0ms[0m
                          [36m</Text>[39m
                          [36m<View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m2[0m
                                [0m Applied[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Interviewing[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                            [36m<View>[39m
                              [36m<View />[39m
                              [36m<Text>[39m
                                [0m1[0m
                                [0m Offer[0m
                              [36m</Text>[39m
                            [36m</View>[39m
                          [36m</View>[39m
                        [36m</View>[39m
                      [36m</View>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                  [36m<View>[39m
                    [36m<Text>[39m
                      [0mQuick Actions[0m
                    [36m</Text>[39m
                    [36m<View[39m
                      [33maccessibilityHint[39m=[32m"Get personalized support and guidance"[39m
                      [33maccessibilityLabel[39m=[32m"Talk to AI Coach"[39m
                      [33maccessible[39m=[32m{true}[39m
                      [33mtestID[39m=[32m"coach-quick-action"[39m
                    [36m>[39m
                      [36m<Text>[39m
                        [0mTalk to Coach[0m
                      [36m</Text>[39m
                      [36m<Text>[39m
                        [0mGet support and guidance anytime[0m
                      [36m</Text>[39m
                    [36m</View>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</RCTScrollView>[39m
            [36m</RCTSafeAreaView>[39m
          [36m</RNSScreenContentWrapper>[39m
          [36m<RNSScreenStackHeaderConfig[39m
            [33mtitle[39m=[32m"Home"[39m
          [36m/>[39m
        [36m</RNSScreen>[39m
      [36m</RNSScreenStack>[39m
    [36m</RNCSafeAreaProvider>[39m

      105 |       const { getByText } = renderWithProviders();
      106 |       // Should show either "Good morning", "Good afternoon", or "Good evening"
    > 107 |       expect(getByText(/Good (morning|afternoon|evening), Test/)).toBeTruthy();
          |              ^
      108 |     });
      109 |
      110 |     it('should display current date', () => {

      at Object.getByText (src/screens/main/__tests__/HomeScreen.test.tsx:107:14)

FAIL src/stores/__tests__/bouncePlanStore.sync.test.ts
  ● bouncePlanStore sync functionality › offline/online sync scenarios › should handle race conditions during concurrent syncs

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      540 |
      541 |       // Only one sync should have executed
    > 542 |       expect(mockedBouncePlanService.batchSyncBouncePlanProgress).toHaveBeenCalledTimes(1);
          |                                                                   ^
      543 |     });
      544 |   });
      545 |

      at Object.toHaveBeenCalledTimes (src/stores/__tests__/bouncePlanStore.sync.test.ts:542:67)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/stores/__tests__/bouncePlanStore.test.ts
  ● useBouncePlanStore › persistence › should persist state to AsyncStorage

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      274 |       await waitInAct(100);
      275 |
    > 276 |       expect(mockAsyncStorage.setItem).toHaveBeenCalled();
          |                                        ^
      277 |       const [[key, value]] = mockAsyncStorage.setItem.mock.calls;
      278 |       expect(key).toBe('@next_chapter/bounce_plan');
      279 |       

      at Object.toHaveBeenCalled (src/stores/__tests__/bouncePlanStore.test.ts:276:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● useBouncePlanStore › persistence › should handle rehydration from AsyncStorage

    expect(received).toBe(expected) // Object.is equality

    Expected: 5
    Received: 0

      306 |       await waitInAct(100);
      307 |
    > 308 |       expect(result.current.currentDay).toBe(5);
          |                                         ^
      309 |       expect(result.current.completedTasks.has('day1_breathe')).toBe(true);
      310 |       expect(result.current.completedTasks.has('day2_inventory')).toBe(true);
      311 |       expect(result.current.skippedTasks.has('day3_support')).toBe(true);

      at Object.toBe (src/stores/__tests__/bouncePlanStore.test.ts:308:41)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● useBouncePlanStore › offline queue › should clear offline queue

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 3

      346 |       });
      347 |
    > 348 |       expect(result.current.getOfflineQueueSize()).toBe(2);
          |                                                    ^
      349 |
      350 |       await actAsync(async () => {
      351 |         result.current.clearOfflineQueue();

      at Object.toBe (src/stores/__tests__/bouncePlanStore.test.ts:348:52)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/common/__tests__/ErrorMessage.test.tsx
  ● ErrorMessage › has proper accessibility attributes

    Unable to find an element with role: alert

    [36m<View[39m
      [33maccessibilityRole[39m=[32m"alert"[39m
      [33mstyle[39m=[32m{
        {
          "opacity": 0,
        }
      }[39m
      [33mtestID[39m=[32m"error-message"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text[39m
          [33maccessibilityLabel[39m=[32m"error message"[39m
        [36m>[39m
          [0m��[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mTest error[0m
        [36m</Text>[39m
        [36m<View[39m
          [33maccessibilityLabel[39m=[32m"Dismiss message"[39m
          [33maccessibilityRole[39m=[32m"button"[39m
          [33maccessible[39m=[32m{true}[39m
        [36m>[39m
          [36m<Text>[39m
            [0m✕[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      81 |     );
      82 |
    > 83 |     expect(getByRole('alert')).toBeTruthy();
         |            ^
      84 |     expect(getByLabelText('error message')).toBeTruthy();
      85 |     expect(getByLabelText('Dismiss message')).toBeTruthy();
      86 |   });

      at Object.getByRole (src/components/common/__tests__/ErrorMessage.test.tsx:83:12)

FAIL src/stores/__tests__/resumeStore.test.ts
  ● useResumeStore › uploadResume › should handle upload cancellation

    expect(received).toBeNull()

    Received: {"message": "Cannot read properties of null (reading '0')", "progress": 0, "stage": "error"}

      161 |       });
      162 |
    > 163 |       expect(result.current.uploadProgress).toBeNull();
          |                                             ^
      164 |       expect(result.current.currentResume).toBeNull();
      165 |     });
      166 |

      at Object.toBeNull (src/stores/__tests__/resumeStore.test.ts:163:45)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● useResumeStore › error handling › should clear errors on successful operations

    expect(received).toBeNull()

    Received: "Cannot read properties of null (reading '0')"

      540 |       });
      541 |
    > 542 |       expect(result.current.error).toBeNull();
          |                                    ^
      543 |     });
      544 |
      545 |     it('should handle loading states correctly', async () => {

      at Object.toBeNull (src/stores/__tests__/resumeStore.test.ts:542:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/context/__tests__/OfflineContext.test.tsx
  ● OfflineContext › should provide network status to children

    TypeError: Cannot read properties of undefined (reading 'wifi')

      72 |     expect(result.current.isConnected).toBe(true);
      73 |     expect(result.current.isWifiEnabled).toBe(true);
    > 74 |     expect(result.current.networkType).toBe(NetInfoStateType.wifi);
         |                                                              ^
      75 |   });
      76 |
      77 |   it('should check pending syncs periodically', async () => {

      at Object.wifi (src/context/__tests__/OfflineContext.test.tsx:74:62)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● OfflineContext › should handle network disconnection

    TypeError: Cannot read properties of undefined (reading 'none')

      125 |     expect(result.current.isConnected).toBe(false);
      126 |     expect(result.current.isWifiEnabled).toBe(false);
    > 127 |     expect(result.current.networkType).toBe(NetInfoStateType.none);
          |                                                              ^
      128 |   });
      129 |
      130 |   it('should auto-sync when coming back online with pending syncs', async () => {

      at Object.none (src/context/__tests__/OfflineContext.test.tsx:127:62)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● OfflineContext › should handle null/undefined network states

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      295 |     });
      296 |
    > 297 |     expect(result.current.isConnected).toBe(false);
          |                                        ^
      298 |     expect(result.current.isWifiEnabled).toBe(false);
      299 |     expect(result.current.networkType).toBe(NetInfoStateType.unknown);
      300 |   });

      at Object.toBe (src/context/__tests__/OfflineContext.test.tsx:297:40)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● OfflineContext › should handle different network types correctly

    TypeError: Cannot read properties of undefined (reading 'wifi')

      305 |
      306 |     const networkTypes: NetInfoStateType[] = [
    > 307 |       NetInfoStateType.wifi,
          |                        ^
      308 |       NetInfoStateType.cellular,
      309 |       NetInfoStateType.ethernet,
      310 |       NetInfoStateType.wimax,

      at Object.wifi (src/context/__tests__/OfflineContext.test.tsx:307:24)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/Button.test.tsx
  ● Button › Variants › should render primary variant by default

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "#007AFF"}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      67 |       const button = getByRole('button');
      68 |       
    > 69 |       expect(button.props.style).toEqual(
         |                                  ^
      70 |         expect.arrayContaining([
      71 |           expect.objectContaining({ backgroundColor: '#007AFF' }),
      72 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:69:34)

  ● Button › Variants › should render secondary variant

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "#5AC8FA"}]
    Received: {"alignItems": "center", "backgroundColor": "#5AC8FA", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      78 |       const button = getByRole('button');
      79 |       
    > 80 |       expect(button.props.style).toEqual(
         |                                  ^
      81 |         expect.arrayContaining([
      82 |           expect.objectContaining({ backgroundColor: '#5AC8FA' }),
      83 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:80:34)

  ● Button › Variants › should render outline variant

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "transparent", "borderColor": "#007AFF", "borderWidth": 1}]
    Received: {"alignItems": "center", "backgroundColor": "transparent", "borderColor": "#007AFF", "borderRadius": 8, "borderWidth": 1, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      90 |       const text = getByText('Test Button');
      91 |       
    > 92 |       expect(button.props.style).toEqual(
         |                                  ^
      93 |         expect.arrayContaining([
      94 |           expect.objectContaining({
      95 |             backgroundColor: 'transparent',

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:92:34)

  ● Button › Sizes › should render small size

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 48, "paddingHorizontal": 16}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 16}

      114 |       const button = getByRole('button');
      115 |       
    > 116 |       expect(button.props.style).toEqual(
          |                                  ^
      117 |         expect.arrayContaining([
      118 |           expect.objectContaining({ height: 48, paddingHorizontal: 16 }),
      119 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:116:34)

  ● Button › Sizes › should render medium size by default

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 48, "paddingHorizontal": 24}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      125 |       const button = getByRole('button');
      126 |       
    > 127 |       expect(button.props.style).toEqual(
          |                                  ^
      128 |         expect.arrayContaining([
      129 |           expect.objectContaining({ height: 48, paddingHorizontal: 24 }),
      130 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:127:34)

  ● Button › Sizes › should render large size

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 56, "paddingHorizontal": 32}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 56, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 32}

      136 |       const button = getByRole('button');
      137 |       
    > 138 |       expect(button.props.style).toEqual(
          |                                  ^
      139 |         expect.arrayContaining([
      140 |           expect.objectContaining({ height: 56, paddingHorizontal: 32 }),
      141 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:138:34)

  ● Button › Loading State › should have disabled styles when loading

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"opacity": 0.5}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 0.5, "paddingHorizontal": 24}

      158 |       const button = getByRole('button');
      159 |       
    > 160 |       expect(button.props.style).toEqual(
          |                                  ^
      161 |         expect.arrayContaining([
      162 |           expect.objectContaining({ opacity: 0.5 }),
      163 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:160:34)

  ● Button › Disabled State › should have disabled styles when disabled

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"opacity": 0.5}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 0.5, "paddingHorizontal": 24}

      171 |       const button = getByRole('button');
      172 |       
    > 173 |       expect(button.props.style).toEqual(
          |                                  ^
      174 |         expect.arrayContaining([
      175 |           expect.objectContaining({ opacity: 0.5 }),
      176 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:173:34)

  ● Button › Custom Styles › should apply custom button styles

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [{"marginTop": 20}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "marginTop": 20, "opacity": 1, "paddingHorizontal": 24}

      187 |       const button = getByRole('button');
      188 |       
    > 189 |       expect(button.props.style).toEqual(
          |                                  ^
      190 |         expect.arrayContaining([customStyle])
      191 |       );
      192 |     });

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:189:34)

  ● Button › Accessibility › should have minimum touch target size for accessibility

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"height": 48}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 16}

      261 |       
      262 |       // All buttons should have at least 48dp height for accessibility
    > 263 |       expect(button.props.style).toEqual(
          |                                  ^
      264 |         expect.arrayContaining([
      265 |           expect.objectContaining({ height: 48 }),
      266 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:263:34)

  ● Button › Stress-Friendly Design › should use calming opacity for disabled state

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"opacity": 0.5}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 0.5, "paddingHorizontal": 24}

      285 |       
      286 |       // Opacity of 0.5 is less harsh than graying out completely
    > 287 |       expect(button.props.style).toEqual(
          |                                  ^
      288 |         expect.arrayContaining([
      289 |           expect.objectContaining({ opacity: 0.5 }),
      290 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:287:34)

  ● Button › Stress-Friendly Design › should have rounded corners for softer appearance

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"borderRadius": 8}]
    Received: {"alignItems": "center", "backgroundColor": "#007AFF", "borderRadius": 8, "height": 48, "justifyContent": "center", "opacity": 1, "paddingHorizontal": 24}

      296 |       const button = getByRole('button');
      297 |       
    > 298 |       expect(button.props.style).toEqual(
          |                                  ^
      299 |         expect.arrayContaining([
      300 |           expect.objectContaining({ borderRadius: 8 }),
      301 |         ])

      at Object.toEqual (src/components/common/__tests__/Button.test.tsx:298:34)

FAIL src/components/common/__tests__/Header.test.tsx
  ● Header › Right Action › should not render right action when not provided

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      94 |
      95 |     it('should not render right action when not provided', () => {
    > 96 |       const { container } = render(<Header title="Test Title" />);
         |               ^
      97 |       
      98 |       // Verify the right container exists but is empty
      99 |       const rightContainer = container.findAllByProps({ style: expect.objectContaining({ width: 40 }) });

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:96:15)

  ● Header › Styling › should apply theme colors

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      104 |   describe('Styling', () => {
      105 |     it('should apply theme colors', () => {
    > 106 |       const { getByText, container } = render(<Header title="Test Title" />);
          |                          ^
      107 |       
      108 |       const title = getByText('Test Title');
      109 |       expect(title.props.style).toEqual(

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:106:26)

  ● Header › Styling › should have proper container height

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      126 |
      127 |     it('should have proper container height', () => {
    > 128 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      129 |       
      130 |       // Find the main container (not SafeAreaView)
      131 |       const mainContainer = container.findByProps({ 

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:128:15)

  ● Header › Layout › should have balanced layout with left and right containers

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      169 |   describe('Layout', () => {
      170 |     it('should have balanced layout with left and right containers', () => {
    > 171 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      172 |       
      173 |       // Both left and right containers should have the same width
      174 |       const sideContainers = container.findAllByProps({ 

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:171:15)

  ● Header › Layout › should wrap in SafeAreaView

    expect(received).not.toThrow()

    Error name:    "Error"
    Error message: "No instances found with node type: \"SafeAreaView\""

          183 |       
          184 |       // Verify SafeAreaView is used for proper spacing on devices with notches
        > 185 |       expect(() => UNSAFE_getByType('SafeAreaView')).not.toThrow();
              |                    ^
          186 |     });
          187 |
          188 |     it('should apply background color to SafeAreaView', () => {

      at UNSAFE_getByType (src/components/common/__tests__/Header.test.tsx:185:20)
      at Object.<anonymous> (node_modules/expect/build/toThrowMatchers.js:74:11)
      at Object.throwingMatcher [as toThrow] (node_modules/expect/build/index.js:320:21)
      at Object.toThrow (src/components/common/__tests__/Header.test.tsx:185:58)
      at Object.toThrow (src/components/common/__tests__/Header.test.tsx:185:58)

  ● Header › Layout › should apply background color to SafeAreaView

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      187 |
      188 |     it('should apply background color to SafeAreaView', () => {
    > 189 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      190 |       
      191 |       const safeAreaView = container.findByProps({ 
      192 |         style: { backgroundColor: '#F5F5F5' }

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:189:15)

  ● Header › Edge Cases › should handle empty title

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      232 |
      233 |     it('should handle empty title', () => {
    > 234 |       const { container } = render(<Header title="" />);
          |               ^
      235 |       expect(container).toBeTruthy();
      236 |     });
      237 |

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:234:15)

  ● Header › Stress-Friendly Design › should use calming background color

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      261 |
      262 |     it('should use calming background color', () => {
    > 263 |       const { container } = render(<Header title="Test Title" />);
          |               ^
      264 |       
      265 |       // Background color #F5F5F5 is a soft, non-harsh color
      266 |       const backgroundElements = container.findAllByProps({ 

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Header.test.tsx:263:15)

FAIL src/components/feature/wellness/__tests__/CrisisAlert.test.tsx
  ● CrisisAlert › Crisis Hotline (Critical Severity) › should call 988 when crisis hotline button is pressed

    TypeError: Cannot read properties of undefined (reading 'canOpenURL')

      168 |
      169 |     it('should call 988 when crisis hotline button is pressed', async () => {
    > 170 |       (Linking.canOpenURL as jest.Mock).mockResolvedValue(true);
          |                ^
      171 |       (Linking.openURL as jest.Mock).mockResolvedValue(true);
      172 |
      173 |       const detection = createDetection('critical');

      at Object.canOpenURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:170:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Crisis Hotline (Critical Severity) › should show alert when unable to make call

    TypeError: Cannot read properties of undefined (reading 'canOpenURL')

      190 |
      191 |     it('should show alert when unable to make call', async () => {
    > 192 |       (Linking.canOpenURL as jest.Mock).mockResolvedValue(false);
          |                ^
      193 |
      194 |       const detection = createDetection('critical');
      195 |       const { getByTestId } = render(

      at Object.canOpenURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:192:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Crisis Hotline (Critical Severity) › should handle text crisis line button

    TypeError: Cannot read properties of undefined (reading 'openURL')

      214 |
      215 |     it('should handle text crisis line button', async () => {
    > 216 |       (Linking.openURL as jest.Mock).mockResolvedValue(true);
          |                ^
      217 |
      218 |       const detection = createDetection('critical');
      219 |       const { getByText } = render(

      at Object.openURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:216:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Error Handling › should handle Linking errors gracefully for phone calls

    TypeError: Cannot read properties of undefined (reading 'canOpenURL')

      420 |   describe('Error Handling', () => {
      421 |     it('should handle Linking errors gracefully for phone calls', async () => {
    > 422 |       (Linking.canOpenURL as jest.Mock).mockRejectedValue(new Error('Linking error'));
          |                ^
      423 |
      424 |       const detection = createDetection('critical');
      425 |       const { getByTestId } = render(

      at Object.canOpenURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:422:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● CrisisAlert › Error Handling › should handle Linking errors gracefully for text messages

    TypeError: Cannot read properties of undefined (reading 'openURL')

      444 |
      445 |     it('should handle Linking errors gracefully for text messages', async () => {
    > 446 |       (Linking.openURL as jest.Mock).mockRejectedValue(new Error('Linking error'));
          |                ^
      447 |
      448 |       const detection = createDetection('critical');
      449 |       const { getByText } = render(

      at Object.openURL (src/components/feature/wellness/__tests__/CrisisAlert.test.tsx:446:16)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/common/__tests__/Card.test.tsx
  ● Card › Styling › should apply default styles

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"borderRadius": 12, "marginBottom": 16}, ObjectContaining {"backgroundColor": "#FFFFFF", "padding": 16}]
    Received: undefined

      50 |       const card = getByTestId('card-content').parent;
      51 |       
    > 52 |       expect(card.props.style).toEqual(
         |                                ^
      53 |         expect.arrayContaining([
      54 |           expect.objectContaining({
      55 |             borderRadius: 12,

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:52:32)

  ● Card › Styling › should apply custom styles

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [{"borderWidth": 1, "marginTop": 20}]
    Received: undefined

      74 |       const card = getByTestId('card-content').parent;
      75 |       
    > 76 |       expect(card.props.style).toEqual(
         |                                ^
      77 |         expect.arrayContaining([customStyle])
      78 |       );
      79 |     });

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:76:32)

  ● Card › Styling › should use custom padding when provided

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"padding": 24}]
    Received: undefined

      88 |       const card = getByTestId('card-content').parent;
      89 |       
    > 90 |       expect(card.props.style).toEqual(
         |                                ^
      91 |         expect.arrayContaining([
      92 |           expect.objectContaining({ padding: 24 }),
      93 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:90:32)

  ● Card › Styling › should use default padding of 16

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"padding": 16}]
    Received: undefined

      104 |       const card = getByTestId('card-content').parent;
      105 |       
    > 106 |       expect(card.props.style).toEqual(
          |                                ^
      107 |         expect.arrayContaining([
      108 |           expect.objectContaining({ padding: 16 }),
      109 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:106:32)

  ● Card › Shadow › should apply shadow by default

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"elevation": 5, "shadowColor": "#000", "shadowOffset": {"height": 2, "width": 0}, "shadowOpacity": 0.1, "shadowRadius": 3.84}]
    Received: undefined

      122 |       const card = getByTestId('card-content').parent;
      123 |       
    > 124 |       expect(card.props.style).toEqual(
          |                                ^
      125 |         expect.arrayContaining([
      126 |           expect.objectContaining({
      127 |             shadowColor: '#000',

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:124:32)

  ● Card › Shadow › should not apply shadow when shadow prop is false

    TypeError: Cannot read properties of undefined (reading 'some')

      145 |       
      146 |       // Should not contain shadow styles
    > 147 |       const hasNoShadowStyles = !card.props.style.some(
          |                                                   ^
      148 |         (style: any) => 
      149 |           style && (
      150 |             style.shadowColor || 

      at Object.some (src/components/common/__tests__/Card.test.tsx:147:51)

  ● Card › Theme Integration › should use theme surface color for background

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"backgroundColor": "#FFFFFF"}]
    Received: undefined

      170 |       const card = getByTestId('card-content').parent;
      171 |       
    > 172 |       expect(card.props.style).toEqual(
          |                                ^
      173 |         expect.arrayContaining([
      174 |           expect.objectContaining({ backgroundColor: '#FFFFFF' }),
      175 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:172:32)

  ● Card › Stress-Friendly Design › should have rounded corners for softer appearance

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"borderRadius": 12}]
    Received: undefined

      188 |       const card = getByTestId('card-content').parent;
      189 |       
    > 190 |       expect(card.props.style).toEqual(
          |                                ^
      191 |         expect.arrayContaining([
      192 |           expect.objectContaining({ borderRadius: 12 }),
      193 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:190:32)

  ● Card › Stress-Friendly Design › should have subtle shadow for depth without harshness

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"shadowOpacity": 0.1}]
    Received: undefined

      205 |       
      206 |       // Shadow opacity is low (0.1) for subtlety
    > 207 |       expect(card.props.style).toEqual(
          |                                ^
      208 |         expect.arrayContaining([
      209 |           expect.objectContaining({ shadowOpacity: 0.1 }),
      210 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:207:32)

  ● Card › Stress-Friendly Design › should have comfortable spacing with margin bottom

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"marginBottom": 16}]
    Received: undefined

      221 |       const card = getByTestId('card-content').parent;
      222 |       
    > 223 |       expect(card.props.style).toEqual(
          |                                ^
      224 |         expect.arrayContaining([
      225 |           expect.objectContaining({ marginBottom: 16 }),
      226 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:223:32)

  ● Card › Edge Cases › should handle empty children

    'container' property has been renamed to 'UNSAFE_root'.

    Consider using 'root' property which returns root host element.

      231 |   describe('Edge Cases', () => {
      232 |     it('should handle empty children', () => {
    > 233 |       const { container } = render(<Card>{null}</Card>);
          |               ^
      234 |       expect(container).toBeTruthy();
      235 |     });
      236 |

      at Object.get (node_modules/@testing-library/react-native/src/render.tsx:144:13)
      at Object.container (src/components/common/__tests__/Card.test.tsx:233:15)

  ● Card › Edge Cases › should handle zero padding

    expect(received).toEqual(expected) // deep equality

    Expected: ArrayContaining [ObjectContaining {"padding": 0}]
    Received: undefined

      244 |       const card = getByTestId('card-content').parent;
      245 |       
    > 246 |       expect(card.props.style).toEqual(
          |                                ^
      247 |         expect.arrayContaining([
      248 |           expect.objectContaining({ padding: 0 }),
      249 |         ])

      at Object.toEqual (src/components/common/__tests__/Card.test.tsx:246:32)

FAIL src/stores/__tests__/wellnessStore.test.ts
  ● wellnessStore › persistence › should load persisted state on initialization

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 4

      344 |
      345 |       expect(result.current.currentMood).toBeTruthy();
    > 346 |       expect(result.current.currentMood?.value).toBe(3); // MoodValue.Neutral
          |                                                 ^
      347 |     });
      348 |   });
      349 |

      at Object.toBe (src/stores/__tests__/wellnessStore.test.ts:346:49)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/services/analytics/__tests__/analyticsService.test.ts
  ● AnalyticsService › Initialization › should initialize with privacy settings respected

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      56 |       
      57 |       expect(mockPostHog.optOut).toHaveBeenCalled();
    > 58 |       expect(mockPostHog.disable).toHaveBeenCalled();
         |                                   ^
      59 |     });
      60 |
      61 |     it('should generate anonymous user ID if none exists', async () => {

      at Object.toHaveBeenCalled (src/services/analytics/__tests__/analyticsService.test.ts:58:35)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx
  ● SyncStatusIndicator › should show synced status when all data is synced

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      16 |
      17 |   it('should show synced status when all data is synced', () => {
    > 18 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      19 |       totalPending: 0,
      20 |       isFullySynced: true,
      21 |       bouncePlan: { pendingOperations: 0, lastSync: new Date() },

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:18:46)

  ● SyncStatusIndicator › should show pending sync count when data needs syncing

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      33 |
      34 |   it('should show pending sync count when data needs syncing', () => {
    > 35 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      36 |       totalPending: 5,
      37 |       isFullySynced: false,
      38 |       bouncePlan: { pendingOperations: 2, lastSync: new Date() },

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:35:46)

  ● SyncStatusIndicator › should show offline indicator when network is disconnected

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      50 |   it('should show offline indicator when network is disconnected', () => {
      51 |     (useNetworkStatus as jest.Mock).mockReturnValue({ isConnected: false });
    > 52 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      53 |       totalPending: 3,
      54 |       isFullySynced: false
      55 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:52:46)

  ● SyncStatusIndicator › should trigger manual sync when pressed

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      62 |
      63 |   it('should trigger manual sync when pressed', async () => {
    > 64 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      65 |       totalPending: 2,
      66 |       isFullySynced: false
      67 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:64:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should show syncing status during sync

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      82 |
      83 |   it('should show syncing status during sync', async () => {
    > 84 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
         |                                              ^
      85 |       totalPending: 2,
      86 |       isFullySynced: false
      87 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:84:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should show error state when sync fails

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      100 |
      101 |   it('should show error state when sync fails', async () => {
    > 102 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
          |                                              ^
      103 |       totalPending: 2,
      104 |       isFullySynced: false
      105 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:102:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should expand to show detailed sync status

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      131 |     };
      132 |
    > 133 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue(mockStatus);
          |                                              ^
      134 |
      135 |     const { getByTestId, getByText } = render(<SyncStatusIndicator />);
      136 |     const expandButton = getByTestId('expand-button');

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:133:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should auto-sync when coming back online

    TypeError: _syncManager.syncManager.getSyncStatus is not a function

      15 | export const SyncStatusIndicator: React.FC = () => {
      16 |   const { isConnected } = useNetworkStatus();
    > 17 |   const [syncStatus, setSyncStatus] = useState(syncManager.getSyncStatus());
         |                                                            ^
      18 |   const [isSyncing, setIsSyncing] = useState(false);
      19 |   const [syncError, setSyncError] = useState<string | null>(null);
      20 |   const [isExpanded, setIsExpanded] = useState(false);

      at getSyncStatus (src/components/feature/sync/SyncStatusIndicator.tsx:17:60)
      at Object.react-stack-bottom-frame (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:12679:20)
      at renderWithHooks (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3622:25)
      at updateFunctionComponent (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:5635:19)
      at beginWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:7086:18)
      at runWithFiberInDEV (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:540:16)
      at performUnitOfWork (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10917:22)
      at workLoopSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10763:41)
      at renderRootSync (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10744:11)
      at performWorkOnRoot (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10299:39)
      at performWorkOnRootViaSchedulerTask (node_modules/react-test-renderer/cjs/react-test-renderer.development.js:1879:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:862:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1151:10)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at renderWithAct (node_modules/@testing-library/react-native/src/render-act.ts:12:11)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:81:33)
      at renderInternal (node_modules/@testing-library/react-native/src/render.tsx:44:10)
      at Object.<anonymous> (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:150:32)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● SyncStatusIndicator › should show conflict resolution UI when conflicts exist

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      171 |
      172 |   it('should show conflict resolution UI when conflicts exist', async () => {
    > 173 |     (syncManager.getSyncStatus as jest.Mock).mockReturnValue({
          |                                              ^
      174 |       totalPending: 2,
      175 |       isFullySynced: false
      176 |     });

      at Object.mockReturnValue (src/components/feature/sync/__tests__/SyncStatusIndicator.test.tsx:173:46)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/components/feature/budget/__tests__/RunwayIndicator.test.tsx
  ● RunwayIndicator › should format projected end date correctly

    Unable to find an element with text: /June 15, 2025/

    [36m<View[39m
      [33maccessibilityLabel[39m=[32m"Financial runway indicator showing 5 months remaining"[39m
      [33maccessibilityRole[39m=[32m"summary"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mFinancial Runway[0m
        [36m</Text>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0m5 months[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m([0m
            [0m150[0m
            [0m days)[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<View[39m
        [33maccessibilityRole[39m=[32m"progressbar"[39m
        [33maccessibilityValue[39m=[32m{
          {
            "max": 100,
            "min": 0,
            "now": 41.0958904109589,
          }
        }[39m
        [33mtestID[39m=[32m"runway-progress-bar"[39m
      [36m>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"runway-progress-fill"[39m
        [36m/>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mTotal available funds[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$15,000.00[0m
          [36m</Text>[39m
        [36m</View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mMonthly burn[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$3,000.00[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<Text>[39m
        [0mFunds projected until [0m
        [0mJune 14, 2025[0m
      [36m</Text>[39m
    [36m</View>[39m

      136 |
      137 |     expect(getByText(/Funds projected until/)).toBeTruthy();
    > 138 |     expect(getByText(/June 15, 2025/)).toBeTruthy();
          |            ^
      139 |   });
      140 |
      141 |   it('should show monthly burn rate', () => {

      at Object.getByText (src/components/feature/budget/__tests__/RunwayIndicator.test.tsx:138:12)

  ● RunwayIndicator › should show monthly burn rate

    Unable to find an element with text: Monthly burn: $3,500.00

    [36m<View[39m
      [33maccessibilityLabel[39m=[32m"Financial runway indicator showing 4.3 months remaining"[39m
      [33maccessibilityRole[39m=[32m"summary"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mFinancial Runway[0m
        [36m</Text>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0m4.3 months[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m([0m
            [0m129[0m
            [0m days)[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<View[39m
        [33maccessibilityRole[39m=[32m"progressbar"[39m
        [33maccessibilityValue[39m=[32m{
          {
            "max": 100,
            "min": 0,
            "now": 35.342465753424655,
          }
        }[39m
        [33mtestID[39m=[32m"runway-progress-bar"[39m
      [36m>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"runway-progress-fill"[39m
        [36m/>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mTotal available funds[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$15,000.00[0m
          [36m</Text>[39m
        [36m</View>[39m
        [36m<View>[39m
          [36m<Text>[39m
            [0mMonthly burn[0m
          [36m</Text>[39m
          [36m<Text>[39m
            [0m$3,500.00[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<Text>[39m
        [0mFunds projected until [0m
        [0mMay 14, 2025[0m
      [36m</Text>[39m
    [36m</View>[39m

      153 |     );
      154 |
    > 155 |     expect(getByText('Monthly burn: $3,500.00')).toBeTruthy();
          |            ^
      156 |   });
      157 |
      158 |   it('should handle infinite runway gracefully', () => {

      at Object.getByText (src/components/feature/budget/__tests__/RunwayIndicator.test.tsx:155:12)

FAIL src/stores/__tests__/budgetStore.test.ts
  ● BudgetStore › State Management › should generate alerts for low runway

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      74 |       });
      75 |
    > 76 |       expect(result.current.alerts.length).toBeGreaterThan(0);
         |                                            ^
      77 |       expect(result.current.alerts.some(a => a.type === 'low_runway')).toBe(true);
      78 |     });
      79 |   });

      at Object.toBeGreaterThan (src/stores/__tests__/budgetStore.test.ts:76:44)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetStore › Local Storage › should handle AsyncStorage errors gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Failed to load budget data"
    Received: "Storage error"

      150 |       });
      151 |
    > 152 |       expect(result.current.error).toBe('Failed to load budget data');
          |                                    ^
      153 |       expect(result.current.budgetData).toBeNull();
      154 |     });
      155 |   });

      at Object.toBe (src/stores/__tests__/budgetStore.test.ts:152:36)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetStore › Alert Management › should dismiss alerts

    expect(received).toBeDefined()

    Received: undefined

      175 |
      176 |       const alertId = result.current.alerts[0]?.id;
    > 177 |       expect(alertId).toBeDefined();
          |                       ^
      178 |
      179 |       act(() => {
      180 |         result.current.dismissAlert(alertId);

      at Object.toBeDefined (src/stores/__tests__/budgetStore.test.ts:177:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/services/database/__tests__/bouncePlan.test.ts
  ● bouncePlan database service › edge cases and error scenarios › database connection scenarios › should handle malformed database responses

    expect(received).toEqual(expected) // deep equality

    Expected: []
    Received: "invalid-data"

      603 |
      604 |         const result = await loadBouncePlanProgress('user123');
    > 605 |         expect(result.tasks).toEqual([]);
          |                              ^
      606 |       });
      607 |
      608 |       it('should handle null data from database', async () => {

      at Object.toEqual (src/services/database/__tests__/bouncePlan.test.ts:605:30)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/utils/__tests__/bouncePlanHelpers.test.ts
  ● Task Unlock Timing Logic › should not unlock future days tasks even after 9 AM

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      231 |     
      232 |     const currentTime = new Date();
    > 233 |     expect(currentTime < day2Unlock).toBe(true);
          |                                      ^
      234 |   });
      235 |
      236 |   it('should keep tasks unlocked once their unlock time has passed', () => {

      at Object.toBe (src/utils/__tests__/bouncePlanHelpers.test.ts:233:38)

  ● Task Unlock Timing Logic › should keep tasks unlocked once their unlock time has passed

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      252 |     const day6Unlock = new Date(startDate);
      253 |     day6Unlock.setDate(day6Unlock.getDate() + 5);
    > 254 |     expect(currentTime < day6Unlock).toBe(true);
          |                                      ^
      255 |   });
      256 |
      257 |   it('should handle daylight saving time transitions', () => {

      at Object.toBe (src/utils/__tests__/bouncePlanHelpers.test.ts:254:38)

FAIL src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx
  ● MoodTrendsChart › Data Points › should highlight highest and lowest points

    Unable to find an element with testID: mood-point-highest

    [36m<View[39m
      [33maccessibilityLabel[39m=[32m"Mood trend chart for This Week. Average mood: 3.5. 25% improvement. Lowest on 1/6/2025, highest on 1/8/2025."[39m
      [33maccessibilityRole[39m=[32m"image"[39m
      [33mtestID[39m=[32m"mood-trends-chart"[39m
    [36m>[39m
      [36m<View>[39m
        [36m<Text>[39m
          [0mThis Week[0m
        [36m</Text>[39m
        [36m<Text>[39m
          [0mAverage: [0m
          [0m3.5[0m
        [36m</Text>[39m
      [36m</View>[39m
      [36m<View[39m
        [33mtestID[39m=[32m"mood-chart-container"[39m
      [36m>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"mood-chart-points"[39m
        [36m/>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"svg-Svg"[39m
        [36m>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"svg-Line"[39m
          [36m/>[39m
          [36m<View[39m
            [33mtestID[39m=[32m"mood-chart-line"[39m
          [36m/>[39m
          [36m<View[39m
            [33maccessibilityLabel[39m=[32m"Good mood on 1/8/2025"[39m
            [33mtestID[39m=[32m"mood-point-0"[39m
          [36m/>[39m
          [36m<View[39m
            [33maccessibilityLabel[39m=[32m"Neutral mood on 1/7/2025"[39m
            [33mtestID[39m=[32m"mood-point-1"[39m
          [36m/>[39m
          [36m<View[39m
            [33maccessibilityLabel[39m=[32m"Low mood on 1/6/2025"[39m
            [33mtestID[39m=[32m"mood-point-2"[39m
          [36m/>[39m
        [36m</View>[39m
      [36m</View>[39m
      [36m<View>[39m
        [36m<View[39m
          [33mtestID[39m=[32m"improvement-indicator"[39m
        [36m>[39m
          [36m<Text>[39m
            [0m25% improvement[0m
          [36m</Text>[39m
        [36m</View>[39m
      [36m</View>[39m
    [36m</View>[39m

      120 |       );
      121 |
    > 122 |       const highestPoint = getByTestId('mood-point-highest');
          |                            ^
      123 |       const lowestPoint = getByTestId('mood-point-lowest');
      124 |
      125 |       expect(highestPoint).toBeTruthy();

      at Object.getByTestId (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:122:28)

  ● MoodTrendsChart › Accessibility › should have accessible data points

    expect(received).toContain(expected) // indexOf

    Expected substring: "January 9"
    Received string:    "Good mood on 1/8/2025"

      187 |       const point = getByTestId('mood-point-0');
      188 |       expect(point.props.accessibilityLabel).toContain('Good mood');
    > 189 |       expect(point.props.accessibilityLabel).toContain('January 9');
          |                                              ^
      190 |     });
      191 |   });
      192 |

      at Object.toContain (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:189:46)

  ● MoodTrendsChart › Visual Indicators › should use calming colors for positive trends

    expect(received).toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      198 |
      199 |       const improvementIndicator = getByTestId('improvement-indicator');
    > 200 |       expect(improvementIndicator.props.style.color).toContain('green');
          |                                                      ^
      201 |     });
      202 |
      203 |     it('should use supportive colors for negative trends', () => {

      at Object.toContain (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:200:54)

  ● MoodTrendsChart › Visual Indicators › should use supportive colors for negative trends

    expect(received).not.toContain(expected) // indexOf

    Matcher error: received value must not be null nor undefined

    Received has value: undefined

      210 |       const declineIndicator = getByTestId('decline-indicator');
      211 |       // Using orange/amber instead of red for stress-friendly design
    > 212 |       expect(declineIndicator.props.style.color).not.toContain('red');
          |                                                      ^
      213 |       expect(declineIndicator.props.style.color).toContain('orange');
      214 |     });
      215 |   });

      at Object.toContain (src/components/feature/wellness/__tests__/MoodTrendsChart.test.tsx:212:54)

FAIL src/services/notifications/__tests__/notificationService.test.ts
  ● NotificationService › Permission Handling › should request notification permissions

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Permission Handling › should handle permission denial gracefully

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Permission Handling › should check existing permissions before requesting

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Permission Handling › should return false on simulator

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Push Token Registration › should register and store push token

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Push Token Registration › should handle token registration errors

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Daily Task Reminders › should schedule daily task reminder at 9am local time

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Daily Task Reminders › should cancel existing reminder before scheduling new one

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Daily Task Reminders › should respect user preferences for daily reminders

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Job Application Follow-ups › should schedule follow-up reminder for job application

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Job Application Follow-ups › should not schedule follow-up if preferences disabled

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Budget Alerts › should trigger alert when runway drops below 60 days

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Budget Alerts › should not trigger alert if runway is healthy

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Budget Alerts › should respect alert cooldown period

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Mood Check-in Reminders › should schedule evening mood check-in

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Preferences › should save notification preferences

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Preferences › should load saved preferences

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Preferences › should return default preferences if none saved

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Do Not Disturb Scheduling › should respect quiet hours for non-urgent notifications

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Do Not Disturb Scheduling › should allow urgent notifications during quiet hours

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Handlers › should handle notification response for daily task

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Notification Handlers › should handle foreground notifications appropriately

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Local Notifications for Offline › should use local notifications when offline

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

  ● NotificationService › Deep Linking › should include deep link data in notifications

    TypeError: Cannot read properties of undefined (reading 'mockReturnValue')

      27 |     
      28 |     // Default mocks
    > 29 |     (Device.isDevice as jest.Mock).mockReturnValue(true);
         |                                    ^
      30 |     (AsyncStorage.getItem as jest.Mock).mockResolvedValue(null);
      31 |     (AsyncStorage.setItem as jest.Mock).mockResolvedValue(undefined);
      32 |   });

      at Object.mockReturnValue (src/services/notifications/__tests__/notificationService.test.ts:29:36)

FAIL src/services/wellness/__tests__/wellnessService.test.ts
  ● wellnessService › getRecentMoods › should fetch recent moods from database

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"createdAt": 2025-07-13T04:16:10.522Z, "id": "offline-mock-uuid", "note": "Struggling today", "synced": false, "updatedAt": 2025-07-13T04:16:10.522Z, "userId": "user-123", "value": 2}]

      136 |       const result = await wellnessService.getRecentMoods(30);
      137 |
    > 138 |       expect(result).toHaveLength(2);
          |                      ^
      139 |       expect(result[0].value).toBe(MoodValue.Good);
      140 |       expect(result[1].value).toBe(MoodValue.Neutral);
      141 |     });

      at Object.toHaveLength (src/services/wellness/__tests__/wellnessService.test.ts:138:22)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › getRecentMoods › should merge offline and online moods

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  [{"createdAt": 2025-01-09T00:00:00.000Z, "id": "offline-1", "synced": false, "updatedAt": 2025-01-09T00:00:00.000Z, "userId": "user-123", "value": 2}]

      182 |       const result = await wellnessService.getRecentMoods(30);
      183 |
    > 184 |       expect(result).toHaveLength(2);
          |                      ^
      185 |       expect(result[0].value).toBe(MoodValue.Low); // More recent offline mood
      186 |       expect(result[1].value).toBe(MoodValue.Good); // Older online mood
      187 |     });

      at Object.toHaveLength (src/services/wellness/__tests__/wellnessService.test.ts:184:22)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › calculateTrend › should calculate weekly mood trend

    expect(received).toBeCloseTo(expected, precision)

    Expected: 3.5
    Received: 0

    Expected precision:    1
    Expected difference: < 0.05
    Received difference:   3.5

      219 |
      220 |       expect(trend.period).toBe('week');
    > 221 |       expect(trend.average).toBeCloseTo(3.5, 1); // Average of Good(4) and Neutral(3)
          |                             ^
      222 |       expect(trend.entries).toHaveLength(7);
      223 |     });
      224 |

      at Object.toBeCloseTo (src/services/wellness/__tests__/wellnessService.test.ts:221:29)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › calculateTrend › should calculate improvement rate

    expect(received).toBeGreaterThan(expected)

    Expected: > 0
    Received:   0

      253 |       const trend = await wellnessService.calculateTrend('week');
      254 |
    > 255 |       expect(trend.improvementRate).toBeGreaterThan(0); // Should show improvement
          |                                     ^
      256 |     });
      257 |   });
      258 |

      at Object.toBeGreaterThan (src/services/wellness/__tests__/wellnessService.test.ts:255:37)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › syncOfflineMoods › should sync offline moods when connection is restored

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: "@next_chapter/mood_offline_1"
    Received: "@next_chapter/mood_offline_offline-1"

    Number of calls: 1

      335 |
      336 |       expect(syncedCount).toBe(1);
    > 337 |       expect(mockAsyncStorage.removeItem).toHaveBeenCalledWith('@next_chapter/mood_offline_1');
          |                                           ^
      338 |     });
      339 |
      340 |     it('should handle sync failures gracefully', async () => {

      at Object.toHaveBeenCalledWith (src/services/wellness/__tests__/wellnessService.test.ts:337:43)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● wellnessService › exportMoodData › should export mood data in specified format

    expect(received).toContain(expected) // indexOf

    Expected substring: "\"value\":4"
    Received string:    "[
      {
        \"id\": \"0.69295825268384\",
        \"user_id\": \"user-123\",
        \"value\": 4,
        \"note\": \"Great day\",
        \"created_at\": \"2025-07-13T04:16:10.534Z\",
        \"updated_at\": \"2025-07-13T04:16:10.534Z\"
      },
      {
        \"id\": \"0.04248549129368229\",
        \"user_id\": \"user-123\",
        \"value\": 2,
        \"note\": \"Tough day\",
        \"created_at\": \"2025-07-13T04:16:10.534Z\",
        \"updated_at\": \"2025-07-13T04:16:10.534Z\"
      }
    ]"

      392 |       const exportData = await wellnessService.exportMoodData('json');
      393 |
    > 394 |       expect(exportData).toContain('"value":4');
          |                          ^
      395 |       expect(exportData).toContain('"note":"Great day"');
      396 |     });
      397 |   });

      at Object.toContain (src/services/wellness/__tests__/wellnessService.test.ts:394:26)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/stores/__tests__/bouncePlanStore.offline.test.ts
  ● BouncePlanStore - Offline Queue › Persistence › should persist offline queue to storage

    TypeError: Cannot read properties of undefined (reading 'getOptions')

      221 |
      222 |       // Get the persisted state
    > 223 |       const persistedState = useBouncePlanStore.persist.getOptions().partialize!(
          |                                                         ^
      224 |         result.current
      225 |       );
      226 |

      at Object.getOptions (src/stores/__tests__/bouncePlanStore.offline.test.ts:223:57)

FAIL src/components/coach/__tests__/CoachHeader.test.tsx
  ● CoachHeader › Rendering › should render with AI Coach title

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Rendering › should show online status indicator

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Rendering › should show sync indicator when cloud sync is enabled

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Rendering › should not show sync indicator when cloud sync is disabled

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should call onSettingsPress when settings button is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should show confirmation alert when clear conversation is pressed

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should call clearConversation when user confirms clear

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › User Interactions › should not call clearConversation when user cancels

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Accessibility › should have proper accessibility labels

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Accessibility › should have proper accessibility roles

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Theme Support › should apply theme colors correctly

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

  ● CoachHeader › Crisis Considerations › should maintain clear conversation functionality even during crisis

    TypeError: _coachStore.useCoachStore.mockReturnValue is not a function

      20 |   beforeEach(() => {
      21 |     jest.clearAllMocks();
    > 22 |     (useCoachStore as unknown as jest.Mock).mockReturnValue(mockCoachStore);
         |                                             ^
      23 |   });
      24 |
      25 |   describe('Rendering', () => {

      at Object.mockReturnValue (src/components/coach/__tests__/CoachHeader.test.tsx:22:45)

FAIL src/services/budget/__tests__/budgetService.test.ts
  ● BudgetService › saveBudgetData › should encrypt sensitive data before saving

    TypeError: _supabase.supabase.from(...).update is not a function

      83 |     const { data, error } = await supabase
      84 |       .from('budget_data')
    > 85 |       .update(dbData)
         |        ^
      86 |       .eq('id', budgetData.id)
      87 |       .select()
      88 |       .single();

      at update (src/services/budget/budgetService.ts:85:8)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › saveBudgetData › should update existing budget data if ID exists

    TypeError: Cannot read properties of undefined (reading 'Utf8')

      18 | function decryptData(encryptedData: string): string {
      19 |   const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);
    > 20 |   return bytes.toString(CryptoJS.enc.Utf8);
         |                                      ^
      21 | }
      22 |
      23 | /**

      at Utf8 (src/services/budget/budgetService.ts:20:38)
      at decryptData (src/services/budget/budgetService.ts:53:31)
      at fromDbFormat (src/services/budget/budgetService.ts:104:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › saveBudgetData › should handle save errors gracefully

    expect(received).rejects.toThrow(expected)

    Expected substring: "Database error"
    Received message:   "_supabase.supabase.from(...).update is not a function"

          83 |     const { data, error } = await supabase
          84 |       .from('budget_data')
        > 85 |       .update(dbData)
             |        ^
          86 |       .eq('id', budgetData.id)
          87 |       .select()
          88 |       .single();

      at update (src/services/budget/budgetService.ts:85:8)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at Object.toThrow (node_modules/expect/build/index.js:218:22)
      at Object.toThrow (src/services/budget/__tests__/budgetService.test.ts:125:60)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetService › loadBudgetData › should decrypt sensitive data after loading

    TypeError: Cannot read properties of undefined (reading 'Utf8')

      18 | function decryptData(encryptedData: string): string {
      19 |   const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);
    > 20 |   return bytes.toString(CryptoJS.enc.Utf8);
         |                                      ^
      21 | }
      22 |
      23 | /**

      at Utf8 (src/services/budget/budgetService.ts:20:38)
      at decryptData (src/services/budget/budgetService.ts:53:31)
      at fromDbFormat (src/services/budget/budgetService.ts:131:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › loadBudgetData › should parse dates correctly

    TypeError: Cannot read properties of undefined (reading 'Utf8')

      18 | function decryptData(encryptedData: string): string {
      19 |   const bytes = CryptoJS.AES.decrypt(encryptedData, ENCRYPTION_KEY);
    > 20 |   return bytes.toString(CryptoJS.enc.Utf8);
         |                                      ^
      21 | }
      22 |
      23 | /**

      at Utf8 (src/services/budget/budgetService.ts:20:38)
      at decryptData (src/services/budget/budgetService.ts:53:31)
      at fromDbFormat (src/services/budget/budgetService.ts:131:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● BudgetService › Data Encryption › should only encrypt sensitive financial fields

    TypeError: _supabase.supabase.from(...).update is not a function

      83 |     const { data, error } = await supabase
      84 |       .from('budget_data')
    > 85 |       .update(dbData)
         |        ^
      86 |       .eq('id', budgetData.id)
      87 |       .select()
      88 |       .single();

      at update (src/services/budget/budgetService.ts:85:8)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

FAIL src/stores/__tests__/jobTrackerStore.test.ts
  ● jobTrackerStore › loadApplications › should load applications from Supabase when user is authenticated

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › loadApplications › should load from AsyncStorage when offline

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › loadApplications › should handle errors gracefully

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › addApplication › should add application to Supabase when online

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › addApplication › should create temporary application when offline

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › updateApplicationStatus › should update application status

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › deleteApplication › should delete application from Supabase

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › search and filter › should update search query

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › search and filter › should update selected status filter

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

  ● jobTrackerStore › syncWithSupabase › should sync temporary applications with Supabase

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      33 |     
      34 |     // Mock Supabase auth
    > 35 |     (supabase.auth.getUser as jest.Mock).mockResolvedValue({
         |                                          ^
      36 |       data: { user: { id: 'user-123' } },
      37 |       error: null,
      38 |     });

      at Object.mockResolvedValue (src/stores/__tests__/jobTrackerStore.test.ts:35:42)

FAIL src/services/notifications/__tests__/notificationIntegration.test.ts
  ● Notification System Integration › Complete User Journey › should handle first-time user notification setup

    TypeError: Cannot read properties of undefined (reading 'mockResolvedValue')

      42 |       // Register for push notifications
      43 |       const mockToken = 'ExponentPushToken[abc123]';
    > 44 |       (Notifications.getExpoPushTokenAsync as jest.Mock).mockResolvedValue({
         |                                                          ^
      45 |         data: mockToken,
      46 |       });
      47 |       

      at Object.mockResolvedValue (src/services/notifications/__tests__/notificationIntegration.test.ts:44:58)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle job application flow with follow-up

    TypeError: Cannot read properties of undefined (reading 'DATE')

      195 |       },
      196 |       trigger: {
    > 197 |         type: SchedulableTriggerInputTypes.DATE,
          |                                            ^
      198 |         date: followUpDate,
      199 |       },
      200 |     });

      at NotificationService.DATE (src/services/notifications/notificationService.ts:197:44)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle budget alert flow

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 2

      116 |       
      117 |       // Should not send another alert within 24 hours
    > 118 |       expect(Notifications.scheduleNotificationAsync).toHaveBeenCalledTimes(1);
          |                                                       ^
      119 |     });
      120 |
      121 |     it('should respect quiet hours', async () => {

      at Object.toHaveBeenCalledTimes (src/services/notifications/__tests__/notificationIntegration.test.ts:118:55)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle preference changes

    TypeError: Cannot read properties of undefined (reading 'DATE')

      195 |       },
      196 |       trigger: {
    > 197 |         type: SchedulableTriggerInputTypes.DATE,
          |                                            ^
      198 |         date: followUpDate,
      199 |       },
      200 |     });

      at NotificationService.DATE (src/services/notifications/notificationService.ts:197:44)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Complete User Journey › should handle notification permission denial gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      239 |
      240 |       const granted = await notificationService.requestPermissions();
    > 241 |       expect(granted).toBe(false);
          |                       ^
      242 |
      243 |       // App should still function without notifications
      244 |       await notificationService.scheduleDailyTaskReminder();

      at Object.toBe (src/services/notifications/__tests__/notificationIntegration.test.ts:241:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)

  ● Notification System Integration › Error Handling › should handle notification scheduling errors

    expect(received).resolves.not.toThrow()

    Received promise rejected instead of resolved
    Rejected to value: [TypeError: scheduled is not iterable]

      256 |
      257 |       // Should not throw, just log error
    > 258 |       await expect(
          |             ^
      259 |         notificationService.scheduleDailyTaskReminder()
      260 |       ).resolves.not.toThrow();
      261 |     });

      at expect (node_modules/expect/build/index.js:113:15)
      at Object.expect (src/services/notifications/__tests__/notificationIntegration.test.ts:258:13)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/utils/budget/__tests__/budgetCalculations.test.ts
  ● Budget Calculations › calculateFinancialRunway › should calculate runway correctly with all income sources

    expect(received).toBeCloseTo(expected, precision)

    Expected: 6.96
    Received: 7

    Expected precision:    2
    Expected difference: < 0.005
    Received difference:   0.040000000000000036

      29 |       expect(runway.totalAvailableFunds).toBe(25400); // 10000 + 5000 + (400 * 26)
      30 |       expect(runway.monthlyBurn).toBe(3650); // 3000 + 650
    > 31 |       expect(runway.runwayInMonths).toBeCloseTo(6.96, 2);
         |                                     ^
      32 |       expect(runway.runwayInDays).toBe(209); // ~6.96 months * 30 days
      33 |       expect(runway.isLowRunway).toBe(false);
      34 |     });

      at Object.toBeCloseTo (src/utils/budget/__tests__/budgetCalculations.test.ts:31:37)

FAIL src/screens/main/__tests__/BudgetScreen.test.tsx
  ● BudgetScreen › should update budget when form is submitted

    TypeError: Cannot read properties of undefined (reading 'alert')

      85 |   const validateForm = (): boolean => {
      86 |     if (!formData.state) {
    > 87 |       Alert.alert('Missing Information', 'Please select your state.');
         |             ^
      88 |       return false;
      89 |     }
      90 |

      at alert (src/components/feature/budget/BudgetForm.tsx:87:13)
      at validateForm (src/components/feature/budget/BudgetForm.tsx:106:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12
      at apply (src/components/feature/budget/BudgetForm.tsx:105:21)
      at handler (node_modules/@testing-library/react-native/src/fire-event.ts:137:19)
      at callback (node_modules/@testing-library/react-native/src/act.ts:31:24)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1081:22)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at fireEvent (node_modules/@testing-library/react-native/src/fire-event.ts:136:11)
      at Function.fireEvent [as press] (node_modules/@testing-library/react-native/src/fire-event.ts:144:3)
      at Object.press (src/screens/main/__tests__/BudgetScreen.test.tsx:216:15)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetScreen › should update budget when form is submitted

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"currentSavings": 10000, "monthlyExpenses": 3000, "monthlyIncome": 5000, "severanceAmount": 5000}, true

    Number of calls: 0

      216 |     fireEvent.press(submitButton);
      217 |
    > 218 |     await waitFor(() => {
          |                  ^
      219 |       expect(mockUpdateBudget).toHaveBeenCalledWith(
      220 |         expect.objectContaining({
      221 |           monthlyIncome: 5000,

      at Object.<anonymous> (src/screens/main/__tests__/BudgetScreen.test.tsx:218:18)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

FAIL src/screens/main/__tests__/WellnessScreen.test.tsx
  ● WellnessScreen › Mood Selection › should enable submit button after mood selection

    TypeError: Cannot read properties of undefined (reading 'disabled')

      124 |
      125 |       const submitButton = getByText('Log Mood');
    > 126 |       expect(submitButton.props.accessibilityState.disabled).toBe(true);
          |                                                    ^
      127 |
      128 |       fireEvent.press(getByTestId('mood-option-3'));
      129 |       

      at Object.disabled (src/screens/main/__tests__/WellnessScreen.test.tsx:126:52)

  ● WellnessScreen › Mood Submission › should save mood entry when submitted

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      Object {
    -   "note": "",
    +   "note": undefined,
        "value": 4,
      },

    Number of calls: 1

      141 |       fireEvent.press(getByText('Log Mood'));
      142 |
    > 143 |       await waitFor(() => {
          |                    ^
      144 |         expect(defaultMockStore.addMoodEntry).toHaveBeenCalledWith({
      145 |           value: MoodValue.Good,
      146 |           note: '',

      at Object.<anonymous> (src/screens/main/__tests__/WellnessScreen.test.tsx:143:20)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● WellnessScreen › Crisis Intervention › should trigger coach with appropriate tone for emotional state

    Unable to find an element with text: Talk to Coach

    [36m<View>[39m
      [36m<RCTScrollView>[39m
        [36m<RCTRefreshControl />[39m
        [36m<View>[39m
          [36m<View[39m
            [33maccessibilityRole[39m=[32m"alert"[39m
            [33mtestID[39m=[32m"support-resources"[39m
          [36m>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mWe're Here to Help[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Dismiss alert"[39m
                [33maccessibilityRole[39m=[32m"button"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dismiss-button"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Feather"[39m
                [36m>[39m
                  [0mx[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Talk to AI Coach button"[39m
                [33maccessibilityRole[39m=[32m"button"[39m
                [33maccessible[39m=[32m{true}[39m
              [36m>[39m
                [36m<Text>[39m
                  [0mTalk to AI Coach[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mHow are you feeling today?[0m
            [36m</Text>[39m
            [36m<View[39m
              [33mtestID[39m=[32m"mood-selector"[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityHint[39m=[32m"Selected Very Low mood"[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": true,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-1"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Low[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-2"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mLow[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Neutral mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-3"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mNeutral[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-4"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mGood[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-5"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Good[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<TextInput[39m
                [33mplaceholder[39m=[32m"What's on your mind? (optional)"[39m
                [33mvalue[39m=[32m"Feeling hopeless"[39m
              [36m/>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessibilityRole[39m=[32m"button"[39m
              [33maccessibilityState[39m=[32m{
                {
                  "disabled": false,
                }
              }[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0mLog Mood[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      256 |       fireEvent.changeText(noteInput, 'Feeling hopeless');
      257 |       
    > 258 |       fireEvent.press(getByText('Talk to Coach'));
          |                       ^
      259 |
      260 |       await waitFor(() => {
      261 |         expect(mockNavigate).toHaveBeenCalledWith('Coach', {

      at Object.getByText (src/screens/main/__tests__/WellnessScreen.test.tsx:258:23)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● WellnessScreen › Mood History and Trends › should display mood trends chart

    Unable to find an element with text: 15% improvement

    [36m<View>[39m
      [36m<RCTScrollView>[39m
        [36m<RCTRefreshControl />[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mHow are you feeling today?[0m
            [36m</Text>[39m
            [36m<View[39m
              [33mtestID[39m=[32m"mood-selector"[39m
            [36m>[39m
              [36m<View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-1"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Low[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Low mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-2"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mLow[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Neutral mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-3"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mNeutral[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-4"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mGood[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
                [36m<View>[39m
                  [36m<View[39m
                    [33maccessibilityLabel[39m=[32m"Select Very Good mood"[39m
                    [33maccessibilityRole[39m=[32m"button"[39m
                    [33maccessibilityState[39m=[32m{
                      {
                        "disabled": false,
                        "selected": false,
                      }
                    }[39m
                    [33maccessible[39m=[32m{true}[39m
                    [33mtestID[39m=[32m"mood-option-5"[39m
                  [36m>[39m
                    [36m<Text>[39m
                      [0m��[0m
                    [36m</Text>[39m
                    [36m<Text>[39m
                      [0mVery Good[0m
                    [36m</Text>[39m
                  [36m</View>[39m
                [36m</View>[39m
              [36m</View>[39m
            [36m</View>[39m
            [36m<View[39m
              [33maccessibilityRole[39m=[32m"button"[39m
              [33maccessibilityState[39m=[32m{
                {
                  "disabled": true,
                }
              }[39m
              [33maccessible[39m=[32m{true}[39m
            [36m>[39m
              [36m<Text>[39m
                [0mLog Mood[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mYour Mood Trends[0m
            [36m</Text>[39m
            [36m<View[39m
              [33mtestID[39m=[32m"mood-trends-chart"[39m
            [36m>[39m
              [36m<Text>[39m
                [0mNo mood data for this period[0m
              [36m</Text>[39m
            [36m</View>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      322 |
      323 |       expect(getByTestId('mood-trends-chart')).toBeTruthy();
    > 324 |       expect(getByText('15% improvement')).toBeTruthy();
          |              ^
      325 |     });
      326 |
      327 |     it('should show mood streak', () => {

      at Object.getByText (src/screens/main/__tests__/WellnessScreen.test.tsx:324:14)

FAIL src/stores/__tests__/coachStore.test.ts
  ● Test suite failed to run

    Cannot find module '../../services/database/supabase' from 'src/stores/__tests__/coachStore.test.ts'

       6 | // Mock dependencies
       7 | jest.mock('@react-native-async-storage/async-storage');
    >  8 | jest.mock('../../services/database/supabase', () => ({
         |      ^
       9 |   supabase: {
      10 |     auth: {
      11 |       getUser: jest.fn().mockResolvedValue({ data: { user: { id: 'test-user-id' } } }),

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.mock (src/stores/__tests__/coachStore.test.ts:8:6)

FAIL src/components/feature/budget/__tests__/BudgetForm.test.tsx
  ● BudgetForm › should render all form fields

    Found multiple elements with placeholder: Enter amount

      69 |     );
      70 |
    > 71 |     expect(getByPlaceholderText('Enter amount')).toBeTruthy();
         |            ^
      72 |     expect(getByText('Monthly Income (pre-layoff)')).toBeTruthy();
      73 |     expect(getByText('Current Savings')).toBeTruthy();
      74 |     expect(getByText('Monthly Expenses')).toBeTruthy();

      at Object.getByPlaceholderText (src/components/feature/budget/__tests__/BudgetForm.test.tsx:71:12)

  ● BudgetForm › should populate form with initial data

    Unable to find an element with displayValue: $5,000

    [36m<View[39m
      [33mtestID[39m=[32m"budget-form"[39m
    [36m>[39m
      [36m<RCTScrollView>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Income (pre-layoff)[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mYour salary before being laid off[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly income before layoff"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-income-input"[39m
              [33mvalue[39m=[32m"$5,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mCurrent Savings[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mTotal amount in savings, checking, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Current total savings"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"current-savings-input"[39m
              [33mvalue[39m=[32m"$10,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Expenses[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mRent, utilities, food, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly expenses"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-expenses-input"[39m
              [33mvalue[39m=[32m"$3,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSeverance Amount[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mIf applicable[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Severance amount received"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"severance-amount-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mState[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mFor unemployment benefit calculation[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<RNCPicker[39m
                  [33maccessibilityLabel[39m=[32m"Select your state"[39m
                  [33mtestID[39m=[32m"state-picker"[39m
                [36m/>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mHad employer health insurance?[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor COBRA cost estimation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<RCTSwitch[39m
              [33maccessibilityLabel[39m=[32m"Had employer health insurance"[39m
              [33maccessibilityRole[39m=[32m"switch"[39m
              [33mtestID[39m=[32m"health-insurance-switch"[39m
              [33mvalue[39m=[32m{true}[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mNumber of dependents[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor insurance cost calculation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Decrease dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-decrease"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0mremove[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Text[39m
                [33mtestID[39m=[32m"dependents-value"[39m
              [36m>[39m
                [0m0[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Increase dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-increase"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0madd[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
            [33mtestID[39m=[32m"submit-button"[39m
          [36m>[39m
            [36m<Text>[39m
              [0mCalculate Runway[0m
            [36m</Text>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      84 |     );
      85 |
    > 86 |     expect(getByDisplayValue('$5,000')).toBeTruthy();
         |            ^
      87 |     expect(getByDisplayValue('$10,000')).toBeTruthy();
      88 |     expect(getByDisplayValue('$3,000')).toBeTruthy();
      89 |     expect(getByDisplayValue('CA')).toBeTruthy();

      at Object.getByDisplayValue (src/components/feature/budget/__tests__/BudgetForm.test.tsx:86:12)

  ● BudgetForm › should format currency inputs correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "$5,000.50"
    Received: "5000.50"

       99 |     
      100 |     fireEvent.changeText(incomeInput, '5000.50');
    > 101 |     expect(incomeInput.props.value).toBe('$5,000.50');
          |                                     ^
      102 |
      103 |     fireEvent.changeText(incomeInput, '1234567.89');
      104 |     expect(incomeInput.props.value).toBe('$1,234,567.89');

      at Object.toBe (src/components/feature/budget/__tests__/BudgetForm.test.tsx:101:37)

  ● BudgetForm › should validate required fields

    TypeError: Cannot read properties of undefined (reading 'alert')

      85 |   const validateForm = (): boolean => {
      86 |     if (!formData.state) {
    > 87 |       Alert.alert('Missing Information', 'Please select your state.');
         |             ^
      88 |       return false;
      89 |     }
      90 |

      at alert (src/components/feature/budget/BudgetForm.tsx:87:13)
      at validateForm (src/components/feature/budget/BudgetForm.tsx:106:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12
      at apply (src/components/feature/budget/BudgetForm.tsx:105:21)
      at handler (node_modules/@testing-library/react-native/src/fire-event.ts:137:19)
      at callback (node_modules/@testing-library/react-native/src/act.ts:31:24)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1081:22)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at fireEvent (node_modules/@testing-library/react-native/src/fire-event.ts:136:11)
      at Function.fireEvent [as press] (node_modules/@testing-library/react-native/src/fire-event.ts:144:3)
      at Object.press (src/components/feature/budget/__tests__/BudgetForm.test.tsx:113:15)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should validate required fields

    Cannot read properties of undefined (reading 'alert')

      113 |     fireEvent.press(submitButton);
      114 |
    > 115 |     await waitFor(() => {
          |                  ^
      116 |       expect(Alert.alert).toHaveBeenCalledWith(
      117 |         'Missing Information',
      118 |         expect.stringContaining('Please fill in all required fields')

      at Object.<anonymous> (src/components/feature/budget/__tests__/BudgetForm.test.tsx:115:18)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should validate numeric inputs

    TypeError: Cannot read properties of undefined (reading 'alert')

      85 |   const validateForm = (): boolean => {
      86 |     if (!formData.state) {
    > 87 |       Alert.alert('Missing Information', 'Please select your state.');
         |             ^
      88 |       return false;
      89 |     }
      90 |

      at alert (src/components/feature/budget/BudgetForm.tsx:87:13)
      at validateForm (src/components/feature/budget/BudgetForm.tsx:106:10)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12
      at apply (src/components/feature/budget/BudgetForm.tsx:105:21)
      at handler (node_modules/@testing-library/react-native/src/fire-event.ts:137:19)
      at callback (node_modules/@testing-library/react-native/src/act.ts:31:24)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:1081:22)
      at actImplementation (node_modules/@testing-library/react-native/src/act.ts:30:25)
      at fireEvent (node_modules/@testing-library/react-native/src/fire-event.ts:136:11)
      at Function.fireEvent [as press] (node_modules/@testing-library/react-native/src/fire-event.ts:144:3)
      at Object.press (src/components/feature/budget/__tests__/BudgetForm.test.tsx:134:15)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should validate numeric inputs

    Cannot read properties of undefined (reading 'alert')

      134 |     fireEvent.press(submitButton);
      135 |
    > 136 |     await waitFor(() => {
          |                  ^
      137 |       expect(Alert.alert).toHaveBeenCalledWith(
      138 |         'Invalid Input',
      139 |         expect.stringContaining('Please enter valid numbers')

      at Object.<anonymous> (src/components/feature/budget/__tests__/BudgetForm.test.tsx:136:18)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should update dependents count with stepper

    expect(received).toBe(expected) // Object.is equality

    Expected: "0"
    Received: 0

      166 |     const dependentsValue = getByTestId('dependents-value');
      167 |
    > 168 |     expect(dependentsValue.props.children).toBe('0');
          |                                            ^
      169 |
      170 |     fireEvent.press(increaseButton);
      171 |     expect(dependentsValue.props.children).toBe('1');

      at Object.toBe (src/components/feature/budget/__tests__/BudgetForm.test.tsx:168:44)

  ● BudgetForm › should show loading state while submitting

    Unable to find an element with text: Calculating...

    [36m<View[39m
      [33mtestID[39m=[32m"budget-form"[39m
    [36m>[39m
      [36m<RCTScrollView>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Income (pre-layoff)[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mYour salary before being laid off[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly income before layoff"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-income-input"[39m
              [33mvalue[39m=[32m"$5,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mCurrent Savings[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mTotal amount in savings, checking, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Current total savings"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"current-savings-input"[39m
              [33mvalue[39m=[32m"$10,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Expenses[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mRent, utilities, food, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly expenses"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-expenses-input"[39m
              [33mvalue[39m=[32m"$3,000.00"[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSeverance Amount[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mIf applicable[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Severance amount received"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"severance-amount-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mState[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mFor unemployment benefit calculation[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<RNCPicker[39m
                  [33maccessibilityLabel[39m=[32m"Select your state"[39m
                  [33mtestID[39m=[32m"state-picker"[39m
                [36m/>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mHad employer health insurance?[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor COBRA cost estimation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<RCTSwitch[39m
              [33maccessibilityLabel[39m=[32m"Had employer health insurance"[39m
              [33maccessibilityRole[39m=[32m"switch"[39m
              [33mtestID[39m=[32m"health-insurance-switch"[39m
              [33mvalue[39m=[32m{true}[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mNumber of dependents[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor insurance cost calculation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Decrease dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-decrease"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0mremove[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Text[39m
                [33mtestID[39m=[32m"dependents-value"[39m
              [36m>[39m
                [0m0[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Increase dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-increase"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0madd[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": true,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
            [33mtestID[39m=[32m"submit-button"[39m
          [36m>[39m
            [36m<ActivityIndicator />[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      210 |     fireEvent.press(submitButton);
      211 |
    > 212 |     expect(getByText('Calculating...')).toBeTruthy();
          |            ^
      213 |     expect(getByTestId('submit-button')).toBeDisabled();
      214 |
      215 |     await waitFor(() => {

      at Object.getByText (src/components/feature/budget/__tests__/BudgetForm.test.tsx:212:12)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:17)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:17:9)
      at node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:7
      at Object.<anonymous> (node_modules/@babel/runtime/helpers/asyncToGenerator.js:14:12)

  ● BudgetForm › should render state picker with all US states

    TypeError: Cannot read properties of undefined (reading 'length')

      249 |     
      250 |     // Should have 51 items (50 states + default selection)
    > 251 |     expect(statePicker.props.children.length).toBe(51);
          |                                       ^
      252 |   });
      253 |
      254 |   it('should show helper text for form fields', () => {

      at Object.length (src/components/feature/budget/__tests__/BudgetForm.test.tsx:251:39)

  ● BudgetForm › should be accessible with proper labels

    Unable to find an element with accessibility label: Number of dependents

    [36m<View[39m
      [33mtestID[39m=[32m"budget-form"[39m
    [36m>[39m
      [36m<RCTScrollView>[39m
        [36m<View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Income (pre-layoff)[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mYour salary before being laid off[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly income before layoff"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-income-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mCurrent Savings[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mTotal amount in savings, checking, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Current total savings"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"current-savings-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mMonthly Expenses[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mRent, utilities, food, etc.[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Monthly expenses"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"monthly-expenses-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mSeverance Amount[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mIf applicable[0m
            [36m</Text>[39m
            [36m<TextInput[39m
              [33maccessibilityLabel[39m=[32m"Severance amount received"[39m
              [33mplaceholder[39m=[32m"Enter amount"[39m
              [33mtestID[39m=[32m"severance-amount-input"[39m
              [33mvalue[39m=[32m""[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<Text>[39m
              [0mState[0m
            [36m</Text>[39m
            [36m<Text>[39m
              [0mFor unemployment benefit calculation[0m
            [36m</Text>[39m
            [36m<View>[39m
              [36m<View>[39m
                [36m<RNCPicker[39m
                  [33maccessibilityLabel[39m=[32m"Select your state"[39m
                  [33mtestID[39m=[32m"state-picker"[39m
                [36m/>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mHad employer health insurance?[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor COBRA cost estimation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<RCTSwitch[39m
              [33maccessibilityLabel[39m=[32m"Had employer health insurance"[39m
              [33maccessibilityRole[39m=[32m"switch"[39m
              [33mtestID[39m=[32m"health-insurance-switch"[39m
              [33mvalue[39m=[32m{false}[39m
            [36m/>[39m
          [36m</View>[39m
          [36m<View>[39m
            [36m<View>[39m
              [36m<Text>[39m
                [0mNumber of dependents[0m
              [36m</Text>[39m
              [36m<Text>[39m
                [0mFor insurance cost calculation[0m
              [36m</Text>[39m
            [36m</View>[39m
            [36m<View>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Decrease dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-decrease"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0mremove[0m
                [36m</Text>[39m
              [36m</View>[39m
              [36m<Text[39m
                [33mtestID[39m=[32m"dependents-value"[39m
              [36m>[39m
                [0m0[0m
              [36m</Text>[39m
              [36m<View[39m
                [33maccessibilityLabel[39m=[32m"Increase dependents count"[39m
                [33maccessible[39m=[32m{true}[39m
                [33mtestID[39m=[32m"dependents-increase"[39m
              [36m>[39m
                [36m<Text[39m
                  [33mtestID[39m=[32m"icon-Ionicons"[39m
                [36m>[39m
                  [0madd[0m
                [36m</Text>[39m
              [36m</View>[39m
            [36m</View>[39m
          [36m</View>[39m
          [36m<View[39m
            [33maccessibilityState[39m=[32m{
              {
                "disabled": false,
              }
            }[39m
            [33maccessible[39m=[32m{true}[39m
            [33mtestID[39m=[32m"submit-button"[39m
          [36m>[39m
            [36m<Text>[39m
              [0mCalculate Runway[0m
            [36m</Text>[39m
          [36m</View>[39m
        [36m</View>[39m
      [36m</RCTScrollView>[39m
    [36m</View>[39m

      275 |     expect(getByLabelText('Select your state')).toBeTruthy();
      276 |     expect(getByLabelText('Had employer health insurance')).toBeTruthy();
    > 277 |     expect(getByLabelText('Number of dependents')).toBeTruthy();
          |            ^
      278 |   });
      279 | });

      at Object.getByLabelText (src/components/feature/budget/__tests__/BudgetForm.test.tsx:277:12)


Test Suites: 49 failed, 29 passed, 78 total
Tests:       274 failed, 6 skipped, 908 passed, 1188 total
Snapshots:   0 total
Time:        9.664 s
