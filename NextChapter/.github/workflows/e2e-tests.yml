name: E2E Tests

on:
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Allow manual triggers

jobs:
  test-ios:
    name: iOS E2E Tests
    runs-on: macOS-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.npm
            ~/Library/Caches/CocoaPods
            ios/Pods
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json', '**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Install Pods
        working-directory: ios
        run: pod install
        
      - name: Setup Ruby (for Detox)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          
      - name: Install Detox CLI
        run: npm install -g detox-cli
        
      - name: Build iOS app for testing
        run: npm run test:e2e:build:ios
        
      - name: Run E2E tests
        run: npm run test:e2e:ci
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-artifacts-ios
          path: |
            e2e/artifacts/
            e2e/reports/
            
  test-android:
    name: Android E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.npm
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-deps-${{ hashFiles('**/package-lock.json', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-deps-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Install Detox CLI
        run: npm install -g detox-cli
        
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Create AVD
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-33;google_apis;x86_64"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n Pixel_7_API_33 -k "system-images;android-33;google_apis;x86_64" --device "pixel_7"
          
      - name: Start emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd Pixel_7_API_33 -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell input keyevent 82
          
      - name: Build Android app for testing
        run: npm run test:e2e:build:android
        
      - name: Run E2E tests
        run: npm run test:e2e:android -- --headless --record-logs all
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          
      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-artifacts-android
          path: |
            e2e/artifacts/
            e2e/reports/
            
  report:
    name: Test Report
    needs: [test-ios, test-android]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download iOS artifacts
        uses: actions/download-artifact@v3
        with:
          name: e2e-artifacts-ios
          path: artifacts/ios
        continue-on-error: true
        
      - name: Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: e2e-artifacts-android
          path: artifacts/android
        continue-on-error: true
        
      - name: Generate test report
        run: |
          echo "# E2E Test Report" > report.md
          echo "## iOS Tests" >> report.md
          if [ -f artifacts/ios/reports/junit.xml ]; then
            echo "✅ iOS tests completed" >> report.md
          else
            echo "❌ iOS tests failed or did not run" >> report.md
          fi
          echo "## Android Tests" >> report.md
          if [ -f artifacts/android/reports/junit.xml ]; then
            echo "✅ Android tests completed" >> report.md
          else
            echo "❌ Android tests failed or did not run" >> report.md
          fi
          
      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
            
      - name: Send Slack notification
        if: failure() && github.event_name == 'schedule'
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Nightly E2E tests failed!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}